<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>主机路由详解</title>
      <link href="/2021/03/17/%E4%B8%BB%E6%9C%BA%E8%B7%AF%E7%94%B1%E8%AF%A6%E8%A7%A3/"/>
      <url>/2021/03/17/%E4%B8%BB%E6%9C%BA%E8%B7%AF%E7%94%B1%E8%AF%A6%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<p>——此【主机路由】指主机上的路由规则，非全网络位的前缀路由条目。</p><h2 id="主机双网卡使用说明"><a href="#主机双网卡使用说明" class="headerlink" title="主机双网卡使用说明"></a>主机双网卡使用说明</h2><p>写这篇文章的原因就是一些云主机客户在添加双网卡之后，网络出现连通性问题，这里先直接给出最优解，后文会详细阐述涉及的原理和其它一些相关性技术。</p><h3 id="Windows——保证双网卡配置正确启用即可"><a href="#Windows——保证双网卡配置正确启用即可" class="headerlink" title="Windows——保证双网卡配置正确启用即可"></a>Windows——保证双网卡配置正确启用即可</h3><h4 id="使用-DHCP-获取地址"><a href="#使用-DHCP-获取地址" class="headerlink" title="使用 DHCP 获取地址"></a>使用 DHCP 获取地址</h4><p><img src="/images/主机路由详解/win1.png" alt="win1"></p><p>这是最推荐的方式，简单不容易出错，若网络连通性还有问题，请检查地址的获取情况和路由表状态</p><ul><li><p>检查地址的获取情况</p><figure class="highlight plain"><figcaption><span>config</span><a href="/all```">link</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- 路由表状态</span><br><span class="line"></span><br><span class="line">  ```route print</span><br></pre></td></tr></table></figure></li></ul><h4 id="手动配置"><a href="#手动配置" class="headerlink" title="手动配置"></a>手动配置</h4><p><img src="/images/主机路由详解/win2.png" alt="win2"></p><p>注意保证网卡对应地址和网关配置的正确性。</p><h3 id="Linux——策略路由"><a href="#Linux——策略路由" class="headerlink" title="Linux——策略路由"></a>Linux——策略路由</h3><p>网卡信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">eth0 192.168.10.100 (gw)192.168.10.1</span><br><span class="line">eth1 192.168.20.100 (gw)192.168.20.1</span><br></pre></td></tr></table></figure><p>新建路由表并添加默认路由</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">### eth0</span><br><span class="line"># echo &quot;101 net_100&quot; &gt;&gt; /etc/iproute2/rt_tables</span><br><span class="line"># ip route add default via 192.168.10.1 dev eth0 table net_100</span><br><span class="line"></span><br><span class="line">### eth1</span><br><span class="line"># echo &quot;101 net_101&quot; &gt;&gt; /etc/iproute2/rt_tables</span><br><span class="line"># ip route add default via 192.168.20.1 dev eth1 table net_101</span><br><span class="line"></span><br><span class="line">### 持久化</span><br><span class="line">### 使用 -p 参数，或者在 /etc/rc.local 中添加 route 命令来保证该路由设置永久有效</span><br><span class="line">### /etc/rc.local 文件不生效，尝试</span><br><span class="line"># cat /etc/sysconfig/network-scripts/route-eth0</span><br><span class="line">default via 192.168.10.1 dev eth1 table net_101</span><br><span class="line"># cat /etc/sysconfig/network-scripts/route-eth1</span><br><span class="line">default via 192.168.20.1 dev eth2 table net_102</span><br><span class="line"></span><br><span class="line">### PS：可以只新建一张路由表，另一张使用系统的</span><br></pre></td></tr></table></figure><p>添加策略路由</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">### eth0</span><br><span class="line"># ip rule add from 192.168.10.100 table net_100</span><br><span class="line"></span><br><span class="line">### eth1</span><br><span class="line"># ip rule add from 192.168.20.100 table net_101</span><br><span class="line"></span><br><span class="line">### 持久化</span><br><span class="line"># echo &quot;ip rule add from 192.168.3.0/24 table storage&quot; &gt;&gt; /etc/rc.local</span><br><span class="line"># chmod +x /etc/rc.d/rc.local</span><br></pre></td></tr></table></figure><h2 id="技术原理详解"><a href="#技术原理详解" class="headerlink" title="技术原理详解"></a>技术原理详解</h2><h3 id="路由简介"><a href="#路由简介" class="headerlink" title="路由简介"></a>路由简介</h3><h4 id="路由判断位置"><a href="#路由判断位置" class="headerlink" title="路由判断位置"></a>路由判断位置</h4><p>其实在系统内有两处判断路由的地方，以 Linux 为例，一处是 prerouting，另一处是 output：</p><p><img src="/images/主机路由详解/iptables数据处理流程.png" alt="iptables数据处理流程"></p><p>主机系统一般只有 output，开启路由功能后 prerouting 才会判断不丢弃，简单理解一个为主机自身选路，另一个为转发非自身产生的报文。</p><h4 id="路由三要素"><a href="#路由三要素" class="headerlink" title="路由三要素"></a>路由三要素</h4><ul><li><p>网络前缀：匹配的唯一条件（最长匹配原则）</p></li><li><p>逃出接口：发包的出口</p></li><li><p>下一跳：数据包的下一站，一般为网关地址</p></li></ul><p>ps：逃出接口和下一跳可二选一，缺少逃出接口会递归查询直到得到逃出接口，缺少下一跳会导致 ARP 请求（一般为末梢网络，否则下一目的设备必须有 ARP 代答）</p><p>ext：路由类型，有直连路由、静态路由、动态路由(很多子类)等；路由管理距离，不同的路由类型具有不同的管理距离，可以简单理解为优先级；metric，路由条目的代价值，可以理解为当管理距离和路由前缀一致时使用的优先级</p><h3 id="为什么-Windows-双网卡配置那么简单"><a href="#为什么-Windows-双网卡配置那么简单" class="headerlink" title="为什么 Windows 双网卡配置那么简单"></a>为什么 Windows 双网卡配置那么简单</h3><p>在正式讲解通用的解决方案前，需要把 Windows 的情况单独拿出来说，因为它的路由机制做了一定的优化处理。</p><p>前文有提到两点，一是对于主机来说一般是不需要开启路由功能的，二是路由的唯一匹配条件是网络前缀。基于此，Windows 当系统未开启路由功能时，路由判断的时候把逃出接口改为了逃出接口的 IP 地址并做了校验。</p><p>下图是不同子网的双网卡生成的路由表：</p><p><img src="/images/主机路由详解/windiff.png" alt="Win 路由表"></p><p>我们看到有俩条优先级不同的默认路由（其实还有一条高优先级的没有逃出接口的未活动默认路由），当使用次网卡的时候，虽然匹配了高优先级默认路由，但是此时对源地址做了校验（注意这不是常规操作），所以最后走了低优先级路由。</p><p>经过测试，当 Windows 开启路由功能后，路由规则就符合常理了，不会进行这个校验，因为这个校验会所有的转发报文被丢弃。此时，Windows 的双网卡使用自然也有问题了。</p><p><strong><em>在补充个知识点——源地址是如何决定的？</em></strong><br><strong><em>- 当存在 bind 时：</em></strong><br><strong><em>此时一般是被动建立的连接，或者主动发起时指定源地址，自然使用的 bind 地址</em></strong><br><strong><em>- 当不存在 bind 时：</em></strong><br><strong><em>此时只有不指定源时主动发起访问，源地址来源于逃出接口的地址</em></strong></p><p>附：<br><a href="https://www.mdeditor.tw/pl/pStO" target="_blank" rel="noopener">Windows 开启路由功能</a><br><a href="https://www.linuxidc.com/Linux/2016-12/138661.htm" target="_blank" rel="noopener">Linux 开启路由功能</a></p><p>接下来，我们来看看常规的解决办法吧（据笔者所知，Windows无法使用关闭反向路由检查和策略路由）：</p><ul><li>明细路由</li><li>关闭反向路由检查</li><li>策略路由</li></ul><h3 id="明细路由"><a href="#明细路由" class="headerlink" title="明细路由"></a>明细路由</h3><p>我们已经知道双网卡造成连通性的根因是主机无法根据路由判断数据包往哪发了，那我们就根据业务需求和规划，写明哪个网段走哪个出口就好了。</p><p>缺点：既然写了规矩，自然是哪些网段走哪个口整的明明白白的，不能两个网口同时向所有网段提供服务了，明细网段二选一。</p><p>根据业务需求，分为同子网接入和不同子网接入两种情况，一般明细路由的使用情况建议采用不同子网模式。</p><p><img src="/images/主机路由详解/双网卡使用情形.png" alt="双网卡使用情形"></p><p>其实，两种情况就只是下一跳的值不一样，便于管理和逻辑清晰推荐不同子网。</p><p>附：<br>Windows 详细配置明细路由可参见链接的第三部分：<a href="https://cloud.tencent.com/developer/article/1493985" target="_blank" rel="noopener">Windows 路由表详解</a><br>Linux 详细配置明细路由：<a href="https://blog.csdn.net/devil_2009/article/details/6768935" target="_blank" rel="noopener">关于Linux路由表的route命令</a></p><h3 id="关闭反向路由检查"><a href="#关闭反向路由检查" class="headerlink" title="关闭反向路由检查"></a>关闭反向路由检查</h3><p>rp_filter 本身会过滤反向路由不通的数据包。用通俗的话解释一下，就是NIC1 有 incoming 数据包，Reverse Path Filtering 模块会将数据包的源地址和目的地址(srcIP-&gt;dstIP)调转过来成为(dstIP-&gt;srcIP)，然后在路由表中查找这个(dstIP-&gt;srcIP) 的路由，如果出口恰好是 NIC1 那么 rp_filter 测试通过，否则不通过/丢弃。</p><p>0：不开启源地址校验。<br>1：开启严格的反向路径校验。对每个进来的数据包，校验其反向路径是否是最佳路径。如果反向路径不是最佳路径，则直接丢弃该数据包。<br>2：开启松散的反向路径校验。对每个进来的数据包，校验其源地址是否可达，即反向路径是否能通（通过任意网口），如果反向路径不同，则直接丢弃该数据包。</p><p>基于此，我们可以把它关闭，然后保证只有一条默认路由（优先级也好，不指定网关也罢，都是可以采取的措施）。此时主动访问时主机已经明确知道走默认路由的那张网卡了，而对于被动访问的次网卡，egress 流量其实走的还是主网卡，我们只是关闭掉反向路由检查放行了。</p><p>此种方式并不推荐，原因如下：</p><ul><li>egress 流量还是占用主网卡的带宽</li><li>一般云平台都会对 IP 和 Mac 的映射关系进行检查</li></ul><p>附：<a href="https://myscis.cn/?p=289" target="_blank" rel="noopener">Linux 关闭 rpf</a></p><h3 id="策略路由"><a href="#策略路由" class="headerlink" title="策略路由"></a>策略路由</h3><p>路由选路的唯一匹配条件就是网络前缀，策略路由可以基于报文的其它信息，比如来源端口和五元组其它信息等。</p><p>路由因只能使用网络前缀匹配导致无法分别两个接口的流量，我们这里就基于不同的源地址使数据包从不同的接口出去，实现原进原出。</p><p>这里顺便提一下路由策略，其是路由收敛时采取的机制，这里就不展开介绍了，注意不要混淆即可。</p><p>附：<a href="https://www.cnblogs.com/wanstack/p/7728785.html" target="_blank" rel="noopener">策略路由配置参考</a></p>]]></content>
      
      
      <categories>
          
          <category> technology </category>
          
      </categories>
      
      
        <tags>
            
            <tag> network </tag>
            
            <tag> cloud </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>成都购房指北</title>
      <link href="/2020/10/28/%E6%88%90%E9%83%BD%E8%B4%AD%E6%88%BF%E6%8C%87%E5%8C%97/"/>
      <url>/2020/10/28/%E6%88%90%E9%83%BD%E8%B4%AD%E6%88%BF%E6%8C%87%E5%8C%97/</url>
      
        <content type="html"><![CDATA[<p><strong><em>版权归我大轩哥所有</em></strong></p><h3 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h3><ol><li>认购，付定金（定金不能退）</li><li>签约，付首付（包含定金，付清余款）</li><li>等合同流程，等房管局备案</li><li>办理贷款</li></ol><h3 id="需准备材料"><a href="#需准备材料" class="headerlink" title="需准备材料"></a>需准备材料</h3><h4 id="必须准备的"><a href="#必须准备的" class="headerlink" title="必须准备的"></a>必须准备的</h4><ol><li>身份证原件，身份证复印件</li><li>户口本原件（户口页+本人页/常住人口登记表），户口本复印件</li><li>房屋认购书，合同，补充协议等涉及甲乙方签合约的文件</li><li>房屋认购定金收据，POS单</li><li>首付款POS单，收据。（首付款只能刷购房者本人卡，且为储蓄卡，信用卡不能刷。如果是网银转账需要去银行打印该条流水明细。）首付款的POS单和收据的金额要完全一致，并和合同写明的首付款金额完全一致。</li><li>房屋付款情况说明（一般开发商会主动提供）</li><li>收入证明（盖公司鲜章，月收入需达到名下所有负债的2.2-2.5倍）</li><li>银行流水（任何银行6个月/有的要求12个月以上的流水，需达到月供2.2-2.5倍，可提供多张银行卡的）</li><li>个人征信报告明细版（网申的不行，要去提供征信查询服务的网点打印）</li><li>所办理按揭银行的银行卡（一般会要求省内的，必须为一类卡，居住地为国内）</li><li>办理按揭的公证费（现金或转账）</li><li>备一些零钱现金，办卡之类的可能会用到</li></ol><h4 id="其他情况需额外提供的"><a href="#其他情况需额外提供的" class="headerlink" title="其他情况需额外提供的"></a>其他情况需额外提供的</h4><h5 id="情况一：需要办理公积金贷款的"><a href="#情况一：需要办理公积金贷款的" class="headerlink" title="情况一：需要办理公积金贷款的"></a>情况一：需要办理公积金贷款的</h5><p>个人贷款公积金最高40万，家庭为单位可贷款70万，剩余贷款部分使用商业贷款，称为组合贷。</p><ol><li>住房公积金个人查询单（24个月以上，需去提供公积金服务的网点打印）</li><li>若为异地缴存，需提供异地贷款职工住房公积金缴存使用证明（和查询单一并打印，有效期2个月）</li></ol><h5 id="情况二：有其他贷款的"><a href="#情况二：有其他贷款的" class="headerlink" title="情况二：有其他贷款的"></a>情况二：有其他贷款的</h5><p>需提供其他贷款的合同原件（一般需要本人去银行借贷中心提取）</p><h5 id="情况三：委托他人办理的"><a href="#情况三：委托他人办理的" class="headerlink" title="情况三：委托他人办理的"></a>情况三：委托他人办理的</h5><ol><li>双方身份证原件，复印件</li><li>双方户口本原件，复印件</li><li>双方婚姻登记证明（已婚的提供结婚证，未婚的提供未婚证明，在公证处办）</li><li>委托书（有的开发商会要求购房委托、贷款委托分开，有的可以合在一起开，在公证处办）</li><li>公证费，一千元左右</li></ol><h3 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h3><ol><li>贷款只能贷整数金额，小数部分要放到首付里结清。</li><li>首付可以申请分期结清，大部分开发商都支持，可以商量。</li><li>首付款一定要用购房人的名义付款，从本人银行卡走流水，不然会非常麻烦。</li><li>办手续过程中需要填地址的，要跟开发商问清楚，一般不允许出现楼盘名称等信息。</li><li>等额本金和等额本息：<ul><li>等额本金：每个月还一样的钱。月供本金↑，利息↓。</li><li>等额本息：越还越少。月供中本金↓，利息↑。如果考虑几年后出售，则此种方法比较合算。</li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> emotion </category>
          
      </categories>
      
      
        <tags>
            
            <tag> note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>所爱隔山海，山海难平——浅谈SDN</title>
      <link href="/2020/07/15/%E6%89%80%E7%88%B1%E9%9A%94%E5%B1%B1%E6%B5%B7%EF%BC%8C%E5%B1%B1%E6%B5%B7%E9%9A%BE%E5%B9%B3%E2%80%94%E2%80%94%E6%B5%85%E8%B0%88SDN/"/>
      <url>/2020/07/15/%E6%89%80%E7%88%B1%E9%9A%94%E5%B1%B1%E6%B5%B7%EF%BC%8C%E5%B1%B1%E6%B5%B7%E9%9A%BE%E5%B9%B3%E2%80%94%E2%80%94%E6%B5%85%E8%B0%88SDN/</url>
      
        <content type="html"><![CDATA[<p><strong><em>本文已投稿至 <a href="https://www.sdnlab.com/24294.html" target="_blank" rel="noopener">SDNLAB</a></em></strong></p><p><em>本文含大量主观看法，请以辩证的态度看待，另外本人认知有限，也在不断地学习和接受新知识，保留自省的权利。</em></p><p>正文开始前，我想简单提下我个人的经历，可能更容易有共感，也更易发现我观点中的偏执之处。一开始，我从事的是路由交换这样的传统网络工作，由于该方向在我个人职业规划上难看到较大发展，转型网络安全，后面随着SDN这个黑盒子的打开，兴趣所在，一头扎进了云计算网络相关的工作。</p><h3 id="网络与云计算网络"><a href="#网络与云计算网络" class="headerlink" title="网络与云计算网络"></a>网络与云计算网络</h3><p>什么是网络呢？有点难到我了，不知该从何处讲起。网络是埋在地下的光缆，是无处不在的电磁波，也是一个个的路由器、交换机，还是我们玩的微博、抖音。</p><p>得，直接搬维基百科吧：</p><blockquote><p><em>计算机网络</em>，通常也简称网络，是指容许节点分享资源的数字电信网络。在电脑网络，电脑设备会透过节点之间的连接互相交换数据。用于创建、路由及终止数据传输的电脑网络设备即为网络节点，比如个人电脑、电话、服务器、路由器等。当一个设备能够与另一设备交换信息时，便可视它们俩已连接成网络，而要维持网络的可靠性，便需要有一定的网络管理技能。</p></blockquote><p>本文讨论的网络意指狭义上的二、三层网络，其作用简要说明一下，就是标识、收敛、寻址和控制转发，这里就不展开赘述了。</p><p>那什么是云计算网络呢？这里就计算、存储、网络三个最大的方面一块说了吧。</p><p>计算：云计算的目标是可以自由调度计算资源，简单说就是可以随时按需提供CPU、GPU。那这些资源哪里来，这就是虚拟化了，使用虚拟化技术将这些分散的CPU等虚拟化为一个资源池，然后按需从里面分割出资源。</p><p>存储：同样是把一堆存储设备，比如SSD、HHD通过虚拟化技术向用户按需提供，云计算的作用是调度。这里能看出虚拟化的另一好处便是，更容易进行备份冗余。</p><p>网络：当我们提供出计算、存储资源后，这些资源要怎么通信呢？这些虚拟的设备我们不能直接拿网线、交换机、路由器去连啊，这时候就到网络功能虚拟化（NFV）和网络虚拟化上场了，使用虚拟逻辑网元将这些虚拟资源进行连接，再通过网络协议栈或其他手段（如 openflow）实现连通。这时，网络不仅是端到端的互联，还相当于一个云的总线系统。</p><h3 id="网络虚拟化与虚拟网络"><a href="#网络虚拟化与虚拟网络" class="headerlink" title="网络虚拟化与虚拟网络"></a>网络虚拟化与虚拟网络</h3><p>网络虚拟化我从来都认为其不是一项向前发展的技术，而是定义好的网络标准逐渐向实际网络业务妥协的一个过程。网络提供的是一种“自下而上”的服务：受网络功能的约束，而不是受业务需求的驱动。简单来说，就是当我们在使用网络的过程中，需要某些功能，这些功能原有的网络标准字段无法支持，我们就使用封装或者映射的方式，即再包裹一层或者字段置换来给予支持。</p><p>所以，网络虚拟化技术看起来五花八门，说到底其实就两个——封装和映射。封装，最典型的就是各种VPN了，比如IPSec、GRE等，还有目前云计算的基石之一VXLAN；映射，常见的就是NAT、代理一类。</p><p>无出其右，虚拟网络又是一次无奈的妥协。由于网络硬件厂商们因种种原因没能支持适配云计算网络的需求，软件研发者们干脆把数据包再包裹一层，在内层天马行空，这就是虚拟网络了，也常称为overlay网络，外层就老老实实扮演好管道的角色，即underlay网络，最明显的代价就是再次封装带来的转发性能损耗。</p><h3 id="SDN界的叛徒——openflow"><a href="#SDN界的叛徒——openflow" class="headerlink" title="SDN界的叛徒——openflow"></a>SDN界的叛徒——openflow</h3><p>接下来开始进入正题，谈SDN。其是一种思想，是为了实现网络控制平面和数据平面解耦的技术统称。</p><p>首先，来看看为什么要实现数控分离。在传统网络中，控制平面功能是分布式的运行在各个网络节点中的，如果想支持一个新的网络功能，就必须将所有网络设备进行升级，这极大地限制了网络创新，更不符合云计算网络中快速变更和迭代的需求。数控分离后，数据平面只需要关注通用的转发，尽可能的利用各种技术提高封包、拆包和转发的速率，控制平面则专注于抉择转发路径，同时扩展、迭代新功能以便支持业务需求。</p><p>既然说到SDN，就不得不提openflow。老实说，我个人是比较反感openflow的。我是对网络很感兴趣才入行的，网络最大的特性之一就是自愈性，当网元加入、离开网络，亦或是故障，网络会快速地自动重新收敛。原谅文笔糟糕的的我，不知道该怎么去形容它的美，让我如此痴迷，比如二层防环的生成树，OSPF最短路径的贪心算法，还有快速重路由等等，网元靠着这些算法、机制和协议，构建出一张张可靠的网络。提到的这些和我们沉浸刷LeetCode的快感并无二致，openflow虽然依葫芦画瓢也都能实现，但我在其中并没有感受到同样的快感。</p><p>然而，由于云计算的发展，前文有提到，二者一拍即合，有了现在的虚拟网络。SDN本是为了解放网络应运而生的，但在目前从业过程中，其让我的烦躁有过之而无不及，所以我将其称之为叛徒。</p><h3 id="山海难平"><a href="#山海难平" class="headerlink" title="山海难平"></a>山海难平</h3><p>看着DPDK、RDMA、SmartNIC、FPGA这些技术的发展，SDN的数据面可谓是一片光明，但控制面看着却让人糟心。</p><p>举个简单的例子，为了实现DVR，即点到点的二至三层转发，控制面我们既要同步mac信息，又要传递主机路由，为什么我们都已经重新封装了，还要笨拙的去模拟原先的网络协议栈，只有在不符合预期功能的时候才强行打破规则。</p><p>所以无关协议转发也是SDN的一个发展方向，另一个方向自然是去掉封装，向下打平，没错，说的就是Segment Routing，这种分布式智能加上集中控制的源路由方式又深深地吸引了我。</p><p>容器其实在这方面做过一些简单的尝试，比如flannel的vxlan模式较原生的vxlan模式，已经不是大二层的概念了，其根本是由路由控制的，减少了内层二层信息在三层上的泛滥，再比如calico考虑和实体网元交互信息从而打平网络，但这种全量的分发和隔离控制在大规模网络下并不可取，这些都是小打小闹了。反观云原生，其所谓的四层以上的SDN，ServiceMesh，好不热闹，二、三层却好像还是一地鸡毛。</p><p>另外在从业过程中，也发现一些比较奇怪的现象，比如大家好像总喜欢推崇虚拟网络，乐于去攻坚其中的复杂问题，undelay网络却不屑一顾。其实在我看来，虚拟网络反而是很简单的那一个，而且得益于现在大规模数据中心底层clos架构的推进，就算是公有云的规模，虚拟网络的控制层面在网络结构的复杂性上面还是远远不及传统网络的，正如前文所述，其意义更像是一个云系统的总线，也正由于此，很多人总向我说，控制面不就是简单的向下下发配置么，也是，overlay的组网目前都还较为简单，流量工程就更远了。但随着规模的增长、5G和边缘计算的发展、云网融合等，我们对于云网络的需求远远不是止步于此。目前的挑战就已经很严峻了，但更大的挑战还在后面，我们正因为此，勇攀高峰，行业也正因为此，蒸蒸日上。希望我们在解决云网络控制面的问题时，不要总是聚焦于传统互联网那一套解决方案，可以多多借鉴其本身的网络思想，说不定柳暗花明又一村呢。</p><p>愿海有舟可渡，山有路可行！</p>]]></content>
      
      
      <categories>
          
          <category> technology </category>
          
      </categories>
      
      
        <tags>
            
            <tag> network </tag>
            
            <tag> sdn </tag>
            
            <tag> cloud </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mac使用zmodem传输文件</title>
      <link href="/2020/04/02/Mac%E4%BD%BF%E7%94%A8zmodem%E4%BC%A0%E8%BE%93%E6%96%87%E4%BB%B6/"/>
      <url>/2020/04/02/Mac%E4%BD%BF%E7%94%A8zmodem%E4%BC%A0%E8%BE%93%E6%96%87%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<p>最近有将本地文件跨认证机和中控机传向服务器的需求，scp当然跪了，无法使用，就找到这个更好用的方法了，分享一波。</p><blockquote><p>rz,sz命令传输文件，比使用scp要方便得多，特别是在图形界面打开终端，SSH登陆到远程机器需要传输文件的时候。<br>但是MacOS里Terminal.app并不支持Zmodel传输,好在iTerm2具备较强的扩展性可以通过简单的配置支持Zmodem传输。</p></blockquote><h3 id="安装配置"><a href="#安装配置" class="headerlink" title="安装配置"></a>安装配置</h3><h4 id="安装lrzsz"><a href="#安装lrzsz" class="headerlink" title="安装lrzsz"></a>安装lrzsz</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install lrzsz</span><br></pre></td></tr></table></figure><p>如果安装遇到错误的话，使用以下方法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -k https://ohse.de/uwe/releases/lrzsz-0.12.20.tar.gz -o lrzsz-0.12.20.tar.gz</span><br></pre></td></tr></table></figure></p><p>将下载的文件放到 <strong><em>~/Library/Caches/Homebrew</em></strong> 目录下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install lrzsz</span><br></pre></td></tr></table></figure></p><h4 id="安装iterm2-zmodem文件"><a href="#安装iterm2-zmodem文件" class="headerlink" title="安装iterm2-zmodem文件"></a>安装iterm2-zmodem文件</h4><p>将 <strong><em>iterm2-recv-zmodem.sh</em></strong> 和 <strong><em>iterm2-send-zmodem.sh</em></strong> 脚本保存在 <strong><em>/usr/local/bin/</em></strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"># iterm2-recv-zmodem.sh</span><br><span class="line"></span><br><span class="line">FILE=`osascript -e &apos;tell application &quot;iTerm&quot; to activate&apos; -e &apos;tell application &quot;iTerm&quot; to set thefile to choose folder with prompt &quot;Choose a folder to place received files in&quot;&apos; -e &quot;do shell script (\&quot;echo \&quot;&amp;(quoted form of POSIX path of thefile as Unicode text)&amp;\&quot;\&quot;)&quot;`</span><br><span class="line"></span><br><span class="line">if [[ $FILE = &quot;&quot; ]]; then</span><br><span class="line">    echo Cancelled.</span><br><span class="line">    # Send ZModem cancel</span><br><span class="line">    echo -e \\x18\\x18\\x18\\x18\\x18</span><br><span class="line">    echo \# Cancelled transfer</span><br><span class="line">    echo</span><br><span class="line">else</span><br><span class="line">    echo $FILE</span><br><span class="line">    cd &quot;$FILE&quot;</span><br><span class="line">    /usr/local/bin/rz</span><br><span class="line">    echo \# Received $FILE</span><br><span class="line">    echo</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"># iterm2-send-zmodem.sh</span><br><span class="line"></span><br><span class="line">FILE=`osascript -e &apos;tell application &quot;iTerm&quot; to activate&apos; -e &apos;tell application &quot;iTerm&quot; to set thefile to choose file with prompt &quot;Choose a file to send&quot;&apos; -e &quot;do shell script (\&quot;echo \&quot;&amp;(quoted form of POSIX path of thefile as Unicode text)&amp;\&quot;\&quot;)&quot;`</span><br><span class="line"></span><br><span class="line">if [[ $FILE = &quot;&quot; ]]; then</span><br><span class="line">    echo Cancelled.</span><br><span class="line">    # Send ZModem cancel</span><br><span class="line">    echo -e \\x18\\x18\\x18\\x18\\x18</span><br><span class="line">    echo \# Cancelled transfer</span><br><span class="line">    echo</span><br><span class="line">else</span><br><span class="line">    echo $FILE</span><br><span class="line">    /usr/local/bin/sz &quot;$FILE&quot;</span><br><span class="line">    echo \# Received $FILE</span><br><span class="line">    echo</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><p>注意添加脚本可执行权限：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chmod +x iterm2-send-zmodem.sh</span><br><span class="line">chmod +x iterm2-recv-zmodem.sh</span><br></pre></td></tr></table></figure></p><h4 id="在iTerm-2添加Triggers"><a href="#在iTerm-2添加Triggers" class="headerlink" title="在iTerm 2添加Triggers"></a>在iTerm 2添加Triggers</h4><p>打开iTerm的Preferences，或者使用 command + , ，点进Profiles项，Advanced项,进入Tirggers，点击Edit，添加两条规则：</p><blockquote><p>Regular expression: rz waiting to receive.**B0100<br>Action: Run Silent Coprocess<br>Parameters: /usr/local/bin/iterm2-send-zmodem.sh</p></blockquote><blockquote><p>Regular expression: **B00000000000000<br>Action: Run Silent Coprocess<br>Parameters: /usr/local/bin/iterm2-recv-zmodem.sh</p></blockquote><p>至此，所有配置完成。下面就可以使用黑科技来传输文件了。</p><h4 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h4><h5 id="将文件传到远端服务器"><a href="#将文件传到远端服务器" class="headerlink" title="将文件传到远端服务器"></a>将文件传到远端服务器</h5><p>在远端服务器上输入 <strong><em>r</em></strong>z ，回车<br>选择本地要上传的文件<br>等待上传</p><h5 id="从远端服务器下载文件"><a href="#从远端服务器下载文件" class="headerlink" title="从远端服务器下载文件"></a>从远端服务器下载文件</h5><p>在远端服务器输入 <strong><em>sz filename filename1 … filenameN</em></strong></p><p>选择本地的存储目录<br>等待下载</p><p><strong>PS:远端服务器也需要安装lrzsz。</strong><br>centOS安装方法： yum -y install lrzsz</p><h4 id="经过跳板机rz上传稍大文件失败及解决方案"><a href="#经过跳板机rz上传稍大文件失败及解决方案" class="headerlink" title="经过跳板机rz上传稍大文件失败及解决方案"></a>经过跳板机rz上传稍大文件失败及解决方案</h4><ul><li><p>失败原因<br>经过跳板机之后直接rz、sz一个稍大的文件会在上传一部分后退出并显示一堆乱码，这是因为这中间有控制字符的原因。</p></li><li><p>解决方案<br>加参数-e忽略控制字符</p></li></ul><p>rz -e 和 sz -e</p>]]></content>
      
      
      <categories>
          
          <category> technology </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mac </tag>
            
            <tag> tool </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PrivateNote_BCloudNet</title>
      <link href="/2020/03/06/PrivateNote-BCloudNet/"/>
      <url>/2020/03/06/PrivateNote-BCloudNet/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/PrivateNote-BCloudNet/BCloud_underlay.png" alt="underlay"></p><p><img src="/images/PrivateNote-BCloudNet/BCloud_overlay.png" alt="overlay"></p>]]></content>
      
      
      <categories>
          
          <category> technology </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openstack </tag>
            
            <tag> network </tag>
            
            <tag> cloud </tag>
            
            <tag> neutron </tag>
            
            <tag> note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentaraGrand</title>
      <link href="/2020/02/11/CentaraGrand/"/>
      <url>/2020/02/11/CentaraGrand/</url>
      
        <content type="html"><![CDATA[<video width="600" height="450" controls><br><source src="https://sirius21c-1256566528.cos.ap-beijing.myqcloud.com/Emotion/%E4%B8%AD%E5%A4%AE%E6%A0%BC%E5%85%B0%E5%BE%B7.mp4" type="video/mp4"><br><p>Your user agent does not support the HTML5 Video element.</p><br></video>]]></content>
      
      
      <categories>
          
          <category> emotion </category>
          
      </categories>
      
      
        <tags>
            
            <tag> travel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>虚拟网络优化与测试</title>
      <link href="/2019/07/19/%E8%99%9A%E6%8B%9F%E7%BD%91%E7%BB%9C%E4%BC%98%E5%8C%96%E4%B8%8E%E6%B5%8B%E8%AF%95/"/>
      <url>/2019/07/19/%E8%99%9A%E6%8B%9F%E7%BD%91%E7%BB%9C%E4%BC%98%E5%8C%96%E4%B8%8E%E6%B5%8B%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<p>从我们用户的使用就可以感受到网速一直在提升，而网络技术的发展也从1GE/10GE/25GE/40GE/100GE的演变，从中可以得出单机的网络IO能力必须跟上时代的发展。</p><h3 id="现状与挑战"><a href="#现状与挑战" class="headerlink" title="现状与挑战"></a>现状与挑战</h3><p>经过实践测试，在C8上跑应用每1W包处理需要消耗1%软中断CPU，这意味着单机的上限是100万PPS（Packet Per Second）。从TGW（Netfilter版）的性能100万PPS，AliLVS优化了也只到150万PPS，并且他们使用的服务器的配置还是比较好的。</p><p>假设，我们要跑满10GE网卡，每个包64字节，这就需要2000万PPS（注：以太网万兆网卡速度上限是1488万PPS，因为最小帧大小为84B《<a href="https://www.cisco.com/c/en/us/about/security-center/network-performance-metrics.html" target="_blank" rel="noopener">Bandwidth, Packets Per Second, and Other Network Performance Metrics</a>》），100G是2亿PPS，即每个包的处理耗时不能超过50纳秒。而一次Cache Miss，不管是TLB、数据Cache、指令Cache发生Miss，回内存读取大约65纳秒，NUMA体系下跨Node通讯大约40纳秒。所以，即使不加上业务逻辑，即使纯收发包都如此艰难。我们要控制Cache的命中率，我们要了解计算机体系结构，不能发生跨Node通讯。</p><p>从这些数据，我希望可以直接感受一下这里的挑战有多大，理想和现实，我们需要从中平衡。问题都有这些：</p><ul><li>传统的收发报文方式都必须采用硬中断来做通讯，每次硬中断大约消耗100微秒，这还不算因为终止上下文所带来的Cache Miss。</li><li>数据必须从内核态用户态之间切换拷贝带来大量CPU消耗，全局锁竞争。</li><li>收发包都有系统调用的开销。</li><li>内核工作在多核上，为可全局一致，即使采用Lock Free，也避免不了锁总线、内存屏障带来的性能损耗。</li><li>从网卡到业务进程，经过的路径太长，有些其实未必要的，例如netfilter框架，这些都带来一定的消耗，而且容易Cache Miss。</li></ul><p>从前面的分析可以得知IO实现的方式、内核的瓶颈，以及数据流过内核存在不可控因素，这些都是在内核中实现，内核是导致瓶颈的原因所在，要解决问题需要绕过内核。所以主流解决方案都是旁路网卡IO，绕过内核直接在用户态收发包来解决内核的瓶颈。目前最热的解决方案就是DPDK了。</p><p>不过，我们先回到 openstack 环境中，看看可以优化的地方。首先是前面提到的<strong><em>DPDK</em></strong>，OVS已经为我们提供好了DPDK的版本；接着是开启<strong><em>网卡多队列</em></strong>，使得中断在多核CPU上进行负载均衡；还有一个是<strong><em>SR-IOV</em></strong>，这个可以直接逼近pass though的性能。现在有个问题，如果我们使用了SR-IOV，就直接抛弃了OVS，当然不需要使用OVS+DPDK的方案了，从理论上来说「去掉」要远远好于「优化」。所以最终在此次openstack环境中的网络优化采用了网卡对队列和SR-IOV的方式，如果还要继续优化，可以基于应用在虚机上使用DPDK，目前已经有了比较好的开源用户态网络协议栈：<a href="https://github.com/mtcp-stack/mtcp" target="_blank" rel="noopener">mtcp</a>、<a href="https://github.com/F-Stack/f-stack" target="_blank" rel="noopener">f-stack</a>。</p><h3 id="重要性能参数科普"><a href="#重要性能参数科普" class="headerlink" title="重要性能参数科普"></a>重要性能参数科普</h3><p>提到网络性能的参数，我们可能瞬间能想到延迟、带宽、吞吐量等等，但很可能不能清除的区分它们之间的关系代表的实际意义，接下来我们就大概谈一谈。</p><ul><li><p>吞吐量 VS 带宽<br>吞吐量是在一个给定的时间段内介质能够传输的数据量。其与带宽是很容易搞混的一个词，两者的单位都是Mbps。先让我们来看两者对应的英语，吞 吐量：throughput，带宽： Max net bitrate 。当我们讨论通信链路的带宽时，一般是指链路上每秒所能传送的比特数。我们可以说以太网的带宽是10Mbps。但是，我们需要区分链路上的可用带宽（带宽）与实际链路中每秒所能传送的比特数（吞吐量）。我们倾向于用“吞吐量”一词来表示一个系统的测试性能。这样，因为实现受各种低效率因素的影响，所以由 一段带宽为10Mbps的链路连接的一对节点可能只达到2Mbps的吞吐量。这样就意味着，一个主机上的应用能够以2Mbps的速度向另外的一个主机发送数据。</p><p><strong><em>bps：bit per second<br>pps：packet per second</em></strong></p></li><li><p>包转发率<br>包转发率是用来衡量转发能力的，以能够处理最小包长来衡量，对于以太网最小帧为64BYTE（含14B帧头和4B帧尾），加上帧开销20BYTE（7B前导+1B定界符+12B帧间隔），因此最小包为84BYTE。<br>对于1个全双工1000Mbps接口达到线速时要求：转发能力＝1000Mbps/((64+20)<em>8bit)＝1.488Mpps<br>对于1个全双工100Mbps接口达到线速时要求：转发能力＝100Mbps/((64+20)</em>8bit)＝0.149Mpps</p></li><li><p>线速转发<br>端口在满负载的情况下，对帧进行无差错的转发称为线速。<br>一般是指64字节的小包，能够做到网卡接口流量的转发不出现丢包.。比如千兆交换机，两个1000M口转发数据,一秒1400万(尾数就不写了,太老长)个64字节小包一个不丢。网络层的转发，应该是交换机起了三层路由功能后的转发性能。<br>每一种设备所重视的规格都不一樣</p><ul><li>L2 Switch 重视的是交换能及背板大小</li><li>L3 Switch 除了第一点外只要是进行Vlan Routing 及安全控管</li><li>Router 重视的是效能和功能面</li><li>Firewall 重视的是效能及连接数</li></ul></li><li><p>延迟<br>时延是指一个报文或分组从一个网络的一端传送到另一个端所需要的时间。它包括了发送时延，传播时延，处理时延，排队时延。一般，发送时延与传播时延是我们主要考虑的。对于报文长度较大的情况，发送时延是主要矛盾；报文长度较小的情况，传播时延是主要矛盾。</p><ul><li>发送时延<br>发送时延是主机或路由器发送数据帧所需要的时间，也就是从发送数据的第一个比特算起，到该帧的最后一个比特发送完毕所需的时间。发送时延也称为传输时延。<br><strong><em>发送时延 = 数据帧长度（b） / 信道带宽（b/s）</em></strong></li><li>传播时延<br>传播时延是电磁波在信道中传播一定的距离需要花费的时间。<br><strong><em>传播时延 = 信道长度（m） / 电磁波在信道上的传播速率（m/s）</em></strong><br><strong><em>（电磁波在信道上的传播速率接近光速）</em></strong></li><li>处理时延<br>主机或路由器在收到分组时要花费一定的时间进行处理，就这产生了处理时延。</li><li>排队时延<br>分组在经过网络传输时，会经过许多路由器。分组在进入路由器之前要先在输入队列中排队等待处理。在路由器确定了转发接口后，还要在输出队列中排队等待转发。这就产生了排队时延。</li></ul></li></ul><h3 id="测试工具与方法"><a href="#测试工具与方法" class="headerlink" title="测试工具与方法"></a>测试工具与方法</h3><p>常见的网络性能测试工具有 iperf3 和 netperf，本次测试我们使用某位大神写的一个<a href="https://blog.cloudflare.com/how-to-receive-a-million-packets/" target="_blank" rel="noopener">测试工具</a>。</p><h4 id="iperf3"><a href="#iperf3" class="headerlink" title="iperf3"></a>iperf3</h4><h5 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y iperf3</span><br></pre></td></tr></table></figure><h5 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h5><p>接收端：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># iperf3 -s -i 1 -p 16000</span><br></pre></td></tr></table></figure></p><p>发送端：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># iperf3 -u -l 16 -b 100m -t 120 -c 192.168.10.10 -i 1 -p 16000 -A 1</span><br></pre></td></tr></table></figure></p><h5 id="主要参数"><a href="#主要参数" class="headerlink" title="主要参数"></a>主要参数</h5><table><thead><tr><th style="text-align:center">主要参数</th><th style="text-align:left">参数说明</th></tr></thead><tbody><tr><td style="text-align:center">-s</td><td style="text-align:left">表示作为server端接收包。</td></tr><tr><td style="text-align:center">-i</td><td style="text-align:left">间隔多久输出信息流量信息，默认单位为秒。</td></tr><tr><td style="text-align:center">-p</td><td style="text-align:left">指定服务的监听端口。</td></tr><tr><td style="text-align:center">-u</td><td style="text-align:left">表示采用UDP协议发送报文，不带该参数表示采用TCP协议。</td></tr><tr><td style="text-align:center">-l</td><td style="text-align:left">表示包大小，默认单位为Byte。通常测试PPS的时候该值为46，测试bps时该值为1500。</td></tr><tr><td style="text-align:center">-b</td><td style="text-align:left">设定流量带宽，可选单位包括：k/m/g。</td></tr><tr><td style="text-align:center">-t</td><td style="text-align:left">流量的持续时间，默认单位为秒。</td></tr><tr><td style="text-align:center">-A</td><td style="text-align:left">CPU亲和性，可以将具体的iperf3进程绑定对应编号的逻辑 CPU，避免iperf进程在不同的CPU间调度。</td></tr></tbody></table><h5 id="输出说明"><a href="#输出说明" class="headerlink" title="输出说明"></a>输出说明</h5><p>最终发送端每个 iperf3 进程会输出如下结果，第一条数据行为发包信息概览如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[ID]   Interval   Transfer   Bandwidth   Jitter   Lost/Total  Datagrams</span><br><span class="line">[4]  0.00-10.00 sec  237 MBytes  199 Mbits/sec  0.027 ms  500/30352 (1.6%)  </span><br><span class="line">[4]  Sent 30352  datagrams</span><br></pre></td></tr></table></figure></p><p>输出结果中各字段含义解释如下表所示:<br>| 字段 | 含义 |<br>| ———  | —– |<br>| Transfer | 传送的总数据量 |<br>| Bandwidth | 带宽大小 |<br>| Jitter | 波动率 |<br>| Lost/Total | 丢包/总报文数 |<br>| Datagrams | 丢包率 |<br><strong><em>PPS = 对端收到的包／时间</em></strong></p><blockquote><p>通常我们建议在 server 端运行 sar 来统计实际收到的包并作为实际结果，具体命令为： sar -n DEV 1 320。</p></blockquote><h4 id="netperf"><a href="#netperf" class="headerlink" title="netperf"></a>netperf</h4><h5 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wget -c &quot;https://codeload.github.com/HewlettPackard/netperf/tar.gz/netperf-2.5.0&quot; -O netperf-2.5.0.tar.gz</span><br><span class="line">tar -zxvf netperf-2.5.0.tar.gz</span><br><span class="line">cd netperf-netperf-2.5.0</span><br><span class="line">./configure &amp;&amp; make &amp;&amp; make install &amp;&amp; cd ..</span><br></pre></td></tr></table></figure><h5 id="运行-1"><a href="#运行-1" class="headerlink" title="运行"></a>运行</h5><p>接收端：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># netserver -p 16000</span><br></pre></td></tr></table></figure></p><p>发送端：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># netperf -H 172.0.0.1 -p 11256 -t UDP_STREAM -l 300 -- -m 1500</span><br></pre></td></tr></table></figure></p><h5 id="主要参数-1"><a href="#主要参数-1" class="headerlink" title="主要参数"></a>主要参数</h5><p>接收端：<br>| 主要参数 | 参数说明 |<br>| ——— | ———– |<br>| -p | 端口号 |<br>发送端：<br>| 主要参数 | 参数说明 |<br>| ——— | ———– |<br>| -H | 指定 ECS 实例的 IP 地址。|<br>| -p | 指定 ECS 实例的端口。|<br>| -l | 指定运行时间。|<br>|-t | 指定发包协议类型：TCP_STREAM 或 UDP_STREAM。建议使用 UDP_STREAM。|<br>| -m | 指定数据包大小：测试 PPS 时，该值为 46；测试bps（bit per second）时，该值为1500。|</p><h5 id="输出说明-1"><a href="#输出说明-1" class="headerlink" title="输出说明"></a>输出说明</h5><p>最终发送端每个 netperf 进程会输出如下结果，第一条数据行为发包信息概览如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Socket  Message  Elapsed      Messages</span><br><span class="line"> Size    Size     Time      Okay Errors   Throughput</span><br><span class="line"> bytes   bytes    secs       #      #   10^6bits/sec</span><br><span class="line">   </span><br><span class="line"> 124928     1    10.00     4532554      0       3.63</span><br><span class="line"> 212992          10.00     1099999              0.88</span><br></pre></td></tr></table></figure></p><p>输出结果中各字段含义解释如下表所示:<br>| 字段 | 含义 |<br>| ———  | —– |<br>| Socket Size bytes | 缓冲区大小 |<br>| Message Size bytes | 数据包大小（Byte） |<br>| Elapsed Size bytes | 测试时间（s）|<br>| Okey | 数据包成功数 |<br>| Errors | 失败数 |<br>| Throughput | 网络吞吐量（Mbit/s）|</p><p><strong><em>PPS = 数据包成功数/测试时间</em></strong></p><blockquote><p>通常我们建议在 server 端运行 sar 来统计实际收到的包并作为实际结果，具体命令为： sar -n DEV 1 320。</p></blockquote><h4 id="本次测试工具"><a href="#本次测试工具" class="headerlink" title="本次测试工具"></a>本次测试工具</h4><h5 id="安装-2"><a href="#安装-2" class="headerlink" title="安装"></a>安装</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">yum install -y git gcc clang</span><br><span class="line">git clone https://github.com/majek/dump.git</span><br><span class="line">cd dump/how-to-receive-a-million-packets/</span><br><span class="line">./build.sh</span><br></pre></td></tr></table></figure><h5 id="运行-2"><a href="#运行-2" class="headerlink" title="运行"></a>运行</h5><p>接收端：<br>(四进程并置位SO_REUSEPORT)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">taskset -c 1,2,3,4 ./udpreceiver1 0.0.0.0:4321 4 1</span><br></pre></td></tr></table></figure></p><p>发送端：<br>(两进程)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">taskset -c 1,2 ./dump/how-to-receive-a-million-packets/udpsender 192.168.111.120:4321 192.168.111.120:4321</span><br></pre></td></tr></table></figure></p><h4 id="测试方法"><a href="#测试方法" class="headerlink" title="测试方法"></a>测试方法</h4><ul><li>本次测试方便起见没有搭建openstack集成好的环境，而是直接使用KVM和SR-IOV进行测试。</li><li>避免受限于软件程序的发包能力，测试采用“多VM发，1 VM收”的方式来测试接收端网络性能，当接收端数据不再增长甚至开始下降时认为达到峰值。接收端x1：4c8g 60G 4线程；发送端xN：2c2g 20G 2线程。</li><li>为了避免单机OVS等的影响因素，发送端位于不同节点。</li></ul><h3 id="开启网卡多队列"><a href="#开启网卡多队列" class="headerlink" title="开启网卡多队列"></a>开启网卡多队列</h3><h4 id="方式一：直接修改xml文件"><a href="#方式一：直接修改xml文件" class="headerlink" title="方式一：直接修改xml文件"></a>方式一：直接修改xml文件</h4><p><em>（区别于virtio技术，SR-IOV暂没找到直接开启的方式，建议使用方式二）</em></p><p>判断宿主机是否支持网卡多队列可以参见（虚机方面，virtio已经支持。）：<a href="https://www.jianshu.com/p/1dfe40305bb5" target="_blank" rel="noopener">https://www.jianshu.com/p/1dfe40305bb5</a>，里面网卡多队列原理和CPU中断亲和性等设置方法讲的也很详细。</p><ol><li><p>查看网卡多对列</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># ethtool -l eth0</span><br><span class="line">Channel parameters for eth0:</span><br><span class="line">Pre-set maximums:</span><br><span class="line">RX: 0</span><br><span class="line">TX: 0</span><br><span class="line">Other: 0</span><br><span class="line">Combined: 1</span><br><span class="line">Current hardware settings:</span><br><span class="line">RX: 0</span><br><span class="line">TX: 0</span><br><span class="line">Other: 0</span><br><span class="line">Combined: 1</span><br></pre></td></tr></table></figure></li><li><p>找到对应的宿主机，使用virsh命令编辑虚拟机的xml文件来添加网卡多队列。<br>这里需要注意的是，所使用的驱动应该与系统所能支持的虚拟网卡驱动相同。在openstack中常见的有vhost和vhost-user两种类型的驱动。这里我们没有启用dpdk，所以需要开启vhost类型驱动。<br>参数queues表示该网卡所开启的队列数，按照需求开启队列数。<br><img src="/images/虚拟网络优化与测试/虚机修改xml开启网卡多队列.png" alt="虚机修改xml开启网卡多队列"></p></li><li><p>在使用virsh命令编辑完xml文件之后重启虚机，然后进入虚机查看该网卡队列数和对应的内核中断数。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># ethtool -l eth0</span><br><span class="line">Channel parameters for eth0:</span><br><span class="line">Pre-set maximums:</span><br><span class="line">RX: 0</span><br><span class="line">TX: 0 Other: 0</span><br><span class="line">Combined: 4 # 这一行表示最多支持设置4个队列</span><br><span class="line">Current hardware settings:</span><br><span class="line">RX: 0</span><br><span class="line">TX: 0</span><br><span class="line">Other: 0</span><br><span class="line">Combined: 4 #表示当前生效的是4个队列</span><br></pre></td></tr></table></figure></li><li><p>如果当前生效的仍未是4个队列可以考虑用一下命令设置网卡队列为4。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># ethtool -L eth0 combined 4 # 设置eth0当前使用4个队列</span><br></pre></td></tr></table></figure></li><li><p>使用命令查看是否产生了对应4个队列的中断。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># cat /proc/interrupts</span><br></pre></td></tr></table></figure></li></ol><h4 id="方式二：通过OpenStack的metadata"><a href="#方式二：通过OpenStack的metadata" class="headerlink" title="方式二：通过OpenStack的metadata"></a>方式二：通过OpenStack的metadata</h4><p>更新镜像：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># glance image-update --property hw_vif_multiqueue_enabled=true $&#123;IMAGE_ID&#125;</span><br></pre></td></tr></table></figure></p><h3 id="开启SR-IOV（非openstack集成）"><a href="#开启SR-IOV（非openstack集成）" class="headerlink" title="开启SR-IOV（非openstack集成）"></a>开启SR-IOV（非openstack集成）</h3><p>Redhat官方文档：<a href="https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/6/html/virtualization_host_configuration_and_guest_installation_guide/sect-virtualization_host_configuration_and_guest_installation_guide-sr_iov-how_sr_iov_libvirt_works" target="_blank" rel="noopener">Using SR-IOV</a></p><h4 id="准备物理网卡"><a href="#准备物理网卡" class="headerlink" title="准备物理网卡"></a>准备物理网卡</h4><p>在环境中有一块Intel 82599万兆物理网卡，对应环境中的eth6， eth7。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">0000:06:00.0 Ethernet controller: Intel Corporation 82599ES 10-Gigabit SFI/SFP+ Network Connection (rev 01)</span><br><span class="line">0000:06:00.1 Ethernet controller: Intel Corporation 82599ES 10-Gigabit SFI/SFP+ Network Connection (rev 01)</span><br></pre></td></tr></table></figure></p><p>对网卡开启SRIOV的支持，网卡最多支持63个VF<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># echo 4 &gt;  /sys/class/net/eth6/device/sriov_numvfs</span><br><span class="line"># ip link show</span><br><span class="line">9: eth6: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc mq state UP mode DEFAULT qlen 1000</span><br><span class="line">    link/ether 90:e2:ba:94:2e:b4 brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    vf 0 MAC ba:af:d6:1a:4f:df, spoof checking on, link-state auto, trust off</span><br><span class="line">    vf 1 MAC 52:54:00:31:cf:5c, spoof checking on, link-state auto, trust off</span><br><span class="line">    vf 2 MAC 56:fc:bb:dc:16:bd, spoof checking on, link-state auto, trust off</span><br><span class="line">    vf 3 MAC 22:53:0b:ac:29:89, spoof checking on, link-state auto, trust off</span><br></pre></td></tr></table></figure></p><h4 id="开启物理机passthrough功能"><a href="#开启物理机passthrough功能" class="headerlink" title="开启物理机passthrough功能"></a>开启物理机passthrough功能</h4><p>有两处地方需要修改：</p><ul><li>BIOS中开启INTEL VT-D的扩展</li><li>在系统引导中添加intel_iommu=on到grub的配置中<br>重启系统</li></ul><h4 id="获取VF-PCI地址"><a href="#获取VF-PCI地址" class="headerlink" title="获取VF PCI地址"></a>获取VF PCI地址</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"># 首先获取网卡的pci地址，该网卡的pci地址为06:00.0</span><br><span class="line">lspci  | grep Eth</span><br><span class="line">0000:06:00.0 Ethernet controller: Intel Corporation 82599ES 10-Gigabit SFI/SFP+ Network Connection (rev 01)</span><br><span class="line"> </span><br><span class="line"># 通过virsh nodedev-dumpxml 获取VF设备的domain,bus,function</span><br><span class="line">[root@node-11 ~]# virsh nodedev-dumpxml pci_0000_06_00_0</span><br><span class="line">&lt;device&gt;</span><br><span class="line">  &lt;name&gt;pci_0000_06_00_0&lt;/name&gt;</span><br><span class="line">  &lt;path&gt;/sys/devices/pci0000:05/0000:05:00.0/0000:06:00.0&lt;/path&gt;</span><br><span class="line">  &lt;parent&gt;pci_0000_05_00_0&lt;/parent&gt;</span><br><span class="line">  &lt;driver&gt;</span><br><span class="line">    &lt;name&gt;ixgbe&lt;/name&gt;</span><br><span class="line">  &lt;/driver&gt;</span><br><span class="line">  &lt;capability type=&apos;pci&apos;&gt;</span><br><span class="line">    &lt;domain&gt;0&lt;/domain&gt;</span><br><span class="line">    &lt;bus&gt;6&lt;/bus&gt;</span><br><span class="line">    &lt;slot&gt;0&lt;/slot&gt;</span><br><span class="line">    &lt;function&gt;0&lt;/function&gt;</span><br><span class="line">    &lt;product id=&apos;0x10fb&apos;&gt;82599ES 10-Gigabit SFI/SFP+ Network Connection&lt;/product&gt;</span><br><span class="line">    &lt;vendor id=&apos;0x8086&apos;&gt;Intel Corporation&lt;/vendor&gt;</span><br><span class="line">    &lt;capability type=&apos;virt_functions&apos; maxCount=&apos;63&apos;&gt;</span><br><span class="line">      &lt;address domain=&apos;0x0000&apos; bus=&apos;0x06&apos; slot=&apos;0x10&apos; function=&apos;0x0&apos;/&gt;</span><br><span class="line">      &lt;address domain=&apos;0x0000&apos; bus=&apos;0x06&apos; slot=&apos;0x10&apos; function=&apos;0x2&apos;/&gt;</span><br><span class="line">      &lt;address domain=&apos;0x0000&apos; bus=&apos;0x06&apos; slot=&apos;0x10&apos; function=&apos;0x4&apos;/&gt;</span><br><span class="line">      &lt;address domain=&apos;0x0000&apos; bus=&apos;0x06&apos; slot=&apos;0x10&apos; function=&apos;0x6&apos;/&gt;</span><br><span class="line">    &lt;/capability&gt;</span><br><span class="line">    &lt;iommuGroup number=&apos;22&apos;&gt;</span><br><span class="line">      &lt;address domain=&apos;0x0000&apos; bus=&apos;0x06&apos; slot=&apos;0x00&apos; function=&apos;0x0&apos;/&gt;</span><br><span class="line">    &lt;/iommuGroup&gt;</span><br><span class="line">    &lt;numa node=&apos;0&apos;/&gt;</span><br><span class="line">    &lt;pci-express&gt;</span><br><span class="line">      &lt;link validity=&apos;cap&apos; port=&apos;0&apos; speed=&apos;5&apos; width=&apos;8&apos;/&gt;</span><br><span class="line">      &lt;link validity=&apos;sta&apos; speed=&apos;5&apos; width=&apos;8&apos;/&gt;</span><br><span class="line">    &lt;/pci-express&gt;</span><br><span class="line">  &lt;/capability&gt;</span><br><span class="line">&lt;/device&gt;</span><br></pre></td></tr></table></figure><h4 id="准备xml"><a href="#准备xml" class="headerlink" title="准备xml"></a>准备xml</h4><p>上面我们已经获得到了VF device 的domain, host, function，根据这些的信息，准备xml文件，注意vlan的ID。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;interface type=&apos;hostdev&apos; managed=&apos;yes&apos;&gt;</span><br><span class="line">  &lt;source&gt;</span><br><span class="line">    &lt;address type=&apos;pci&apos; domain=&apos;0x0&apos; bus=&apos;0x06&apos; slot=&apos;0x10&apos; function=&apos;0x2&apos;/&gt;</span><br><span class="line">  &lt;/source&gt;</span><br><span class="line">  &lt;vlan&gt;</span><br><span class="line">   &lt;tag id=&apos;2010&apos;/&gt;</span><br><span class="line">  &lt;/vlan&gt;</span><br><span class="line">&lt;/interface&gt;</span><br></pre></td></tr></table></figure></p><h4 id="准备虚拟机"><a href="#准备虚拟机" class="headerlink" title="准备虚拟机"></a>准备虚拟机</h4><p>创建一台4c8g的虚拟机用来作为passthrough的主机, 并attach VF设备<br>virsh attach-device 21 cc.xml  –live –config</p><blockquote><p>–live 直接加载进正在运行的虚机<br>–config 把xml文件内容写进虚机xml文件，避免重启配置丢失，当然调用nova的话配置仍然会被重置</p></blockquote><p>登陆到虚拟机内，VF设备已经attach到虚拟机上，该虚拟机的eth0为neutron创建的device，eth1则是透传进去的VF。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ip link set dev eth1 up</span><br><span class="line">ip addr del 192.168.111.120/24 dev eth0</span><br><span class="line">ip addr add 192.168.111.120/24 dev eth1</span><br><span class="line"># 添加默认路由</span><br><span class="line">route add default gw 192.168.111.1</span><br></pre></td></tr></table></figure></p><h3 id="优化结果"><a href="#优化结果" class="headerlink" title="优化结果"></a>优化结果</h3><table><thead><tr><th></th><th>Initial</th><th>SR-IOV</th></tr></thead><tbody><tr><td><strong>Single queue</strong></td><td>45w</td><td>65w</td></tr><tr><td><strong>Multi queue</strong></td><td>80w</td><td>120w</td></tr></tbody></table><p>*注：数据为包转发率，pps。</p><p>另外推荐一篇网络压测博文：<a href="https://focusvirtualization.blogspot.com/2017/11/protocol-stack-75-test.html" target="_blank" rel="noopener">KVM网络性能压测</a></p>]]></content>
      
      
      <categories>
          
          <category> technology </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openstack </tag>
            
            <tag> network </tag>
            
            <tag> kvm </tag>
            
            <tag> SR-IOV </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Distributed Virtual Routing</title>
      <link href="/2019/07/03/Distributed-Virtual-Routing/"/>
      <url>/2019/07/03/Distributed-Virtual-Routing/</url>
      
        <content type="html"><![CDATA[<p>每次遇到DVR都要重新分析网络架构，干脆花点时间把三层逻辑图画出来。<br>我怕再把二层OVS连接画出来这图会崩。</p><p><img src="/images/Distributed-Virtual-Routing/DVR.png" alt="DVR三层逻辑图"></p><p>细节和实验部分推荐这篇博文：<a href="https://www.cnblogs.com/sammyliu/p/4713562.html" target="_blank" rel="noopener">https://www.cnblogs.com/sammyliu/p/4713562.html</a></p>]]></content>
      
      
      <categories>
          
          <category> technology </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openstack </tag>
            
            <tag> network </tag>
            
            <tag> neutron </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>边缘计算：5G的命喉</title>
      <link href="/2019/03/15/%E8%BE%B9%E7%BC%98%E8%AE%A1%E7%AE%97%EF%BC%9A5G%E7%9A%84%E5%91%BD%E5%96%89/"/>
      <url>/2019/03/15/%E8%BE%B9%E7%BC%98%E8%AE%A1%E7%AE%97%EF%BC%9A5G%E7%9A%84%E5%91%BD%E5%96%89/</url>
      
        <content type="html"><![CDATA[<p><em>本文仅代表个人观点，请以辩证的态度看待</em></p><p>最近关于 5G 的文章是一堆连着一堆，不过都无外是对它的速度进行狠夸，那我就来泼泼凉水吧。</p><p>首先，我对 5G 没什么研究，并不晓得它在哪些核心技术上做到了突破。我就谈谈我知道的浅显部分吧。不知道大家有没有思考过为什么把网线从双绞线换成光纤速度就快了呢，如果我的物理老师没交错，可见光是电磁波的一种，光和电都是通过变化的电磁场来进行传播，它们的速度没差啦，那为什么造成网速的巨大差距呢？显而易见，是传输介质的问题。最后，重点问题来了，同样是双绞线，或者光纤，怎么还有不同的速度呢？答案是接口，并不是真正的传输速度影响了网速，是接口发送“10101”的信号频率影响了网速。那么回归 5G，既然它还是电磁波，那么传输的速率就还是光速，它提高的是频率，因此波长变短，衍射能力减弱，衰减增大，这就导致需要建立更密集的基站（没太明白？传送门：<a href="https://zhuanlan.zhihu.com/p/41182443" target="_blank" rel="noopener">第一次有人把5G讲的这么简单明了</a>）。诶呦，这对基站的要求好像有点符合边缘计算在边缘节点情况考虑的精神哦。</p><p>边缘计算先搁着，还是继续谈 5G。不管怎样，总之 5G 的速度是大大提高了，但它提高的是从哪到哪的速度呢？就是从基站到终端，即网络中所说的「最后一公里」。而承载着 Internet 流量的还是原来的网络架构，这就像你接了一个100M的带宽，这只是你到局端的带宽，上了骨干网，该怎样挤还是怎样挤（有钱买 MPLS 另说哈），下小电影照样要盯进度条。</p><p>那么 3G、4G 时代在 ISP 网络结构没有太大的变化下，速度是怎么提上去的呢，这就得益于各大 ICP 的 OTT 业务了，他们想提高服务质量，就使用了 CDN 这样的技术，用存储来换取带宽。但随着 5G 登场，很快像 CDN 这样的技术带来的红利就会被消化掉。恰逢此时，边缘计算来了。</p><p>那么什么是边缘计算呢？在这里我想简单提一下云计算和 SDN。云计算是通过虚拟化技术将计算、存储、网络等基础资源进行统一管理再按需分配，SDN 要实现网络的数控分离，从而解放网络的运维管理和开发的快速迭代。SDN 界出了个 openflow，虽然没达成自己的愿景，但却成就了云计算这种 DC 网络架构。最重要的是，云计算的诞生刺激了市场从以网络为中心变为以应用为中心，这种转变也正是互联网巨头们向作为管道的三大运营商吹起的胜利的号角。终于，SDN 饶了一个大圈，撬开了运营商和通信设备厂商的大门，使得 SD-WAN 从广域网的土壤上发芽，推动传统的 DC 三层网络架构向叶脊网络转变，尽管又被现在的云网融合杀了一个回马枪，但这又谁说不是机遇呢？于是，多诺米骨牌又推回到了云计算的面前，这些技术的发展使得集中式的云计算可以将计算能力下沉到边缘，使得数据直接在边缘就得到处理，缓解了 5G 带来的压力。我也很是期待，边缘计算的到来，又将怎样推动 SDN 的变革？！</p>]]></content>
      
      
      <categories>
          
          <category> technology </category>
          
      </categories>
      
      
        <tags>
            
            <tag> network </tag>
            
            <tag> 边缘计算 </tag>
            
            <tag> 5G </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>OpenFlow：Neutron走上歧路的原罪</title>
      <link href="/2019/03/15/OpenFlow%EF%BC%9ANeutron%E8%B5%B0%E4%B8%8A%E6%AD%A7%E8%B7%AF%E7%9A%84%E5%8E%9F%E7%BD%AA/"/>
      <url>/2019/03/15/OpenFlow%EF%BC%9ANeutron%E8%B5%B0%E4%B8%8A%E6%AD%A7%E8%B7%AF%E7%9A%84%E5%8E%9F%E7%BD%AA/</url>
      
        <content type="html"><![CDATA[<p><em>本文仅代表个人观点，请以辩证的态度看待</em></p><p>没错，我就是来吐槽的。</p><p>提到 openflow，大多数人应该觉得就是 SDN 的一个典型代表吧，但其实是由于云计算的崛起让它发了意外之财。openflow 抛弃了已经很成熟的网络协议栈，去让控制器给背锅，这就注定了路不好走，再加上纯粹的集中控制模式，目前看来是没啥发展了。</p><p>首先要吐槽的就是，Neutron 虽然是用了在应用层去实现网络基本机制的 openflow，但对网络技术用语的不严谨搞得我懵过不止一次。我明白，作为一个产品在面向最终用户的时候，把实现的某些功能抽象呈献给用户是个不错的选择。正向案例我记得比较深刻的一个是「快照」这个东西，从名字上来看感觉就是给现有状态做个完整的备份，一般来看就是复制一份吧，然而大多数实现是「写时复制」，恍然大悟。那现在来看看 Neutron 在这方面做了哪些？floating ip，这个还比较形象，也很容易联想到是用静态映射实现的；flat网络，这个就有点混乱了，本来这个是相对于使用虚拟化封装过的多层次网络来说的平面网络，比如没有使用 802.1q 封装，但注意不是没有打 tag 就不是 vlan 了，这跟链路类型也有关系，也就是说外部的 vlan 在某种情况下也是可以给 Neutron 提供 flat 网络的（比如本征 vlan）；代理 arp，这是把我搞得最懵的，其本身是三层设备为连接的广播域提供代理的，而 Neutron 是在 openflow 实现 vtep 的二层网关时提到的，我是一直不能理解，很久之后才明白那是 arp 广播抑制，技术实现、封包完全不一样好么！</p><p>回归主旨，谈谈为什么我说 openflow 使 Neutorn 走上了歧路。</p><p>还是由于 openflow 抛弃了原有的成熟网络协议栈，在使用 vxlan 协议时，它只实现了作为 vtep 的一半功能，即没有三层路由（那时还没有 OVN）。于是，Neutron 搞了个网络节点，使用 namespace 进行路由，这蛮不错的。但随着功能的增多，比如 VPNaaS、FWaaS 等使 namespace 的压力越来越大，这也还好。我重点要吐槽的是下面两个（尽管这俩被很多人推崇备至）：</p><ul><li><p>L2 Population</p><p>本来是想提高 vxlan 网络 Scalability的，说白了，就是 Neutron 在 vxlan 控制层面上的增强，应该是想要达到 BGP EVPN 那样的效果。然而效果不咋滴，却造成 qrouter 经常脑裂。</p></li><li><p>DVR</p><p>我觉得这是想模仿 vxlan 的三层分布式网关效果吧。但人家能这么搞，是因为有相关网络协议栈的支持，DVR 就直接 copy namespace，数据包处理还是那一套，然后根据端口复用、静态映射、路由等进行了分工，还使用了策略路由进行导流，没进行路由就强行修改 mac （openflow 在实现其它功能上也做了类似处理），无话可说。</p></li></ul><p>最后，引用一句曾看到的相关评论：</p><blockquote><p>SDN王冠上的钻石Openflow并没有如愿成为主流的南向接口，纯种的集中控制看起来也不如物理上分布逻辑上集中的控制模式更有吸引力。再后来，被SDNer们诟病已久的OSPF和BGP，居然杀了个回马枪，渗透进了数据中心网络，成了LAN\WAN通吃的控制平面。而曾经风光无两的ODL和ONOS，也从参谋长联席会议主席的位置上隐退，稳稳当当地在神坛上被供了起来，靠着三心二意的支持者们心不在焉的香火钱维持存在感。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> technology </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openstack </tag>
            
            <tag> network </tag>
            
            <tag> neutron </tag>
            
            <tag> openflow </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>深入浅出容器网络</title>
      <link href="/2019/03/14/%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BA%E5%AE%B9%E5%99%A8%E7%BD%91%E7%BB%9C/"/>
      <url>/2019/03/14/%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BA%E5%AE%B9%E5%99%A8%E7%BD%91%E7%BB%9C/</url>
      
        <content type="html"><![CDATA[<p>曾经看过一本名叫《深入浅出neutron》的书，简直是，烂的不能再烂。犹记得里面有提到解决 ipsec  的 nat 穿越，然后一脸认真进去，一脸懵逼出来。这本书让我对「深入浅出」这个词有了新的认识——我只管一顿“高大上”的乱抄，抛出各种概念装X，你浅尝辄止就好。</p><p>那我这里为什么要用“深入浅出”一词呢，就是想说明不要对我这篇博文抱太大期望，能把容器网络深入剖析后再逻辑分明的简简单单讲出来。尴尬，为了弥补这部分内容，强烈建议阅读 CloudMan 的《每天5分钟玩转 Docker 容器技术》中关于容器网络的部分，<a href="https://mp.weixin.qq.com/s?__biz=MzIwMTM5MjUwMg==&amp;mid=2653587882&amp;idx=1&amp;sn=2eb4e0a24bdeca2c9ac0f2c5d3d8469d&amp;chksm=8d3081b3ba4708a54eac6f3ddb5d75b617167898831f089e955ab9df20da0392f9b0f2347eaa&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">一文搞懂各种 Docker 网络</a>是其该部分的总结篇，里面有各种容器网络解决方案讲解的超链接，简单明了。So，有了这样的深度好文，我下面的谈论当然是多多“借鉴“了。</p><p>顺便一提，如果想学习 neutron，可以阅读李宗标的《深入理解 OpenStack Neutron》，真可谓是「抽丝剥茧」，难得的好书。</p><h3 id="容器间的通信"><a href="#容器间的通信" class="headerlink" title="容器间的通信"></a>容器间的通信</h3><p>我们知道容器本质上就是使用 cgroup 进行资源控制，再使用 namespace 进行访问控制，那么使用这些虚拟化技术之后，该怎么使容器进行通信呢？最基本的就是 docker 中的 none 和 host 模式了，然后是应用更广的 bridge 网络。</p><ul><li><p>none</p><p>故名思议，none 网络就是什么都没有的网络。挂在这个网络下的容器除了 lo，没有其他任何网卡。</p></li><li><p>host</p><p>连接到 host 网络的容器共享 Docker host 的网络栈，容器的网络配置与 host 完全一样。</p></li><li><p>bridge</p><p>说白了，就是使用虚拟化实现虚拟网桥（Linux Bridge 或 OVS 实现方式都行），然后将容器“插”到虚拟网桥上，形成了一个广播域，然后就能通信了。</p></li></ul><p>以上就是 docker 自动创建的网络，除此之外用户也可以根据业务需要创建 user-defined 网络。大部分的 user-defined 网络都是解决跨主机通信的，我们下一小节再讨论，这里就只先说明自定义的 bridge 网络，因为它就是让用户自行创建虚拟网桥，自己规划 IP，然后将容器“插”上去，跟 docker 自动创建的 bridge 原理上没什么区别（自动创建的 bridge默认桥接了主机的网卡）。</p><p>那不同的 bridge 间可以通信么？这里因为跨了广播域，需要进行三层路由，而 docker 没有提供这样的功能，所以不能进行通信——当然不包括已经进行了跟外层网络 nat 的情况，既然谈到这里，就顺便把容器同外部网络进行通信的原理也简单谈一下。</p><p>首先 none 和 host，没什么好说的了，none 肯定不能，host 宿主机能就能。然后默认的 bridge 网络默认桥接了宿主机的网卡，并将其作为 nat 网关，主动访问外面的时候使用端口复用，外面主动访问里面就需要配置端口映射了。自行定义的 bridge 网络原理一样，但要先自行将其桥接到宿主机能访问外网的网卡上并配置 nat。</p><p>另外一提，CloudMan 在其文中提到了通信的三种方式（非定义的网络模式）。一种是直接使用 IP；第二种是使用 docker dns server，即通过容器名进行通信，但貌似没起 dns 服务，就是将 hostname 和对应 IP 推进了 容器的 host文件；最后一种是叫 joined，这个与其说是通信方式，不如也说是一种网络模式，因为它同 host 原理一致，只不过是容器间共享一个网络栈，即通过同一个 IP 的不同端口进行服务访问。</p><h3 id="容器网络"><a href="#容器网络" class="headerlink" title="容器网络"></a>容器网络</h3><p>细心的朋友应该已经发现了，docker 所定义的网络都是处于各自的二层网络中，同外部通信也是通过 nat ，那么如果进行跨主机部署，怎么保证广播域呢？下面将介绍几种解决方案。</p><p>主要分为 docker 原生的 overlay、macvlan，和第三方方案，常用的包括 flannel、weave 和 calico。（docker 网络是一个非常活跃的技术领域，不断有新的方案开发出来，那么要问个非常重要的问题了：如此众多的方案是如何与 docker 集成在一起的？答案是：libnetwork 以及 CNM，这里就不在展开介绍了。)</p><h4 id="overlay"><a href="#overlay" class="headerlink" title="overlay"></a>overlay</h4><p>为支持容器跨主机通信，Docker 提供了 overlay driver，使用户可以创建基于 VxLAN 的 overlay 网络。VxLAN 可将二层数据封装到 UDP 进行传输，VxLAN 提供与 VLAN 相同的以太网二层服务，但是拥有更强的扩展性和灵活性。有关 VxLan 的详细内容就不做过多介绍了。</p><p>Docerk overlay 网络需要一个 key-value 数据库用于保存网络状态信息，包括 Network、Endpoint、IP 等。Consul、Etcd 和 ZooKeeper 都是 Docker 支持的 key-vlaue 软件。</p><p>下面主要来看看overlay 网络跨主机通信的原理。docker  会为每个 overlay 网络创建一个独立的 network namespace，其中会有一个 linux bridge  br0，endpoint 还是由 veth pair 实现，一端连接到容器中，另一端连接到 namespace 的 br0 上。br0 除了连接所有的 endpoint，还会连接一个 vxlan 设备（即宿主机作为VETP 的网卡），用于与其他 host 建立 vxlan tunnel。容器之间的数据就是通过这个 tunnel 通信的。</p><p>需要说明的是，很多文章在谈到隔离性时拿那个独立的 namespace 大谈特谈，然而隔离性明明靠的是广播域的隔绝，也就是说不用那个 namespace 也完全 ok，它完全是为了提高网络架构的可读性，点个赞。</p><p>还需要说明的是，这里 docker 不像 OpenStack 提够了 router 的概念，那怎么和外网进行通信呢？其实创建容器使用 overlay 时会为容器创建两个网络接口。一个用来连接 overlay 网络，另一个连接到了一个叫 “docker_gwbridge” 的网桥上，其为所有连接到 overlay 网络的容器提供访问外网的能力（默认路由指向这边）。我要吐槽的是，这是一个“假的”网关，docker将这个网络的属性标的是“local”，即每台宿主机上都有这样一个 local 网桥，且具有同样的网关 IP，nat 之后，宿主机再次进行 nat。</p><h4 id="macvlan"><a href="#macvlan" class="headerlink" title="macvlan"></a>macvlan</h4><p>由于要管理宿主机，或者宿主机根本不在一个广播域，从而隔绝了容器的广播域，那就再给每个宿主机插一块网卡，用这块网卡将所有宿主机连到一个广播域，docker 的不同网络再进行 802.1q 的封装(即 vlan)——这就是 macvlan 的核心思想了，细节还是建议阅读 CloudMan 的教程。</p><h4 id="flannel"><a href="#flannel" class="headerlink" title="flannel"></a>flannel</h4><p>flannel 是 CoreOS 开发的容器网络解决方案。flannel 为每个 host 分配一个 subnet，容器从此 subnet 中分配 IP，这些 IP 可以在  host 间路由，容器间无需 NAT 和 port mapping 就可以跨主机通信。</p><p>每个  subnet 都是从一个更大的 IP 池中划分的，flannel 会在每个主机上运行一个叫 flanneld 的  agent，其职责就是从池子中分配 subnet。为了在各个主机间共享信息，flannel 用 etcd（与 consul 类似的  key-value 分布式数据库）存放网络配置、已分配的 subnet、host 的 IP 等信息。</p><p>数据包如何在主机间转发是由 backend 实现的。flannel 提供了多种 backend，最常用的有 vxlan 和 host-gw，我们将在本章讨论这两种 backend。其他 backend 请参考 <a href="https://github.com/coreos/flannel。" target="_blank" rel="noopener">https://github.com/coreos/flannel。</a></p><ul><li><p>vxlan</p><p>与 Docker overlay 类似，属于 overlay 网络。flannel 没有创建新的 docker 网络，而是直接使用默认的 bridge 网络，即同一主机的容器通过 docker0 连接，但跨主机流量是通过一个叫 flannel.1 的网卡转发（由 flannel 添加的静态路由进行控制），这是flannel 在宿主机上创建的虚拟网卡，其将数据包封装成 VxLAN，通过预先配置好的宿主机的网卡发送给其它主机。</p><p>详情另参。</p></li><li><p>host-gw</p><p>host-gw 不会封装数据包，而是在主机的路由表中创建到其他主机 subnet 的路由条目，从而实现容器跨主机通信。</p></li></ul><p>是不是看完稍微有点晕，两种 backend 都添加了路由，一个封装 vxlan 能行，另外一个不封装也行，WTF？！其实在我看来，host-gw 就是个废柴，因为他从原理上要求宿主机不能跨路由，如果跨了路由，中间的路由设备不就方了，它拿不到 docker 网络中的信息啊（支持 SDN 另说啊，不是一个次元），那自然没啥用了，这种情况还不如直接使用 vlan，避免三层拆包，提高转发性能。而 vxlan backend 进行了 vxlan 的封装，所以无碍。</p><h4 id="weave"><a href="#weave" class="headerlink" title="weave"></a>weave</h4><p>weave 是 Weaveworks 开发的容器网络解决方案，其属于 overlay 网络，原理上跟其它 vxlan 网络没什么区别（但同时使用了 Linux bridge 和 OVS，前者连接容器，后者封装 vxlan），但有其它几点比较脑洞打开的设计。</p><p>一是其不依赖分布式数据库（例如 etcd 和 consul）交换网络信息，每个主机上只需运行 weave 组件就能建立起跨主机容器网络，原因是把 VETP 的信息维护在了本地。</p><p>二是对容器来说，weave 就像一个巨大的以太网交换机，所有容器都被接入这个交换机，容器可以直接通信，即只维护了一个 vxlan 网络。那么不同的网络隔离又是怎么实现的呢？答案是给要隔离的网络分配不同的网络前缀，这个不同的网络前缀是指要使目标隔绝的网络的地址与本地掩码与运算后判定为不同网段的意思，即使用 vlsm 或者直接划分一个新的前缀都可以，然后查路由表的时候自然没有匹配的明细路由（生成的直连路由不是一个网段了），就走默认丢给 eth0 了，包自然丢了。但是，这产生了一个非常严重的问题，新隔离出来的网络怎么进行跨主机通信？weave 表示无能为力，所以只能说它只实现了一半，你既然要隔离那就隔离彻底点吧，任性！</p><p>三是与外网通信是没有 nat 的。它要求外部若想要与它通信，那就自己写明细路由，自行收敛网络，任性！</p><h4 id="calico"><a href="#calico" class="headerlink" title="calico"></a>calico</h4><p>在了解到 calico 之前，我一直觉得 k8s 和 openstack 在云计算领域不是一个量级的，尤其是在网络方面。openstack 的强大毋庸置疑，但容器用着没办法，就一个字，爽！是的，容器就目前需求来说，完胜openstack，而且比如在计算方面，少了一层 hypersior 的容器要更胜一筹，更符合像机器学习、图像识别等应用场景的需求，就连一直诟病的安全方面，像 kata 等项目也一直在完善，但除过裸机管理等 IaaS 方面的需求，容器唯一的弱点就是网络，也就单是这一项就让我不认为 k8s 能彻底击败 openstack。然而，调研了 calico 之后，我才发现 k8s 的野心有多大。（虽然 openstack 也能对接 calico，但其与 calico 的网络模型概念差距过大。）</p><p>我曾在之前的博文里有详细的介绍过 calico，传送门：<a href="http://21c.me/2018/11/23/Calico-Research/">Calico Research</a></p><h3 id="杂谈"><a href="#杂谈" class="headerlink" title="杂谈"></a>杂谈</h3><p>这部分呢，主要谈谈相关网络的发展，加入了很多我个人的观点，有些甚至与行业的主流意见相左，还请以辩证的态度看待。</p><p>首先吐槽俩。一，openflow已死，不接受反驳；二，DVR 这个东西从纯软件设计考虑是很不错，但我觉得其背离了网络思想，非常的不可取。</p><p>接着，强烈推荐两篇深度好文：</p><ul><li><a href="https://mp.weixin.qq.com/s/O1MBwAZiuMMDt2Q2bdzvzA" target="_blank" rel="noopener">SDWAN槽边往事（一）</a></li><li><a href="https://mp.weixin.qq.com/s/OPxYHyfWklzf1CuVjn3yWA" target="_blank" rel="noopener">老网工：浅谈数据中心云网技术的历经风雨和演进                                                                                  </a></li></ul><p>最后，简单谈谈目前比较关注的几个发展点。</p><ul><li><p>容器网络与 openstack 租户网络对接——Kuryr</p><p>文章推荐：</p><ul><li><a href="https://docs.openstack.org/kuryr/latest/" target="_blank" rel="noopener">官网</a></li><li><a href="https://www.jianshu.com/p/701753ea4632" target="_blank" rel="noopener">OpenStack容器网络项目Kuryr（libnetwork）</a></li><li><a href="https://lingxiankong.github.io/2018-02-07-kuryr-introduction-baremetal-usecase.html" target="_blank" rel="noopener">Kuryr 介绍 - 使用篇 - baremetal use case</a></li></ul></li><li><p>calico 对接 SDN 控制器</p><p>期待 calico 引入 segment routing，走入 SD-WAN 市场。</p></li><li><p>混合云</p><p>网络上的目标为达成云网融合。</p></li><li><p>边缘计算</p><ul><li>StarlingX</li><li>CORD</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> technology </category>
          
      </categories>
      
      
        <tags>
            
            <tag> k8s </tag>
            
            <tag> network </tag>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>成都本科落户流程指北</title>
      <link href="/2019/01/04/%E6%88%90%E9%83%BD%E6%9C%AC%E7%A7%91%E8%90%BD%E6%88%B7%E6%B5%81%E7%A8%8B%E6%8C%87%E5%8C%97/"/>
      <url>/2019/01/04/%E6%88%90%E9%83%BD%E6%9C%AC%E7%A7%91%E8%90%BD%E6%88%B7%E6%B5%81%E7%A8%8B%E6%8C%87%E5%8C%97/</url>
      
        <content type="html"><![CDATA[<p>本想趁着换工作的空档期，出去玩一圈，然而正当我躺在床上幻想着愉快的旅途时，马冰轩同学推门而入：“成都买房不需要两年社保了！”</p><p>嚓，飞成都，落户走起！</p><p><em>不要问我为什么新入职快两周了才更新，为了赶时间差点扑街，刚刚缓过来~</em></p><p><strong><em>下面进入正题！</em></strong></p><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><p>关注「成都公安微户政」公众号，按要求上传材料图片，目前必传的有四项：<br>(可以参见 <a href="https://jingyan.baidu.com/article/22fe7cedf5bf323003617f66.html" target="_blank" rel="noopener">百度经验</a> )</p><ol><li>身份证</li><li>户口本</li><li>教育部学历证书电子注册备案表（学信网可查询下载，可以参见 <a href="https://jingyan.baidu.com/article/ed15cb1ba5bd511be2698167.html" target="_blank" rel="noopener">百度经验</a> ）</li><li>毕业证（没用到学位证，以防万一，可以备着）</li></ol><h3 id="户口原籍1-2："><a href="#户口原籍1-2：" class="headerlink" title="户口原籍1/2："></a>户口原籍1/2：</h3><p><strong><em>（无需本人）</em></strong><br>拿着户口本去户籍所在地开一个户籍证明。</p><h3 id="成都落户地1-2："><a href="#成都落户地1-2：" class="headerlink" title="成都落户地1/2："></a>成都落户地1/2：</h3><p><strong><em>（无需本人）</em></strong><br>拿着上述材料原件及复印件（准备工作中的材料和户籍证明），前往你想落户的区的办理处（微户政会让你在预约阶段就进行选择，有详细的地址提示），微户政上预约时间办理就好了。<br>办理结果是一张准迁证。</p><h3 id="户口原籍2-2："><a href="#户口原籍2-2：" class="headerlink" title="户口原籍2/2："></a>户口原籍2/2：</h3><p><strong><em>(无需本人)</em></strong><br>拿着准签证和户口本到户籍原地办理下户。<br>办理结果是准迁证二联被撕掉，三联保留，多了一张迁出证。</p><h3 id="成都落户地2-2："><a href="#成都落户地2-2：" class="headerlink" title="成都落户地2/2："></a>成都落户地2/2：</h3><p><strong><em>(必须本人)</em></strong><br>之前所有用到的原件（教育部学历证书电子注册备案表和户籍证明已交，无需），加上准迁证三联和迁出证，另外还需要无房证明（可现场可凭身份证打印，貌似不用我们管）。<br>Tip：办理完落户是会自动要你办理当地身份证的，可以选择邮寄，更可以选择拒绝0_ 0，之后再进行办理，我当时不知道可以延后，就顶着黑眼圈和鸡窝头上去照相了……</p><p>祝大家可以顺顺利利的办理完成都户口迁入！撒花！！！</p>]]></content>
      
      
      <categories>
          
          <category> emotion </category>
          
      </categories>
      
      
        <tags>
            
            <tag> note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>未选择的路</title>
      <link href="/2018/12/11/%E6%9C%AA%E9%80%89%E6%8B%A9%E7%9A%84%E8%B7%AF/"/>
      <url>/2018/12/11/%E6%9C%AA%E9%80%89%E6%8B%A9%E7%9A%84%E8%B7%AF/</url>
      
        <content type="html"><![CDATA[<p><strong>未选择的路</strong><br>​                <em>——罗伯特·弗罗斯特</em></p><p>黄色的林子里有两条路，<br>很遗憾我无法同时选择两者<br>身在旅途的我久久站立<br>对着其中一条极目眺望<br>直到它蜿蜒拐进远处的树丛。</p><p>我选择了另外的一条，天经地义，<br>也许更为诱人<br>因为它充满荆棘，需要开拓；<br>然而这样的路过<br>并未引起太大的改变。</p><p>那天清晨这两条小路一起静卧在<br>无人踩过的树叶丛中<br>哦，我把另一条路留给了明天！<br>明知路连着路，<br>我不知是否该回头。</p><p>我将轻轻叹息，叙述这一切<br>许多许多年以后：<br>林子里有两条路，我——<br>选择了行人稀少的那一条<br>它改变了我的一生。</p><p><strong>The Road Not Taken</strong><br>​                        <em>—— Robert Frost</em></p><p>Two roads diverged in a yellow wood,<br>And sorry I could not travel both<br>And be one traveler, long I stood<br>And looked down one as far as I could<br>To where it bent in the undergrowth.</p><p>Then took the other, as just as fair,<br>And having perhaps the better claim,<br>Because it was grassy and wanted wear;<br>Though as for that the passing there<br>Had worn them really about the same.</p><p>And both that morning equally lay<br>In leaves no step had trodden back.<br>Oh, I kept the first for another day!<br>Yet knowing how way leads on to way,<br>I doubted if I should ever come back.</p><p>I shall be telling this with a sigh<br>Somewhere ages and ages hence:<br>Two roads diverged in a wood, and I–<br>I took the one less traveled by,<br>And that has made all the difference.</p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=541809942&auto=1&height=66"></iframe>]]></content>
      
      
      <categories>
          
          <category> emotion </category>
          
      </categories>
      
      
        <tags>
            
            <tag> poetry </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Calico Research</title>
      <link href="/2018/11/23/Calico-Research/"/>
      <url>/2018/11/23/Calico-Research/</url>
      
        <content type="html"><![CDATA[<p>Calico creates and manages a flat layer 3 network, assigning each workload a fully routable IP address. </p><p>官网：<a href="https://www.projectcalico.org/" target="_blank" rel="noopener">https://www.projectcalico.org/</a></p><h3 id="网络演进"><a href="#网络演进" class="headerlink" title="网络演进"></a>网络演进</h3><p>为什会有 calico 的出现 ?<br>它解决了什么问题 ? 和其它网络方案又有什么区别 ?</p><p>开篇即提到 calico 是一个去掉网络虚拟化的纯三层路由网络解决方案，我想有必要对<strong>网络虚拟化</strong>和<strong>网络功能虚拟化（NFV）</strong>这两个概念做一个强调。</p><ul><li><p>网络虚拟化：<br>网络虚拟化最基础的技术莫过于分层，要实现分层有两种手段，一个是映射，另一种就是封装。</p><ul><li><strong><em>映射：</em></strong>主要思路是转发时替换报文语义，如何替换将需要设备进行查询。<br>eg：端口映射、静态映射、PAT等NAT技术。</li><li><strong><em>封装：</em></strong>把需要的报文语义添加到网包中，处理的时候一层层的解封装即可，尽量对设备透明。<br>eg：隧道技术、vlan等</li></ul></li><li><p>网络功能虚拟化<br>通过使用x86等通用性硬件以及虚拟化技术，来承载很多功能的软件处理。通俗点说，就是将承载数据传输的一系列网元，使用虚拟化的方式实现，比如 Linux bridge、veth pair、vRouter 等等。</p></li></ul><p>如下图所示，阐述了两套网络解决方案的不同之处。<br><img src="/images/Calico_Research/网络演进方式.png" alt="网络演进方式"></p><p>想象一下，我们现在有几台PC需要组网，怎么办？直接找个交换机来。大家网线一插，就是个局域网了。现在我们中间有个人与我们业务不同，需要进行网络隔离，这就有了 Vlan。当然，例子举得有点粗暴，真实业务场景没有这么简单。总之，由于业务网络规划等原因，有了一个比较复杂的二层网络。</p><p>到了我们云计算场景中呢，有了一个 Vxlan 这样的技术，在三层网络中建立二层隧道，有了 overlay 网络这个概念，你 underlay 网络爱咋样咋样，我自行构建一个二层网络，再进行租户隔离。另外，留给Vxlan 的比特位也远远多于 Vlan，可以支持更多的租户。</p><p>那么，Calico 去掉了分层和二层组网(并不是没了)，形成的这个平面的三层网络如何解决业务规划等问题呢？答案就是 policy！它使用 route 加上 policy 将 network 又抽象了一层，后面我们再进行详细的说明。</p><p>另外，SDN 在这样的网络演进中又充当了一个什么角色呢?</p><ul><li>SDN &amp; SD-WAN</li><li>OpenFlow  VS Segment Routing</li></ul><p>在我看来，虽然openflow系的解决方案在 overlay 网络中如鱼得水，但让控制器给那些看起来很初级的网络协议栈背锅，也是有些滑稽的。所以，我更看好 segment routing 这种集中控制加上分布式智能的模式。关于 SDN 这部分内容以后有机会了再跟大家分享讨论。</p><p>By the way，关于网络的演进，有必要了解一下传统三层网络和叶脊网络，下面就先直接丢两张图，混个脸熟。</p><p>科普推荐：<a href="https://zhuanlan.zhihu.com/p/29975418" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/29975418</a></p><p><img src="/images/Calico_Research/传统三层网络.png" alt="传统三层网络"></p><p><img src="/images/Calico_Research/叶脊网络.png" alt="叶脊网络"></p><h3 id="Calico网络设计"><a href="#Calico网络设计" class="headerlink" title="Calico网络设计"></a>Calico网络设计</h3><p>How it works?</p><p>这是官网的介绍图：<br><img src="/images/Calico_Research/总介绍.png" alt="总介绍"></p><p>很清楚的说明了各个组件的功能和如何进行协同工作，下面我们还是把重心放在网络实现上。</p><p>Similarly，一张图足以说明：<br><img src="/images/Calico_Research/网络实现原理.png" alt="网络实现原理"><br>PS：其实第一种情况控制层面可以直接获得下一跳地址，但还是直接使用了路由协议。</p><p>首先我们来看看节点在同一个广播域的情况，官网原图—— Calico Over Ethernet Fabrics：<br><img src="/images/Calico_Research/Calico_Over_Ethernet_Fabrics.png" alt="Calico_Over_Ethernet_Fabrics"></p><p>二层为什么要这样设计呢？请参见前面关于 fabric 结构的<a href="https://zhuanlan.zhihu.com/p/29975418" target="_blank" rel="noopener">科普链接</a>和<a href="https://docs.projectcalico.org/v3.3/reference/private-cloud/l2-interconnect-fabrichttps://docs.projectcalico.org/v3.3/reference/private-cloud/l2-interconnect-fabric" target="_blank" rel="noopener">官网的设计说明</a>。<br>下面我们将四个广播域减少成两个，且暂时忽略 AS 和 RR 的概念，那么可以直接将逻辑抽象出这张图：<br><img src="/images/Calico_Research/Calico_Over_Ethernet_Fabrics_logic.png" alt="Calico_Over_Ethernet_Fabrics_logic"></p><p>路由器就是两台 calico node，上面创建的直连网络通过 ECMP 传输。</p><p>接着我们看看实现细节：<br><img src="/images/Calico_Research/接口对.png" alt="接口对"></p><p>首先有一对 tap 接口，socket 获得的数据是共享的，嗯……可能不太准确，就先理解成把数据传给一端，也就相当于传给了另一端^_^……它们分别位于宿主机(calico node)和 workload(container or namespace)。</p><p>接着，是路由收敛和策略制定：<br><img src="/images/Calico_Research/路由收敛.png" alt="路由收敛"></p><p>目的是存在于本地的 container 的地址，直接往对应的接口扔，跨节点就扔给下一跳(通过 BGP 路由学习到的，该协议由 bird 软件支持)；创建网络时给各个前缀打上了标签，可以自由制定策略（底层由 iptables 支持），默认 deny。</p><p>说到这里，calico 的基本原理其实就已经阐述清楚了，剩下的就是怎么与物理网络融合，进行路由条目学习的事情了。Calico 选择了 BGP 进行路由收敛，下节我们就把 calico 官网推荐的几种架构就行简单介绍。</p><p>在此之前，可能需要对一下内容有一定的了解：</p><ul><li>AS（自治系统）</li><li>IGP（内部网关协议）<ul><li>距离矢量：rip</li><li>链路状态：ospf、is-is</li><li>混合型：eigrp</li></ul></li><li>EGP（外部网关协议） <ul><li>BGP：ibgp 与 ebgp</li></ul></li><li>BGP 科普推荐：<a href="https://zhuanlan.zhihu.com/p/25433049" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/25433049</a></li><li>calico 选择 BGP 的原因：<a href="https://www.projectcalico.org/why-bgp/" target="_blank" rel="noopener">https://www.projectcalico.org/why-bgp/</a></li></ul><h3 id="BGP设计"><a href="#BGP设计" class="headerlink" title="BGP设计"></a>BGP设计</h3><p>Since Calico is, itself, a routed infrastructure, there are more engineering, architecture, and operations considerations thathave to be weighed when running Calico with an IP routed interconnection fabric.</p><p>在 BGP 设计中一般有如下三种架构，需要注意的是，比如 EBGP 架构，并不代表其不使用 iBGP。</p><ul><li>IBGP</li><li>EBGP</li><li>IBGP/EBGP</li></ul><p>公认比较废的是 IBPG 架构，比较好的是 IBGP/EBGP，但俗话说，没有最好的，只有更适合的，在 calico 形成的拓扑结构中，EBGP 架构是最合适的。<br>根据场景应用，官方给出了五种网络设计：<br><a href="https://docs.projectcalico.org/v3.3/reference/private-cloud/l3-interconnect-fabric" target="_blank" rel="noopener">https://docs.projectcalico.org/v3.3/reference/private-cloud/l3-interconnect-fabric</a></p><h4 id="The-AS-Per-Rack-model"><a href="#The-AS-Per-Rack-model" class="headerlink" title="The AS Per Rack model"></a>The AS Per Rack model</h4><p>即以 leaf 节点(或者说 ToR) 及其所连接的 calico node 为一个自治域(AS)。那么，spine 节点是提供二层连接的 ethernet，还是加入三层路由并设计为单独的自治域，这又分成了两种情况。</p><p>开始官网搬砖：</p><blockquote><p>This model is the closest to the model suggested by <a href="https://tools.ietf.org/search/rfc7938" target="_blank" rel="noopener">IETF RFC 7938</a>.<br>As mentioned earlier, there are two versions of this model, one with an set of Ethernet planes interconnecting the ToR switches, and the other where the core planes are also routers. The following diagrams may be useful for the discussion.<br><img src="/images/Calico_Research/The_AS_Per_Rack_model.png" alt="The_AS_Per_Rack_model"><br>The diagram above shows the AS per rack model where the ToR switches are physically meshed via a set of Ethernet switching planes.<br><img src="/images/Calico_Research/The_AS_Per_Rack_model_3.png" alt="The_AS_Per_Rack_model_3"><br>The diagram above shows the AS per rack model where the ToR switches are physically meshed via a set of discrete BGP spine routers, each in their own AS.<br>In this approach, every ToR-ToR or ToR-Spine (in the case of an AS per spine) link is an eBGP peering which means that there is no route-reflection possible (using standard BGP route reflectors) north of the ToR switches.<br>If the L2 spine option is used, the result of this is that each ToR must either peer with every other ToR switch in the cluster (which could be hundreds of peers).<br>If the AS per spine option is used, then each ToR only has to peer with each spine (there are usually somewhere between two and sixteen spine switches in a pod). However, the spine switches must peer with all ToR switches (again, that would be hundreds, but most spine switches have more control plane capacity than the average ToR, so this might be more scalable in many circumstances).<br>Within the rack, the configuration is the same for both variants, and is somewhat different than the configuration north of the ToR.<br>Every router within the rack, which, in the case of Calico is every compute server, shares the same AS as the ToR that they are connected to. That connection is in the form of an Ethernet switching layer. Each router in the rack must be directly connected to enable the AS to remain contiguous. The ToR’s router function is then connected to that Ethernet switching layer as well. The actual configuration of this is dependent on the ToR in use, but usually it means that the ports that are connected to the compute servers are treated as subnet or segment ports, and then the ToR’s router function has a single interface into that subnet.<br>This configuration allows each compute server to connect to each other compute server in the rack without going through the ToR router, but it will, of course, go through the ToR switching function. The compute servers and the ToR router could all be directly meshed, or a route reflector could be used within the rack, either hosted on the ToR itself, or as a virtual function hosted on one or more compute servers within the rack.<br>The ToR, as the eBGP router redistributes all of the routes from other ToRs as well as routes external to the data center to the compute servers that are in its AS, and announces all of the routes from within the AS (rack) to the other ToRs and the larger world. This means that each compute server will see the ToR as the next hop for all external routes, and the individual compute servers are the next hop for all routes internal to the rack.</p></blockquote><p>我将这两种情况的逻辑抽出来展现一下。</p><p>第一种：<br><img src="/images/Calico_Research/The_AS_Per_Rack_model_logic.png" alt="The_AS_Per_Rack_model_logic"></p><p>第二种：<br><img src="/images/Calico_Research/The_AS_Per_Rack_model_3_logic.png" alt="The_AS_Per_Rack_model_3_logic"></p><h4 id="The-AS-per-Compute-Server-model"><a href="#The-AS-per-Compute-Server-model" class="headerlink" title="The AS per Compute Server model"></a>The AS per Compute Server model</h4><p>即以每个 calico node 和 leaf node 分别设计为一个 AS。同样，spine 节点是提供二层连接的 ethernet，还是加入三层路由并设计为单独的自治域，这又分成了两种情况。</p><p>继续官网搬砖：</p><blockquote><p>This model takes the concept of an AS per rack to its logical conclusion. In the earlier referenced <a href="https://tools.ietf.org/search/rfc7938" target="_blank" rel="noopener">IETF RFC 7938</a> the assumption in the overall model is that the ToR is first tier aggregating and routing element. In Calico, the ToR, if it is an L3 router, is actually the second tier. Remember, in Calico, the compute server is always the first/last router for an endpoint, and is also the first/last point of aggregation.<br>Therefore, if we follow the architecture of the draft, the compute server, not the ToR should be the AS boundary. The differences can be seen in the following two diagrams.<br><img src="/images/Calico_Research/The_AS_per_Compute_Server_model.png" alt="The_AS_per_Compute_Server_model"><br>The diagram above shows the AS per compute server model where the ToR switches are physically meshed via a set of Ethernet switching planes.<br><img src="/images/Calico_Research/The_AS_per_Compute_Server_model_3.png" alt="The_AS_per_Compute_Server_model_3"><br>The diagram above shows the AS per compute server model where the ToR switches are physically connected to a set of independent routing planes.<br>As can be seen in these diagrams, there are still the same two variants as in the AS per rack model, one where the spine switches provide a set of independent Ethernet planes to interconnect the ToR switches, and the other where that is done by a set of independent routers.<br>The real difference in this model, is that the compute servers as well as the ToR switches are all independent autonomous systems. To make this work at scale, the use of four byte AS numbers as discussed in RFC 4893. Without using four byte AS numbering, the total number of ToRs and compute servers in a Calico fabric would be limited to the approximately five thousand available private AS 5 numbers. If four byte AS numbers are used, there are approximately ninety-two million private AS numbers available. This should be sufficient for any given Calico fabric.<br>The other difference in this model vs. the AS per rack model, is that there are no route reflectors used, as all BGP peerings are eBGP. In this case, each compute server in a given rack peers with its ToR switch which is also acting as an eBGP router. For two servers within the same rack to communicate, they will be routed through the ToR. Therefore, each server will have one peering to each ToR it is connected to, and each ToR will have a peering with each compute server that it is connected to (normally, all the compute servers in the rack).<br>The inter-ToR connectivity considerations are the same in scale and scope as in the AS per rack model.</p></blockquote><p>同样，我将这两种情况的逻辑抽出来展现一下。</p><p>第一种：<br><img src="/images/Calico_Research/The_AS_per_Compute_Server_model_logic.png" alt="The_AS_per_Compute_Server_model_logic"></p><p>第二种：<br><img src="/images/Calico_Research/The_AS_per_Compute_Server_model_3_logic.png" alt="The_AS_per_Compute_Server_model_3_logic"></p><h4 id="The-Downward-Default-model"><a href="#The-Downward-Default-model" class="headerlink" title="The Downward Default model"></a>The Downward Default model</h4><p>再强调一遍，合适的才是好的嘛！<br>该方案就加入了更多 calico 的本地特色。</p><p>搬砖：</p><blockquote><p>The final model is a bit different. Whereas, in the previous models, all of the routers in the infrastructure carry full routing tables, and leave their AS paths intact, this model 6 removes the AS numbers at each stage of the routing path. This is to prevent routes from other nodes in the network from not being installed due to it coming from the local AS (since they share the source and dest of the route share the same AS).<br>The following diagram will show the AS relationships in this model.<br><img src="/images/Calico_Research/The_Downward_Default_model.png" alt="The_Downward_Default_model"><br>In the diagram above, we are showing that all Calico nodes share the same AS number, as do all ToR switches. However, those ASs are different (A1 is not the same network as A2, even though the both share the same AS number A ).<br>While the use of a single AS for all ToR switches, and another for all compute servers simplifies deployment (standardized configuration), the real benefit comes in the offloading of the routing tables in the ToR switches.<br>In this model, each router announces all of its routes to its upstream peer (the Calico routers to their ToR, the ToRs to the spine switches). However, in return, the upstream router only announces a default route. In this case, a given Calico router only has routes for the endpoints that are locally hosted on it, as well as the default from the ToR. Since the ToR is the only route for the Calico network the rest of the network, this matches reality. The same happens between the ToR switches and the spine. This means that the ToR only has to install the routes that are for endpoints that are hosted on its downstream Calico nodes. Even if we were to host 200 endpoints per Calico node, and stuff 80 Calico nodes in each rack, that would still limit the routing table on the ToR to a maximum of 16,000 entries (well within the capabilities of even the most modest of switches).<br>Since the default is originated by the Spine (originally) there is no chance for a downward announced route to originate from the recipient’s AS, preventing the AS puddling problem.<br>There is one (minor) drawback to this model, in that all traffic that is destined for an invalid destination (the destination IP does not exist) will be forwarded to the spine switches before they are dropped.<br>It should also be noted that the spine switches do need to carry all of the Calico network routes, just as they do in the routed spines in the previous examples. In short, this model imposes no more load on the spines than they already would have, and substantially reduces the amount of routing table space used on the ToR switches. It also reduces the number of routes in the Calico nodes, but, as we have discussed before, that is not a concern in most deployments as the amount of memory consumed by a full routing table in Calico is a fraction of the total memory available on a modern compute server.</p></blockquote><p>逻辑抽象一下：<br><img src="/images/Calico_Research/The_Downward_Default_model_logic.png" alt="The_Downward_Default_model_logic"></p><h4 id="Recommendation"><a href="#Recommendation" class="headerlink" title="Recommendation"></a>Recommendation</h4><p>搬砖：</p><blockquote><p>The Project Calico team recommends the use of the AS per rack model if the resultant routing table size can be accommodated by the ToR and spine switches, remembering to account for projected growth.<br>If there is concern about the route table size in the ToR switches, the team recommends the Downward Default model.<br>If there are concerns about both the spine and ToR switch route table capacity, or there is a desire to run a very simple L2 fabric to connect the Calico nodes, then the user should consider the Ethernet fabric as detailed.<br>If a Calico user is interested in the AS per compute server, the Project Calico team would be very interested in discussing the deployment of that model.</p></blockquote><h4 id="概念补充介绍"><a href="#概念补充介绍" class="headerlink" title="概念补充介绍"></a>概念补充介绍</h4><ul><li>Full-mesh</li><li>Router Reflector</li></ul><h3 id="Internet接口设计"><a href="#Internet接口设计" class="headerlink" title="Internet接口设计"></a>Internet接口设计</h3><p>This is a problem that can not be ignored.</p><ul><li><p>We must know what we need !</p><ul><li>默认路由</li><li>默认路由 + 部分路由</li><li>完全的Internet路由表</li></ul></li><li><p>Options:</p><ul><li>单宿主末端网络</li><li>多宿主末端网络（单ISP单边界，单ISP多边界）</li><li>标准多宿主网络</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> technology </category>
          
      </categories>
      
      
        <tags>
            
            <tag> calico </tag>
            
            <tag> k8s </tag>
            
            <tag> openstack </tag>
            
            <tag> network </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Neutron Policy-based Routing Spec</title>
      <link href="/2018/08/16/neutron-pbr-spec/"/>
      <url>/2018/08/16/neutron-pbr-spec/</url>
      
        <content type="html"><![CDATA[<h3 id="实现目标"><a href="#实现目标" class="headerlink" title="实现目标"></a>实现目标</h3><p>随着云计算的发展，安全方面得到越来越多的重视，但云安全这块领域应该才算刚起步，目前各个传统安全厂商将各自的安全产品云化也只是将镜像抠出来部署进云环境，然后使用传统的处理方式将流量引入安全设备进行处理。</p><p>可行性方案详见：<a href="http://21c.me/2018/05/20/openstack%E4%B8%AD%E5%BC%95%E5%85%A5firewall%E9%95%9C%E5%83%8F%E6%96%B9%E6%A1%88%E6%A6%82%E8%BF%B0/">openstack中引入firewall镜像方案概述</a></p><p>目前采用的方案实现原理详见： <a href="http://21c.me/2018/05/20/openstack%E4%B8%AD%E5%BC%95%E5%85%A5firewall%E9%95%9C%E5%83%8F%E2%80%94%E2%80%94%E7%A7%9F%E6%88%B7%E7%BD%91%E7%BB%9C%E6%97%81%E6%8C%82%E5%BC%95%E6%B5%81%E5%9B%9E%E6%B3%A8/">openstack中引入firewall镜像——租户网络旁挂引流回注</a>，这里将实现目标再次进行说明。</p><p>使用类似于“物理旁挂，逻辑串联”的方式旁挂在 qrouter 旁。<br>根据用户的需求，是否使用 PBR 将指定 subnet 流量引入 FW，需要则在 qrouter 的 namespace 写入 iptables 策略，不需要则删掉策略。</p><p>拓扑如下图所示：<br><img src="https://sirius21c-1256566528.cos.ap-beijing.myqcloud.com/openstack/neutron/firewall%E5%AF%B9%E6%8E%A5--%E7%A7%9F%E6%88%B7%E7%BD%91%E7%BB%9C%E9%83%A8%E7%BD%B2%E4%B9%8B%E6%97%81%E6%8C%82%E5%BC%95%E6%B5%81%E5%9B%9E%E6%B3%A8.png" alt="租户网络内部L3部署——旁挂引流回注"></p><p>即完成以下目标：</p><ul><li>可以使用 360 的镜像启动虚机实例提供 firewall 功能</li><li>将同 router 下的 vm 子网流量引向 firewall （policy-based routing）</li></ul><h3 id="架构设计"><a href="#架构设计" class="headerlink" title="架构设计"></a>架构设计</h3><p>根据neutron的结构，该neutron-uplugin项目按照service plugin 架构去实现，以service_plugin的配置项被neutron加载。这样可以通过配置文件去管理该插件是否进行加载，这样去做避免了keystone，api框架的设计，同时也符合neutron项目对高级功能的实现。</p><p><img src="/images/neutron-pbr-spec/neutron-uplugin实现架构.png" alt="neutron-uplugin实现架构"></p><p>neutron-server: 在配置文件中指定uplugin后，neutron-server会加载uplugin中的resource， 也就是 firewall 和 policyrouting。这样neutron-server就可以将与该几种资源相关的API路由到我们的方法上，从而实现相应的功能， 在前端我们需要单独的发送API来实现该功能。</p><p>uplugin：主要负责数据库的读写，并且与agent之间进行RPC通信。</p><p>agent：调用driver实现功能， 同时实现与plugin之间的RPC通信。</p><p>driver：具体的去实现相应的功能。</p><p>需要进行补充说明的是，firewall 模块虽然采用自服务模式，但并不向租户暴露虚机实体，即 firewall 虚机建立在 admin_project 下，向用户暴露IP地址。</p><p>因此，uplugin需要从配置文件读取 admin 的权限，另外对于镜像和其 flavor 也在配置文件里：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">/etc/neutron/neutron.conf</span><br><span class="line"></span><br><span class="line">[service_auth]</span><br><span class="line">memcached_servers = 192.168.100.15:11211</span><br><span class="line"># cafile = /opt/stack/data/ca-bundle.pem</span><br><span class="line">project_domain_name = Default</span><br><span class="line">project_name = admin</span><br><span class="line">user_domain_name = Default</span><br><span class="line">password = ustack</span><br><span class="line">username = admin</span><br><span class="line">auth_type = password</span><br><span class="line">auth_url = http://192.168.100.15/identity</span><br><span class="line"></span><br><span class="line">[firewall]</span><br><span class="line">image_id = 2bd36666-23f3-4116-bbf8-05d99ce6ed53</span><br><span class="line">flavor_id = d2</span><br></pre></td></tr></table></figure></p><h3 id="数据库设计"><a href="#数据库设计" class="headerlink" title="数据库设计"></a>数据库设计</h3><p>项目的整体设计参照neutron service plugin（neutron-lbaas, neutron-fwaas, neutron-vpnaas) 的架构设计，故在数据库的设计上，也同service plugin 一样，在neutron 的数据库中插入表，利用alembic单独的控制该项目表的版本。目前在数据库中插入了gwratelimits 和fipratelimits表，还有一个进行版本控制的alembic_version_fiplimit 表（记录版本号）。在升级的时，采用neutron-db-manage 加载该子项目去升级。</p><p>注：由于RBAC，某些字段进行了冗余。一些级联操作也待改进。</p><h4 id="E-R图"><a href="#E-R图" class="headerlink" title="E-R图"></a>E-R图</h4><p><img src="/images/neutron-pbr-spec/neutron引流E-R图.png" alt="neutron引流E-R图"></p><p>这是最终的模型。vm_subnet 和 fw_subnet 这两张表是为了对建立 firewall 和 进行引流的 subnet 进行记录和统计，以便对网络引流拓扑进行更新操作。目前没有这两张表，即不支持 update 操作，firewall 和 fw_subnet(资源)也是 1:1 的关系。</p><h4 id="firewall"><a href="#firewall" class="headerlink" title="firewall"></a>firewall</h4><p>为了避免和 fwaas 的表产生冲突，表名改为 firewalls_360<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">+------------------+--------------+------+-----+---------+-------+</span><br><span class="line">| Field            | Type         | Null | Key | Default | Extra |</span><br><span class="line">+------------------+--------------+------+-----+---------+-------+</span><br><span class="line">| project_id       | varchar(255) | YES  |     | NULL    |       |</span><br><span class="line">| id               | varchar(36)  | NO   | PRI | NULL    |       |</span><br><span class="line">| name             | varchar(255) | YES  |     | NULL    |       |</span><br><span class="line">| router_id        | varchar(36)  | NO   | MUL | NULL    |       |</span><br><span class="line">| subnet_id        | varchar(36)  | NO   | UNI | NULL    |       |</span><br><span class="line">| router_port_id   | varchar(36)  | NO   | UNI | NULL    |       |</span><br><span class="line">| instance_port_id | varchar(36)  | NO   | MUL | NULL    |       |</span><br><span class="line">| instance_id      | varchar(36)  | YES  | UNI | NULL    |       |</span><br><span class="line">| subnet_cidr      | varchar(64)  | YES  | UNI | NULL    |       |</span><br><span class="line">| ip_address       | varchar(15)  | YES  |     | NULL    |       |</span><br><span class="line">| status           | varchar(16)  | YES  |     | NULL    |       |</span><br><span class="line">| created_at       | datetime     | NO   |     | NULL    |       |</span><br><span class="line">| update_at        | datetime     | NO   |     | NULL    |       |</span><br><span class="line">| description      | varchar(255) | YES  |     | NULL    |       |</span><br><span class="line">+------------------+--------------+------+-----+---------+-------+</span><br></pre></td></tr></table></figure></p><h4 id="policyrouting"><a href="#policyrouting" class="headerlink" title="policyrouting"></a>policyrouting</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">+--------------+--------------+------+-----+---------+-------+</span><br><span class="line">| Field        | Type         | Null | Key | Default | Extra |</span><br><span class="line">+--------------+--------------+------+-----+---------+-------+</span><br><span class="line">| project_id   | varchar(255) | YES  |     | NULL    |       |</span><br><span class="line">| id           | varchar(36)  | NO   | PRI | NULL    |       |</span><br><span class="line">| name         | varchar(255) | YES  |     | NULL    |       |</span><br><span class="line">| vm_subnet_id | varchar(36)  | NO   | UNI | NULL    |       |</span><br><span class="line">| vm_port_id   | varchar(36)  | YES  | UNI | NULL    |       |</span><br><span class="line">| gw_port_id   | varchar(36)  | YES  |     | NULL    |       |</span><br><span class="line">| firewall_id  | varchar(36)  | NO   | MUL | NULL    |       |</span><br><span class="line">| status       | varchar(16)  | YES  |     | NULL    |       |</span><br><span class="line">| created_at   | datetime     | NO   |     | NULL    |       |</span><br><span class="line">| update_at    | datetime     | NO   |     | NULL    |       |</span><br><span class="line">| description  | varchar(255) | YES  |     | NULL    |       |</span><br><span class="line">+--------------+--------------+------+-----+---------+-------+</span><br></pre></td></tr></table></figure><h3 id="业务逻辑"><a href="#业务逻辑" class="headerlink" title="业务逻辑"></a>业务逻辑</h3><h4 id="firewall-1"><a href="#firewall-1" class="headerlink" title="firewall"></a>firewall</h4><h5 id="create"><a href="#create" class="headerlink" title="create"></a>create</h5><ol><li>前端提供 firewall 的 name，承载 firewall 的子网的 cidr，和执行引流策略的 router_id<br>注：如果可以的话，前端需要对 cidr 进行判断，将租户已存在的 cidr 和 fw_subnet 已经用过的（通过 GET API）设为非法。</li><li>在 admin_project 下建立 network 和指定 cidr 的 subnet</li><li>启动一个 firewall 实例，并分配取消安全组和端口安全的 port，再连接上指定的 router</li></ol><h5 id="get-复数"><a href="#get-复数" class="headerlink" title="get(复数)"></a>get(复数)</h5><p>返回如下字段：<br>router_id/ip_address/status/created_at/update_at/description</p><h5 id="get"><a href="#get" class="headerlink" title="get"></a>get</h5><ol><li>前端指定 firewall_id</li><li>返回如下字段：<br>router_id/ip_address/status/created_at/update_at/description<br>protected_subnet：需要通过 pbr 复数资源的 GET API 获取，再通过 firewall_id 字段过滤，显示出来的资源关联至租户的 subnet 资源。</li></ol><h5 id="delete"><a href="#delete" class="headerlink" title="delete"></a>delete</h5><p>前端指定 firewall_id，并进行 pbr 的复数资源 GET 操作，相应 firewall_id 无记录，才能进行。</p><h4 id="policy-based-routing"><a href="#policy-based-routing" class="headerlink" title="policy-based routing"></a>policy-based routing</h4><h5 id="create-1"><a href="#create-1" class="headerlink" title="create"></a>create</h5><ol><li>前端点进 firewall 资源信息，建立 pbr</li><li>前端提供选择可以在当前 firewall 下发引流策略的 subnet，即过滤出与 firewall 连接同一 router 的 subnet</li><li>前端提供 firewall_id 和 vm_subnet_id</li><li>后端根据给出信息获取如下信息<br>firewall_id –&gt; [route_id, fw_port_id, fw_subnet_id, firewall_ip]<br>route_id –&gt; [gw_port_id]<br>vm_subnet_id –&gt; [vm_port_id]</li><li>在 router 的 namespace 中下发引流策略，详细策略请参见：<a href="http://21c.me/2018/05/20/openstack%E4%B8%AD%E5%BC%95%E5%85%A5firewall%E9%95%9C%E5%83%8F%E2%80%94%E2%80%94%E7%A7%9F%E6%88%B7%E7%BD%91%E7%BB%9C%E6%97%81%E6%8C%82%E5%BC%95%E6%B5%81%E5%9B%9E%E6%B3%A8/#%E5%BC%95%E6%B5%81%E7%AD%96%E7%95%A5">引流策略</a><br>注：这里采用了 taskflow 库，保证策略下发和删除的完整性，避免异常导致流量断掉。</li></ol><h5 id="get-复数-1"><a href="#get-复数-1" class="headerlink" title="get(复数)"></a>get(复数)</h5><p>返回 vm_subnet_id 字段：并不显示，直接关联至租户的 subnet 资源。</p><h5 id="delete-1"><a href="#delete-1" class="headerlink" title="delete"></a>delete</h5><p>前端指定 pbr_id，进行删除操作。</p><h3 id="API设计"><a href="#API设计" class="headerlink" title="API设计"></a>API设计</h3><h4 id="firewall-2"><a href="#firewall-2" class="headerlink" title="firewall"></a>firewall</h4><p>POST /v2.0/uplugin/firewalls<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -g -i -X POST http://192.168.100.15:9696/v2.0/uplugin/firewalls -H &quot;X-Auth-Token: gAAAAABbWEjdihEIOvcGHJG-frz80F1thD9FCwn3nhMd3FqIBiSIQAV60RK_yi5Nok36btlUG-D3Kn-NID4EzgeRa2OLJhk-B6qT1-ehJEBJQEc96ewNOdDExVQfV48c3Hmi8TvryE4a1Z1IrUqr8Vp_XIELcSLh344jt0pCEAfUjDq8B09yE80&quot; -d &apos;&#123;&quot;firewall&quot;: &#123;&quot;name&quot;:&quot;360&quot;,&quot;router_id&quot;:&quot;8c16e162-37a2-469a-b77d-42b3c49e3db8&quot;,&quot;subnet_cidr&quot;:&quot;192.168.139.0/24&quot;&#125;&#125;&apos;</span><br></pre></td></tr></table></figure></p><p>GET /v2.0/uplugin/firewalls<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -g -i -X GET http://192.168.100.15:9696/v2.0/uplugin/firewalls -H &quot;X-Auth-Token: gAAAAABbYtJAK1A9_nOlAvTsleUI6B88lxCakChpAgw64q6jFzLmO_3rVda2QIK3AE9r8QcFbVXorsUuYcb-hmPqFM4a5_kUJjuMFPZHvBY-MhpNRk6YuU-8nWeQQil8UV56rxOBEfi_6whWbi4IzEfq-8cHG1s4RVkdfqVHXEnQGVE43n_VrVM&quot;</span><br></pre></td></tr></table></figure></p><p>GET /v2.0/uplugin/firewalls/id<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -g -i -X GET http://192.168.100.15:9696/v2.0/uplugin/firewalls/99def6cc-984e-4bc3-8c4a-1d5f9736da21 -H &quot;X-Auth-Token: gAAAAABbYtJAK1A9_nOlAvTsleUI6B88lxCakChpAgw64q6jFzLmO_3rVda2QIK3AE9r8QcFbVXorsUuYcb-hmPqFM4a5_kUJjuMFPZHvBY-MhpNRk6YuU-8nWeQQil8UV56rxOBEfi_6whWbi4IzEfq-8cHG1s4RVkdfqVHXEnQGVE43n_VrVM&quot;</span><br></pre></td></tr></table></figure></p><p>DELETE /v2.0/uplugin/firewall/id<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -g -i -X DELETE http://192.168.100.15:9696/v2.0/uplugin/firewalls/99def6cc-984e-4bc3-8c4a-1d5f9736da21 -H &quot;X-Auth-Token: gAAAAABbYtJAK1A9_nOlAvTsleUI6B88lxCakChpAgw64q6jFzLmO_3rVda2QIK3AE9r8QcFbVXorsUuYcb-hmPqFM4a5_kUJjuMFPZHvBY-MhpNRk6YuU-8nWeQQil8UV56rxOBEfi_6whWbi4IzEfq-8cHG1s4RVkdfqVHXEnQGVE43n_VrVM&quot;</span><br></pre></td></tr></table></figure></p><h4 id="policy-based-routing-1"><a href="#policy-based-routing-1" class="headerlink" title="policy_based_routing"></a>policy_based_routing</h4><p>POST /v2.0/uplugin/policyroutings<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -g -i -X POST http://192.168.100.15:9696/v2.0/uplugin/policyroutings -H &quot;X-Auth-Token: gAAAAABbXsqe9PQrpexezU8bl02zK-Kil3PBh2uZIn11S0NWI3Vf164_KoCAxprr_1hVSZSzSuyj1kZyAplJ7SmZ9CvmwBAYd06-DSvxcaNy2t5LWbNtyA8BLhEd02sjnO3gQtWCWu37C19BywcpcgvbIy57BRnqL2aeoPGyC330b1_v0gjrlxA&quot; -d &apos;&#123;&quot;policyrouting&quot;: &#123;&quot;name&quot;: &quot;test&quot;, &quot;firewall_id&quot;: &quot;18ac59a4-0925-4bfc-8dcf-c3dc9179cba6&quot;, &quot;vm_subnet_id&quot;: &quot;4f29ab77-e7da-4189-a23a-819af522ae51&quot;&#125;&#125;&apos;</span><br></pre></td></tr></table></figure></p><p>GET /v2.0/uplugin/policyroutings<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -g -i -X GET http://192.168.100.15:9696/v2.0/uplugin/policyroutings -H &quot;X-Auth-Token: gAAAAABbYtJAK1A9_nOlAvTsleUI6B88lxCakChpAgw64q6jFzLmO_3rVda2QIK3AE9r8QcFbVXorsUuYcb-hmPqFM4a5_kUJjuMFPZHvBY-MhpNRk6YuU-8nWeQQil8UV56rxOBEfi_6whWbi4IzEfq-8cHG1s4RVkdfqVHXEnQGVE43n_VrVM&quot;</span><br></pre></td></tr></table></figure></p><p>DELETE /v2.0/uplugin/policyrouting/id<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -g -i -X DELETE http://192.168.100.15:9696/v2.0/uplugin/policyroutings/1511d675-e311-4649-8047-5a9db073f0b4 -H &quot;X-Auth-Token: gAAAAABbYtJAK1A9_nOlAvTsleUI6B88lxCakChpAgw64q6jFzLmO_3rVda2QIK3AE9r8QcFbVXorsUuYcb-hmPqFM4a5_kUJjuMFPZHvBY-MhpNRk6YuU-8nWeQQil8UV56rxOBEfi_6whWbi4IzEfq-8cHG1s4RVkdfqVHXEnQGVE43n_VrVM&quot;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> technology </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openstack </tag>
            
            <tag> network </tag>
            
            <tag> neutron </tag>
            
            <tag> firewall对接 </tag>
            
            <tag> security </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一路同行，just you！</title>
      <link href="/2018/08/10/BigCat-20180810/"/>
      <url>/2018/08/10/BigCat-20180810/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/BigCat_20180810/一路同行.jpeg" alt="一路同行"><br>春去秋来，大江南北，又听见你的呼吸在笑<br>一路同行，just you！<br><strong><em>@致25岁的大喵</em></strong></p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=694286&auto=0&height=66"></iframe><hr><p>细数来，我们已经快要一起走过九个春秋了。<br>从高一初识，到京津两地异地求学，再到现在远隔千里各自飘在异乡，我们经历了很多。<br>有多少次欢呼雀跃，又有多少次不欢而散，一列命运的火车，让我和小鱼儿与你重聚。不知不觉，我们仨儿成为了分不开的挚友。</p><p>虽然现在我们三个暂时缺席彼此的故事，但我相信重聚的那一天也不远了。<br><img src="/images/BigCat_20180810/全家福.jpeg" width="260" hegiht="60" align="top"><br></p><p>你抬头，<br>我回首，<br>开心就是这么简单。</p><p><img src="/images/BigCat_20180810/大喵吃西瓜.jpeg" width="300" hegiht="260" align="top"><br></p><p>大喵，生日快乐！</p><p><strong><em>–by Cici</em></strong></p><hr><p>我喵~25岁生日快乐。<br>现在对你就两点要求！竖起耳朵听好：</p><ol><li>工作之余记得健身、打球巴拉巴拉都可以，把身体养壮~</li><li>放心拼我和cc做你的后盾，等你发达，必须带我和cc飞~</li></ol><p><strong><em>–by 小鱼儿</em></strong></p>]]></content>
      
      
      <categories>
          
          <category> emotion </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> Happy Birthday </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Tap as a Service</title>
      <link href="/2018/08/09/TAPaaS/"/>
      <url>/2018/08/09/TAPaaS/</url>
      
        <content type="html"><![CDATA[<p>TAPaaS，全称为Tap as a Service，其主要功能是将流量镜像到特定的、运行有流量分析软件的虚拟机中，以实现租户流量的可视化。</p><h3 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h3><p>TaaS中主要定义了两个数据类型，如下：</p><ul><li><p><strong><em>Tap Service</em></strong>：指的是一个流量镜像服务的实例，其中一个Tap Service需要关联一个Destination  Port(流量需要镜像到的目的地，即：镜像目的地)，同时，一个Tap Service可以包含多个Tap Flow，对于Tap  Flow的解释参见如下。Tap Service中定义了若干个字段值，具体如下所示，其中port_id即为关联的Destination Port。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&apos;tap_services&apos;: &#123;</span><br><span class="line">    &apos;id&apos;: &#123;&apos;allow_post&apos;: False, &apos;allow_put&apos;: False,</span><br><span class="line">           &apos;validate&apos;: &#123;&apos;type:uuid&apos;: None&#125;, &apos;is_visible&apos;: True,</span><br><span class="line">           &apos;primary_key&apos;: True&#125;,</span><br><span class="line">    &apos;tenant_id&apos;: &#123;&apos;allow_post&apos;: True, &apos;allow_put&apos;: False,</span><br><span class="line">                  &apos;validate&apos;: &#123;&apos;type:string&apos;: None&#125;,</span><br><span class="line">                  &apos;required_by_policy&apos;: True, &apos;is_visible&apos;: True&#125;,</span><br><span class="line">    &apos;name&apos;: &#123;&apos;allow_post&apos;: True, &apos;allow_put&apos;: True,</span><br><span class="line">             &apos;validate&apos;: &#123;&apos;type:string&apos;: None&#125;,</span><br><span class="line">             &apos;is_visible&apos;: True, &apos;default&apos;: &apos;&apos;&#125;,</span><br><span class="line">    &apos;description&apos;: &#123;&apos;allow_post&apos;: True, &apos;allow_put&apos;: True,</span><br><span class="line">                    &apos;validate&apos;: &#123;&apos;type:string&apos;: None&#125;,</span><br><span class="line">                    &apos;is_visible&apos;: True, &apos;default&apos;: &apos;&apos;&#125;,</span><br><span class="line">    &apos;port_id&apos;: &#123;&apos;allow_post&apos;: True, &apos;allow_put&apos;: False,</span><br><span class="line">                &apos;validate&apos;: &#123;&apos;type:uuid&apos;: None&#125;,</span><br><span class="line">                &apos;is_visible&apos;: True&#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><strong><em>Tap Flow</em></strong>：指的是一个流量镜像服务的规则，其中一个Tap Flow需要关联一个Source Port(流量从哪里镜像，即：镜像源)。Tap  Flow中定义了若干个字段值，具体如下所示，其中direction可以包含IN、OUT、BOTH三个方向值，即分别对应入方向、出方向、出入结合。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&apos;tap_flows&apos;: &#123;</span><br><span class="line">    &apos;id&apos;: &#123;&apos;allow_post&apos;: False, &apos;allow_put&apos;: False,</span><br><span class="line">           &apos;validate&apos;: &#123;&apos;type:uuid&apos;: None&#125;, &apos;is_visible&apos;: True,</span><br><span class="line">           &apos;primary_key&apos;: True&#125;,</span><br><span class="line">    &apos;tenant_id&apos;: &#123;&apos;allow_post&apos;: True, &apos;allow_put&apos;: False,</span><br><span class="line">                  &apos;validate&apos;: &#123;&apos;type:string&apos;: None&#125;,</span><br><span class="line">                  &apos;required_by_policy&apos;: True, &apos;is_visible&apos;: True&#125;,</span><br><span class="line">    &apos;name&apos;: &#123;&apos;allow_post&apos;: True, &apos;allow_put&apos;: True,</span><br><span class="line">             &apos;validate&apos;: &#123;&apos;type:string&apos;: None&#125;,</span><br><span class="line">             &apos;is_visible&apos;: True, &apos;default&apos;: &apos;&apos;&#125;,</span><br><span class="line">    &apos;description&apos;: &#123;&apos;allow_post&apos;: True, &apos;allow_put&apos;: True,</span><br><span class="line">                    &apos;validate&apos;: &#123;&apos;type:string&apos;: None&#125;,</span><br><span class="line">                    &apos;is_visible&apos;: True, &apos;default&apos;: &apos;&apos;&#125;,</span><br><span class="line">    &apos;tap_service_id&apos;: &#123;&apos;allow_post&apos;: True, &apos;allow_put&apos;: False,</span><br><span class="line">                       &apos;validate&apos;: &#123;&apos;type:uuid&apos;: None&#125;,</span><br><span class="line">                       &apos;required_by_policy&apos;: True, &apos;is_visible&apos;: True&#125;,</span><br><span class="line">    &apos;source_port&apos;: &#123;&apos;allow_post&apos;: True, &apos;allow_put&apos;: False,</span><br><span class="line">                    &apos;validate&apos;: &#123;&apos;type:uuid&apos;: None&#125;,</span><br><span class="line">                    &apos;required_by_policy&apos;: True, &apos;is_visible&apos;: True&#125;,</span><br><span class="line">    &apos;position&apos;: &#123;&apos;allow_post&apos;: True, &apos;allow_put&apos;: False,</span><br><span class="line">                  &apos;validate&apos;: &#123;&apos;type:values&apos;: position_enum&#125;,</span><br><span class="line">                  &apos;is_visible&apos;: True&#125;</span><br><span class="line">    &apos;direction&apos;: &#123;&apos;allow_post&apos;: True, &apos;allow_put&apos;: False,</span><br><span class="line">                  &apos;validate&apos;: &#123;&apos;type:values&apos;: direction_enum&#125;,</span><br><span class="line">                  &apos;is_visible&apos;: True&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p>为了防止租户间的流量泄露，一个Tap Service只能属于一个租户，相应的关联的Destination Port和Source Port都应该属于该租户。</p><h3 id="总体框架"><a href="#总体框架" class="headerlink" title="总体框架"></a>总体框架</h3><p><img src="/images/TAPaaS/TAPaaS总体框架.png" alt="TAPaaS总体框架"></p><p>TaaS总体框架如上图所示，主要分为两大部分，即：Service端和Agent端。通常Service端部署在控制节点上，而Agent端部署在计算节点上，二者之间通过RPC通道进行交互信息。图中的Service Driver和Agent Driver都是设计成可插式的，可以替换成其他Driver。</p><h3 id="代码结构"><a href="#代码结构" class="headerlink" title="代码结构"></a>代码结构</h3><p>主要分为如下几个部分：</p><ul><li>CLI<br>这部分主要是提供一些CLI供使用者使用TaaS服务。这部分的代码主要在taas_client目录下，该目录下有两个.py文件，分别为tapflow.py和tapservice.py，分别提供了tapflow和tapservice的增、删、改、查CLI。</li><li>DB<br>这部分主要是定义了tapflow和tapservice的数据库存储格式及其相应的增、删、改、查等数据库操作。这部分的代码主要在db目录下对应的taas_db.py文件。</li><li>Service Plugin<br>这部分主要的功能是处理CLI传下来的操作请求，在数据库中维护tapservice和tapflow的状态，并将请求投递给相应的Service Plugin Driver。这部分的代码在services/taas目录下的taas_plugin.py文件，该文件定义的TaasPlugin即为Service Plugin。</li><li>Service Plugin Driver<br>接收Service Plugin发下来的请求，通过RPC通道转送给相应的Agent。这部分代码在services/taas/service_drivers目录下的taas_rpc.py文件，该文件定义的TaasRpcDriver即为Service Plugin Driver。</li><li>Agent<br>通过RPC通道接收Service Plugin Driver发来的请求，并调用相应的Agent Driver来处理这些请求。这部分代码在services/taas/agents/ovs目录下的taas_ovs_agent.py文件，该文件定义的TaasOvsAgentRpcCallback即为对应的Agent。</li><li>Agent Driver<br>接收Agent下发的请求，并处理，在本地OVS设备上增加或删除一些tap相关的流表。除此之外，该Agent Driver负责在本地OVS设备初始化一些tap相关的流表。这部分代码在services/taas/drivers/linux/ovs_taas.py文件，该文件定义的OvsTaasDriver即为对应的Agent Driver。</li></ul><h3 id="实现原理"><a href="#实现原理" class="headerlink" title="实现原理"></a>实现原理</h3><p>TaaS设计中引入了br-tap桥，串接在br-int和br-tun中间，便于提供更为灵活的镜像策略，如下图所示。<br>图中分别给出了三种流量类型，即：租户流量、本地镜像流量、远程镜像流量。</p><p><img src="/images/TAPaaS/流量示意图.png" alt="流量示意图.png"></p><h4 id="初始化产生的流表"><a href="#初始化产生的流表" class="headerlink" title="初始化产生的流表"></a>初始化产生的流表</h4><p>TaaS中存在若干个流表项，如下表所示：</p><table><thead><tr><th style="text-align:center">Table</th><th style="text-align:left">含义</th><th style="text-align:center">位置</th></tr></thead><tbody><tr><td style="text-align:center">1</td><td style="text-align:left">处理从br-int 上送过来的流量</td><td style="text-align:center">br-tap</td></tr><tr><td style="text-align:center">2</td><td style="text-align:left">处理从br-tun上过来的流量</td><td style="text-align:center">br-tap</td></tr><tr><td style="text-align:center">30</td><td style="text-align:left">处理发送给br-tun 的流量</td><td style="text-align:center">br-tun</td></tr><tr><td style="text-align:center">31</td><td style="text-align:left">处理送出br-tun的流量， 广播泛洪到所有的vxlan端口</td><td style="text-align:center">br-tun</td></tr><tr><td style="text-align:center">35</td><td style="text-align:left">分类表：<br>1.发送方指定端口发出，接收方的br-tun收到后直接送给br-tap，无需在返送给发送方；<br>2.发送方并不知道流量要从那个端口发送出， 因此只能够通过广播泛洪到所有的端口， 接收的br-tun收到后除了直接送给br-tap,还需要反射流量给发送方；<br>3.反射流量给发送方，发送方的br-tun收到保温后学习到了一条单播表项</td><td style="text-align:center">br-tun</td></tr><tr><td style="text-align:center">36</td><td style="text-align:left">destination port 所在的host 的br-tun检查流量合法性</td><td style="text-align:center">br-tun</td></tr><tr><td style="text-align:center">37</td><td style="text-align:left">source port所在host的br-tun上检查由destination port反射回的流量合法性</td><td style="text-align:center">br-tun</td></tr><tr><td style="text-align:center">38</td><td style="text-align:left">负责将流量送给br-tap，如果是广播泛洪过来的，还需要将流量反射给发送方</td><td style="text-align:center">br-tun</td></tr><tr><td style="text-align:center">39</td><td style="text-align:left">发送方根据接收方反射回的流量通过自学习方式产生单播流表项</td><td style="text-align:center">br-tun</td></tr></tbody></table><h4 id="创建tap-service"><a href="#创建tap-service" class="headerlink" title="创建tap service"></a>创建tap service</h4><p>创建tap service，其关联的destination port为MON虚拟机对应的neutron port。<br>创建好tap service之后，br-int、br-tap、br-tun上会动态添加一些与taas相关的流表项，具体如下：</p><ul><li><p>br-int<br>下面流表中，port_vlan_id为MON虚拟机关联的neutron port所属的内部vlan  id值，ovs_port_id为MON虚拟机关联的neutron port对应在br-int桥上的ofport值。taas_id为tap  serivce关联的专用ID值，在内部用作VLAN值，在外部用作VNI使用。下面这条流表意义：从br-tap收到流量后，将vlan值修改成MON虚拟机关联的内部VLAN值，再送给MON虚拟机。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">table=0,priority=25,in_port=patch-int-tap,dl_vlan=taas_id,actions=mod_vlan_vid:port_vlan_id,output:ovs_port_id</span><br></pre></td></tr></table></figure></li><li><p>br-tap</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># table=1用于指示本地接收到了镜像流量，需要反射回br-int，由br-int再送给MON虚拟机</span><br><span class="line">table=1,priority=1,dl_vlan=taas_id,actions=output:in_port</span><br><span class="line"># 从外部经过br-tun接收到的流量，需要送给br-int做远程镜像</span><br><span class="line">table=2,priority=1,dl_vlan=taas_id,output:patch_tap_int</span><br></pre></td></tr></table></figure></li><li><p>br-tun</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 从vxlan端口接收到镜像流量，先把报文的VLAN值暂存在寄存器reg0，用于在table=35中进一步做分类。接着把报文的VLAN修改成VNI值，最后丢给分类表table=35</span><br><span class="line">table=4,priority=1,tun_id=taas_id,actions=move:NXM_OF_VLAN_TCI[0..11]-&gt;NXM_NX_REG0[0..11],move:NXM_NX_TUN_ID[0..11]-&gt;NXM_OF_VLAN_TCI[0..11],resubmit(,35)</span><br><span class="line"># 在destination port所在host上的br-tun执行合法性判断.如果合法，则将流量继续丢给table=38作进一步的处理。 */</span><br><span class="line">table=36,priority=1,tun_id=taas_id,resubmit(,38)</span><br></pre></td></tr></table></figure></li></ul><p>对应的代码如下：<br>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"># Add flow(s) in br-int</span><br><span class="line">self.int_br.add_flow(table=0,</span><br><span class="line">                     priority=25,</span><br><span class="line">                     in_port=patch_int_tap_id,</span><br><span class="line">                     dl_vlan=taas_id,</span><br><span class="line">                     actions=&quot;mod_vlan_vid:%s,output:%s&quot; %</span><br><span class="line">                     (str(port_vlan_id), str(ovs_port_id)))</span><br><span class="line"># Add flow(s) in br-tap</span><br><span class="line">self.tap_br.add_flow(table=taas_ovs_consts.TAAS_RECV_LOC,</span><br><span class="line">                     priority=1,</span><br><span class="line">                     dl_vlan=taas_id,</span><br><span class="line">                     actions=&quot;output:in_port&quot;)</span><br><span class="line">self.tap_br.add_flow(table=taas_ovs_consts.TAAS_RECV_REM,</span><br><span class="line">                     priority=1,</span><br><span class="line">                     dl_vlan=taas_id,</span><br><span class="line">                     actions=&quot;output:%s&quot; % str(patch_tap_int_id))</span><br><span class="line"># Add flow(s) in br-tun</span><br><span class="line">for tunnel_type in ovs_consts.TUNNEL_NETWORK_TYPES:</span><br><span class="line">    self.tun_br.add_flow(table=ovs_consts.TUN_TABLE[tunnel_type],</span><br><span class="line">                         priority=1,</span><br><span class="line">                         tun_id=taas_id,</span><br><span class="line">                         actions=(</span><br><span class="line">                             &quot;move:NXM_OF_VLAN_TCI[0..11]-&gt;&quot;</span><br><span class="line">                             &quot;NXM_NX_REG0[0..11],move:NXM_NX_TUN_ID&quot;</span><br><span class="line">                             &quot;[0..11]-&gt;NXM_OF_VLAN_TCI[0..11],&quot;</span><br><span class="line">                             &quot;resubmit(,%s)&quot; %</span><br><span class="line">                             taas_ovs_consts.TAAS_CLASSIFY))</span><br><span class="line">self.tun_br.add_flow(table=taas_ovs_consts.TAAS_DST_CHECK,</span><br><span class="line">                     priority=1,</span><br><span class="line">                     tun_id=taas_id,</span><br><span class="line">                     actions=&quot;resubmit(,%s)&quot; %</span><br><span class="line">                     taas_ovs_consts.TAAS_DST_RESPOND)</span><br></pre></td></tr></table></figure></p><h4 id="创建-tap-flow"><a href="#创建-tap-flow" class="headerlink" title="创建 tap flow"></a>创建 tap flow</h4><p>创建tap flow，其关联的source port为VM1虚拟机对应的neutron port。创建好tap flow之后，br-int、br-tun上会动态添加一些与taas相关的流表项，具体如下：</p><ul><li><p>br-int</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 下面这条流表是出方向的匹配.其中ovs_port_id为source port在br-int上对应的ofport值,source port出来的流量执行normal动作完成普通业务流的转发.除此之外，修改报文VLAN值为taas_id，之后送给br-tap做流量镜像策略判断</span><br><span class="line"># table=0,priority=20,in_port=ovs_port_id,actions=normal,mod_vlan_vid:taas_id,output:patch-int-tap</span><br><span class="line"># 下面这条流表是入方向的匹配.其中port_mac为source port对应的mac地址.需要送给source port的流量执行normal动作完成普通业务流程.除此之外,修改报文VLAN为taas_id，之后送给br-tap做流量镜像策略判断</span><br><span class="line">table=0,priority=20,dl_dst=port_mac,actions=normal,mod_vlan_vid:taas_id,output:patch-int-tap</span><br></pre></td></tr></table></figure></li><li><p>br-tun</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 从vxlan端口接收到镜像流量，先把报文的VLAN值暂存在寄存器reg0，用于在table=35中进一步做分类。接着把报文的VLAN修改成VNI值，最后丢给分类表table=35 */table=4,priority=1,tun_id=taas_id,actions=move:NXM_OF_VLAN_TCI[0..11]-&gt;NXM_NX_REG0[0..11],move:NXM_NX_TUN_ID[0..11]-&gt;NXM_OF_VLAN_TCI[0..11],resubmit(,35)</span><br><span class="line"># 在source port所在host上的br-tun执行合法性判断.如果合法，则将流量继续丢给table=39作进一步的处理:学习单播表项</span><br><span class="line">table=37,priority=1,tun_id=taas_id,resubmit(,39)</span><br></pre></td></tr></table></figure></li></ul><p>对应的代码如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"># Add flow(s) in br-int</span><br><span class="line">if direction == &apos;OUT&apos; or direction == &apos;BOTH&apos;:</span><br><span class="line">    self.int_br.add_flow(table=0,</span><br><span class="line">                         priority=20,</span><br><span class="line">                         in_port=ovs_port_id,</span><br><span class="line">                         actions=&quot;normal,mod_vlan_vid:%s,output:%s&quot; %</span><br><span class="line">                         (str(taas_id), str(patch_int_tap_id)))</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">if direction == &apos;IN&apos; or direction == &apos;BOTH&apos;:</span><br><span class="line">    port_mac = tap_flow[&apos;port_mac&apos;]</span><br><span class="line">    #</span><br><span class="line">    # Note: The ingress side flow (for unicast traffic) should</span><br><span class="line">    #       include a check for the &apos;VLAN id of the Neutron</span><br><span class="line">    #       network the port belongs to&apos; + &apos;MAC address of the</span><br><span class="line">    #       port&apos;, to comply with the requirement that port MAC</span><br><span class="line">    #       addresses are unique only within a Neutron network.</span><br><span class="line">    #       Unfortunately, at the moment there is no clean way</span><br><span class="line">    #       to implement such a check, given OVS&apos;s handling of</span><br><span class="line">    #       VLAN tags and Neutron&apos;s use of the NORMAL action in</span><br><span class="line">    #       br-int.</span><br><span class="line">    #</span><br><span class="line">    #       We are therefore temporarily disabling the VLAN id</span><br><span class="line">    #       check until a mechanism is available to implement</span><br><span class="line">    #       it correctly. The &#123;broad,multi&#125;cast flow, which is</span><br><span class="line">    #       also dependent on the VLAN id, has been disabled</span><br><span class="line">    #       for the same reason.</span><br><span class="line">    #</span><br><span class="line">    # Get VLAN id for tap flow port</span><br><span class="line">    # port_dict = self.int_br.get_port_tag_dict()</span><br><span class="line">    # port_vlan_id = port_dict[ovs_port.port_name]</span><br><span class="line">    self.int_br.add_flow(table=0,</span><br><span class="line">                         priority=20,</span><br><span class="line">                         # dl_vlan=port_vlan_id,</span><br><span class="line">                         dl_dst=port_mac,</span><br><span class="line">                         actions=&quot;normal,mod_vlan_vid:%s,output:%s&quot; %</span><br><span class="line">                         (str(taas_id), str(patch_int_tap_id)))</span><br><span class="line">    # self._add_update_ingress_bcmc_flow(port_vlan_id,</span><br><span class="line">    #                                    taas_id,</span><br><span class="line">    #                                    patch_int_tap_id)</span><br><span class="line"># Add flow(s) in br-tun</span><br><span class="line">for tunnel_type in ovs_consts.TUNNEL_NETWORK_TYPES:</span><br><span class="line">    self.tun_br.add_flow(table=ovs_consts.TUN_TABLE[tunnel_type],</span><br><span class="line">                         priority=1,</span><br><span class="line">                         tun_id=taas_id,</span><br><span class="line">                         actions=(</span><br><span class="line">                             &quot;move:NXM_OF_VLAN_TCI[0..11]-&gt;&quot;</span><br><span class="line">                             &quot;NXM_NX_REG0[0..11],move:NXM_NX_TUN_ID&quot;</span><br><span class="line">                             &quot;[0..11]-&gt;NXM_OF_VLAN_TCI[0..11],&quot;</span><br><span class="line">                             &quot;resubmit(,%s)&quot; %</span><br><span class="line">                             taas_ovs_consts.TAAS_CLASSIFY))</span><br><span class="line">self.tun_br.add_flow(table=taas_ovs_consts.TAAS_SRC_CHECK,</span><br><span class="line">                     priority=1,</span><br><span class="line">                     tun_id=taas_id,</span><br><span class="line">                     actions=&quot;resubmit(,%s)&quot; %</span><br><span class="line">                     taas_ovs_consts.TAAS_SRC_RESPOND)</span><br><span class="line">return</span><br></pre></td></tr></table></figure></p><h3 id="流量的流动方式"><a href="#流量的流动方式" class="headerlink" title="流量的流动方式"></a>流量的流动方式</h3><h4 id="内部的镜像流量"><a href="#内部的镜像流量" class="headerlink" title="内部的镜像流量"></a>内部的镜像流量</h4><p><img src="/images/TAPaaS/内部的镜像流量.png" alt="内部的镜像流量"></p><ol><li>VM1 发出的流量，在br-int 中匹配到taas的流表（table=0,priority=20,in_port=ovs_port_id,actions=normal,mod_vlan_vid:taas_id,output:patch-int-tap）</li><li>br-tap 从patch-int-tap接收到VM1的流量 (table=0, priority=1,in_port=”patch-tap-int” actions=resubmit(,1))</li><li>br-tap将报文的 table=1,priority=1,dl_vlan=taas_id,actions=output:in_port</li><li>br-int  接收到该流量 将其送到MON 虚机中  （table=0,priority=25,in_port=patch-int-tap,dl_vlan=taas_id,actions=mod_vlan_vid:port_vlan_id,output:ovs_port_id）</li></ol><h4 id="远程的镜像流量"><a href="#远程的镜像流量" class="headerlink" title="远程的镜像流量"></a>远程的镜像流量</h4><p><img src="/images/TAPaaS/远程的镜像流量.png" alt="远程的镜像流量"></p><ol><li>VM2 发出的流量，在br-int 中匹配到相应的流表（table=0,priority=20,in_port=ovs_port_id,actions=normal,mod_vlan_vid:taas_id,output:patch-int-tap）</li><li>br-tap  从patch-int-tap接收到VM1的流量 (table=0, priority=1,in_port=”patch-tap-int”  actions=resubmit(,1))，  发现 dport 不在本地中，于是将流量从patch-tap-tun发出</li><li>br-tun收到VM2的镜像流量，匹配流表，送到table=30的流表项继续匹配。table=30表项是通过学习动态生成的单播表项，如果没有学习到任何的单播表项，则会转到table=31(泛洪表项)进行广播泛洪。这里假设没有学习到任何的单播table=30流表项，因此选择广播泛洪，封装报文为VXLAN，VNI为报文的VLAN  ID值，而报文原有的VLAN ID值修改成1，接着从所有的VXLAN端口中泛洪出去；</li><li>br-tun收到镜像流量后，走到table=4匹配，将报文的VLAN值暂存到寄存器reg0中(有分类表table=35作进一步分类)，将报文的VLAN值修改为VNI值，送入table=35作进一步分类。这一步流程详细可以参考下图的Pipeline(只给出与taas相关的匹配表)。</li></ol><p><img src="/images/TAPaaS/pipeline.png" alt="pipeline"></p><ol><li>将流量反射给source port，具体参考上图的Pipeline；</li><li>source port所在host的br-tun接收到反射流后，学习单播表项，具体参考上图的pipeline;</li><li>br-tap接收到VM2的镜像流后，从patch-tap-int端口送出；</li><li>br-int接收到VM2的镜像流后，修改报文的VLAN值为MON虚拟机关联的内部VLAN值，最后送入MON虚拟机。</li></ol><h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h3><p>openstack doc: <a href="https://docs.openstack.org/developer/dragonflow/specs/tap_as_a_service.html" target="_blank" rel="noopener">https://docs.openstack.org/developer/dragonflow/specs/tap_as_a_service.html</a><br>Github: <a href="https://github.com/openstack/tap-as-a-service" target="_blank" rel="noopener">https://github.com/openstack/tap-as-a-service</a></p>]]></content>
      
      
      <categories>
          
          <category> technology </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openstack </tag>
            
            <tag> neutron </tag>
            
            <tag> ovs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TripleO-QuickStart网络实现简述</title>
      <link href="/2018/08/07/TripleO-QuickStart%E7%BD%91%E7%BB%9C%E5%AE%9E%E7%8E%B0%E7%AE%80%E8%BF%B0/"/>
      <url>/2018/08/07/TripleO-QuickStart%E7%BD%91%E7%BB%9C%E5%AE%9E%E7%8E%B0%E7%AE%80%E8%BF%B0/</url>
      
        <content type="html"><![CDATA[<p>接触过 <a href="https://github.com/openstack/tripleo-heat-templates" target="_blank" rel="noopener">TripleO</a> 的小伙伴应该已经领略过它的网络结构了，不得不说，还是蛮复杂的。那对于 <a href="https://github.com/openstack/tripleo-quickstart" target="_blank" rel="noopener">TripleO-QuickStart</a> 这玩意儿是否有过好奇，那么多结构是怎么在一台机器里面虚拟实现出来的？<br>之前花了一天的时间研究过一遍，当时的感受就是，厉害了，网络还可以这么玩。但由于一直在开发 Policy-based Routing，没时间将细节记录下来。<br>这就导致经常有小伙伴来找我解决相关问题时，我要把那玩意儿的网络结构再现撸一遍。就是今天，又有小伙伴问我怎么把服务面板暴露出去，easy，一层一层写 iptables 映射出去啊。<br>How？mmmp，又要撸一遍网络是怎么实现的。所以这次手头再忙，我也要把这玩意儿网络结构的大概给记录下来！！！</p><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>嗯…在说 tripleo-quickstart前，可能首先需要了解一波什么是 tripleo 吧。<br>^-^我把东家的 tripleo 部署文档直接搬来吧：<a href="http://21c.me/docs/tripleo_deploy/index.html">TripleO 部署文档</a></p><p>TripleO-Quckstart 是一个用来快速搭建 TripleO 测试环境的 Ansible 程序。<br>在部署生产环境时，会用到 <a href="https://github.com/openstack/instack-undercloud" target="_blank" rel="noopener">instack-undercloud</a> 这个项目来部署 undercloud，在该项目中有一个叫做 instack-virt-setup 的脚本，用来搭建测试 tripleo 用的虚拟环境，该脚本在 Ocata 版本被废弃，tripleo-quickstart 就是用来取代它的。<br>tripleo-quickstart 通过一系列 playbook，不仅可以用来搭建虚拟环境，还能在其上部署 undercloud 和 overcloud，而且支持多种部署模式，部署完成之后，还能跑多种测试，检验部署结果。<br>quickstart已经形成了一个完整的体系，而且使用方便，现在已经被社区用来跑TripleO的CI程序。</p><p>和tripleo-quickstart相关的还有一个叫做tripleo-quickstart-extras的项目，它是tripleo-quickstart功能的扩展。<br>其实tripleo-quickstart本身只包含搭建虚拟测试环境的功能，包括环境检查，网络/存储/虚拟机的建立等等，而具体的搭建undercloud，overcloud的功能则是在tripleo-quickstart-extras中实现的，也包括测试验证，这些功能都被抽象成了ansible中的role。<br>tripleo-quickstart-extras对tripleo-quickstart是没有依赖关系的，只要有环境，tripleo-quickstart-extras就用来部署undercloud/overcloud，不论是否是虚拟环境，因此在部署生产环境时也可以使用tripleo-quickstart-extras。<br>其实本身tripleo的部署步骤就不复杂，tripleo-quickstart-extras只是将其中一些需要手动执行的命令编排了一下，让部署变得更加简单高效了。</p><p>TripleO-Quickstart默认定义很多的部署模式，主要有以下几种：</p><ul><li>minimal，只部署一台controller和一台compute节点</li><li>ha，部署三台controller和一台compute节点，三台controller的HA使用pacemaker管理</li><li>ha_big，部署三台controller和三台compute，三台controller的HA使用pacemaker管理</li><li>ceph，支持部署Ceph的Storage节点</li></ul><p>其实这些都是通过简单的配置文件来设置的，tripleo-quickstart底层已经进行了很好的抽象，上层只需要简单的定义就可以支持多种部署模式了。</p><p>TripeO-Quickstart-Extras中还包含了很多验证部署结果的playbook，对部署完的集群功能是否正常进行有效验证，目前实现的主要有下面几种：</p><ul><li>validate-simple，简单验证，通过执行一系列OpenStack命令，比如创建网络，建虚拟机，创建stack，来验证基本的功能是否OK</li><li>validate-tempest，功能验证，通过对overcloud来跑tempest测试来进行API层面的全面验证</li><li>validate-ha，验证HA功能，通过关停一些节点和服务来验证HA的功能</li><li>validate-undercloud，通过重装undercloud或者是跑一些常用OpenStack命令来验证undercloud功能</li></ul><p>TripleO-Quickstart使用方便，环境要求简单，可以用来搭建开发测试环境，并且适合新手快速上手TripleO和OpenStack。</p><h3 id="解析"><a href="#解析" class="headerlink" title="解析"></a>解析</h3><p>TripeleO-Quickstart是使用Ansible Playbook进行编排的，抽象出了一系列role。<br>role中包含了各种具体的task，然后通过playbook对指定host进行编排。<br>Ansible程序写的非常好，是一个很好的典范，这里对整个流程做下解析，方便加深对其的掌握，理解其原理。<br>下图为执行quickstart过程中一些主要的步骤：<br><img src="/images/TripleO-QuickStart网络实现简述/tripleo-quickstart-analysis.png" alt="tripleo-quickstart-analysis"></p><p>整个过程大体可以分为4个阶段，上图中分别用4种颜色标识：</p><ul><li>第一个阶段，即浅红色部分<br>主要工作是清理上一次跑quickstart留下的环境，其中的non_root_user是在裸机上创建的一个用户，默认为stack，具有sudo权限，之后在裸机上执行的所有操作都是以这个用户的身份完成的。</li><li>第二个阶段，即浅黄色部分<br>环境的准备阶段，因为是要在一台裸机上装虚拟机测试TripleO，所以要安装kvm，libvirt等包，而且要创建虚拟机使用的volume pool和libvirt network，下载镜像，然后定义undercloud和overcloud虚拟机，并且启动undercloud虚拟机等待下一个阶段使用。<br>需要注意的是，这里仅仅下载了undercloud的镜像，因为undercloud镜像中已经包含了overcloud镜像，所以不需要额外下载。</li><li>第三个阶段，即浅绿色部分<br>部署阶段，首先部署undercloud，然后部署overcloud，并且生成相应的rc文件，方便后面使用。<br>因为本身tripleo本身就用了OpenStack中的很多组件，尤其是heat，已经进行了非常高度的抽象，因此部署步骤就很简单，quickstart将部署的命令都封装在了相应的脚本里，使用时，从ansible的模板生成，填上相应参数，传到undercloud的机器里执行。</li><li>第四个阶段，即浅蓝色部分<br>验证阶段，验证OverCloud部署是否正常，验证HA是否正常，跑tempest进行功能验证等等。</li></ul><p>这四个阶段，前两个阶段的步骤基本上都是在物理机上执行的，属于环境准备阶段，搭建起了TripleO的基本环境，这部分功能是在tripleo-quickstart中实现的。<br>后两个阶段基本上都是在undercloud上执行的，是实际的部署验证阶段，这部分功能是在tripleo-quickstart-extras中实现的。</p><h3 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h3><p>TripleO-Quickstart的部署要求必须有一台物理服务器，在quickstart中称作VIRTHOST，因为要建多台虚拟机，所以配置至少是16G内存，32G更好，对网络没有特殊要求，能通公网就行。</p><p>除了有一台物理服务器外，还需要有一个客户端机器，能够ssh到物理服务器，操作系统需要是RedHat系的。<br>在quickstart中称为localhost，需要将quickstart的程序放到localhost中，然后ssh到物理服务器上执行相应的ansible程序。</p><p>本次测试将会部署一个HA模式的TripleO环境，有3个控制节点和1个计算节点，控制节点同时充当网络节点。<br>执行过程如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~] export VIRTHOST=&apos;test.example.com&apos;</span><br><span class="line">[root@localhost ~] wget https://raw.githubusercontent.com/openstack/tripleo-quickstart/master/quickstart.sh</span><br><span class="line">[root@localhost ~] bash quickstart.sh --install-deps</span><br><span class="line">[root@localhost ~] bash ./quickstart.sh --tags all --config ~/.quickstart/tripleo-quickstart/config/general_config/ha.yml $VIRTHOST</span><br></pre></td></tr></table></figure></p><p>其实我建议采用分步骤部署方式，方便定位问题，上面这种一把梭模式是在不敢恭维，是真的很难很难跑出来。<br>下次有空了在写一篇分步骤部署的教程吧，^-^嗯，「下次」。</p><p>在quickstart中，基本上为每一个task都通过tag做了分类，可以通过–tags来选择执行某些task，上面使用all即执行所有的task，也就是要搭建一个完整的环境。<br>使用–config可以指定部署模式，这里选择的是ha模式，此外还有多种模式可以选择，该配置文件还定义了一些其他参数，比如虚拟机的配置，是否跑tempest等。<br>因为在安装过程中要去装各种包，而且要下载undercloud的镜像，国外的网络环境较好，会遇到比较少的坑。</p><p>等待一杯咖啡的时间(这是一个同事们经常用的梗了，如果你对tripleo进行了实践，请自行体会)，一个具备HA的OpenStack虚拟环境就部署好了，包含三个控制节点，一个计算节点。</p><h3 id="网络实现原理"><a href="#网络实现原理" class="headerlink" title="网络实现原理"></a>网络实现原理</h3><p>由于在OpenStack中最复杂最难懂的就是网络了，尤其是在虚拟环境中，网络拓扑要比物理环境还要复杂，而且是在一台物理服务器上安装一个具备完整功能的OpenStack环境。<br>因此，下面重点介绍下用tripleo-quickstart部署出来的集群的网络拓扑，如下图：<br>（好了好了，总算把上下文交代的差不多了，切我想要记录的正题。）<br><img src="/images/TripleO-QuickStart网络实现简述/tripleo-undercloud-topology.png" alt="tripleo-undercloud-topology"></p><p>在物理服务器上，通过libvirt network建立了两个linux bridge，分别为brext和brovc。<br><strong><em>brext</em></strong>用来桥接undercloud，<strong><em>brovc</em></strong>用来桥接overcloud节点，undercloud虚拟机有两个网卡，分别桥接在brext和brovc上。<br><strong><em>brext</em></strong>提供了访问公网的能力，<strong><em>brovc</em></strong>将多个overcloud和undercloud节点连接在一起。</p><p><strong><em>192.168.23.0/24</em></strong> 是连通物理宿主机的网络，宿主机会建立一个名为 brext 的网卡资源，桥接在 brext 桥上，并作为该网段的网关。上文所述的undercloud其中桥接brext网桥的网卡就属于这个网络。<br><strong><em>192.168.24.0/24</em></strong> 是分配给 brovc 连接的广播域的 cidr，即 overcloud 节点所在的广播域的 cidr。也就是说，overcloud 的节点 host 通过这个网络进行通信，具体IP配置在节点中桥接在提供外部网络网桥的代表该网桥的网卡资源上，注意可不是节点本身对应实体资源（虽然这里也是虚拟出来的）的网卡（这里只undercloud的eth1和overcloud的eth0），至于这个提供外部网络的网桥要看openstack二层实现的具体driver，比如这里采用的ovs，那就是br-ex。</p><p>Undercloud是一个单机版的OpenStack，安装了Nova, Neutron, Ironic, Heat等组件。<br>Ironic通过使用pxe_ssh driver来管理overcloud节点，Neutron为overcloud节点提供网络环境，Heat则在TripleO中被用来编排，创建整个overcloud的stack。<br>默认的TripleO会在undercloud中创建下面几个网络：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[stack@undercloud ~]$ neutron net-list</span><br><span class="line">+--------------------------------------+--------------+------------------------------------------------------+</span><br><span class="line">| id                                   | name         | subnets                                              |</span><br><span class="line">+--------------------------------------+--------------+------------------------------------------------------+</span><br><span class="line">| 0a5f9e61-7f2a-4d1b-9b44-4f82a1412ef4 | internal_api | 0fe319dd-ec16-47c5-b039-707373b7875c 172.16.2.0/24   |</span><br><span class="line">| 305526f7-d0bf-49b5-947a-d25778836cba | tenant       | a71b5b1c-5f52-4efd-af21-705192bf2a70 172.16.0.0/24   |</span><br><span class="line">| 9e0930f3-8180-4fa3-a955-73aca0134795 | storage_mgmt | e596d585-7c12-471e-89de-eea48cabc0df 172.16.3.0/24   |</span><br><span class="line">| be6f07e5-e212-4e9e-bc7b-0edd4eb11b13 | ctlplane     | ad8a6a4d-c5a3-4c44-a17d-1d1a9341f33b 192.168.24.0/24 |</span><br><span class="line">| f303022b-907e-4ce6-a2c0-c1ce7fabe9ac | external     | 4a47bc1b-a7f2-45a4-bd40-2f3032198b34 10.0.0.0/24     |</span><br><span class="line">| fcdff6b1-43d2-4787-b458-368b48b97a73 | storage      | 6de1e1b3-4972-49b1-ae19-20e163af010c 172.16.1.0/24   |</span><br><span class="line">+--------------------------------------+--------------+------------------------------------------------------+</span><br></pre></td></tr></table></figure></p><p>这几个网络都是Flat模式的网络（其实是使用vlan模拟出来的，虽然vlan也是模拟的，这要看在哪个层面看问题了，所以说这网络6么，一层一层的虚拟化），internal_api在overcloud中被用来作为内部API交互的网络，tenant是SDN网络，storage_mgmt是存储管理网络，ctlplane是管理网络，即ssh网络，external是外部网络，storage是存储网。</p><p>在上面的网络中，只有ctlplane的子网开启了DHCP功能，为overcloud的管理网络分配IP，因此在undercloud中有一个DHCP的namespace，通过veth tap桥接在br-int ovs网桥上。</p><p>external网络是用来开放API和面板的，跟internal_api对应，在overcloud中，API和面板分别绑定在了internal_api和external网络上，在undercloud的br-ctlplane ovs网桥上，创建了一个vlan10的port，并且在undercloud中加上了相应的路由信息，这样在undercloud中就可以直接通过这个网络访问overcloud中的API了：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[stack@undercloud ~]$ ip r</span><br><span class="line">default via 192.168.23.1 dev eth0</span><br><span class="line">10.0.0.0/24 dev vlan10  proto kernel  scope link  src 10.0.0.1</span><br></pre></td></tr></table></figure></p><p>在overcloud中，通过在br-ex ovs网桥上绑定多个带tag的port，并且每个port分配了IP，来模拟多个网络，分别对应undercloud中创建的网络。在br-ex中的每个port都带着vlan tag，模拟交换机的access口，通过不同的vlan互相隔离。</p><p>控制节点和计算节点之间的SDN网络，即tenant网络，在上面图中使用黄色标注，即vlan50，通过vxlan建立隧道，使用vlan50上的ip作为对端IP。</p><p>其他就是标准的Neutron网络了。</p><p>那么跟 devstack 面临一样的问题来了（详见 <a href="http://21c.me/2018/05/26/devstack%E7%BD%91%E7%BB%9C%E5%AE%9E%E7%8E%B0%E7%AE%80%E8%BF%B0/">devstack网络实现简述</a> ），怎样使建立出来的 tenant 虚机访问 Internet 呢？<br>这里可不能随便建一个网络指定成 external 网络（设定成 external 网络即代表会做端口复用的snat），再使用 iptables 做映射就行了，因为QS在外面一层要模拟真实网络的广播域环境，即在这里映射成上文中的各个’假’flat网络。<br>这不，external 已经给你建好了。接下来，我们需要进行一下操作：</p><ol><li>在undercloud上，使用 iptables 给 external 网络做 masquerade (即把10.0.0.0/24来源数据包在undercloud上连接宿主机网络的网口上，这里是192.168.23.10，进行端口复用)</li><li>在物理宿主机上，使用 iptables 给 192.168.23.0/24 这个网络做 masquerade （即把192.168.23.0/24来源数据包在宿主机物理真实网卡上进行端口复用）</li><li>前两步操作进行的系统上，看看 iptables 有没有禁止相关流量，有的话取消掉</li></ol><p>最后，来看看怎么暴露出面板服务接口吧！<br>我最先给出小伙伴的解决方案比较麻烦：</p><ol><li>在宿主机上创建一个连接overcloud节点广播域的网卡资源，即桥接至 brovc，封上vlan10的 tag</li><li>将新创建网卡ip（10.0.0.0/24段）与服务endpoint做静态映射</li><li>新创建网卡ip和真实物理网卡ip的端口映射</li></ol><p>结果就是，外部访问到宿主机ip端口，映射成undercloud的24段ip，再接着映射成endpoint。</p><p>然而现在经过前面的分析，我们可以直接省略掉打通24段广播域这一步，转向使用23段。<br>具体步骤类似：</p><ol><li>将endpoint与undercloud 23段的ip做端口映射</li><li>宿主机上，undercloud 23段的 ip 与真实物理网卡做端口映射</li><li>注意 iptables 的 filter 表限制</li></ol><p>我将最后方案的实现写成了脚本（需要用到 ansible），需要的小伙伴请自取：<br><a href="https://github.com/Sirius21c/TripleO-QuickStart-PortForwarding" target="_blank" rel="noopener">TripleO-QuickStart-PortForwarding</a></p>]]></content>
      
      
      <categories>
          
          <category> technology </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openstack </tag>
            
            <tag> neutron </tag>
            
            <tag> ovs </tag>
            
            <tag> tripleo </tag>
            
            <tag> linux bridge </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Neutron-VPNaaS</title>
      <link href="/2018/07/09/Neutron-VPNaaS/"/>
      <url>/2018/07/09/Neutron-VPNaaS/</url>
      
        <content type="html"><![CDATA[<h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>VPN的英文全称是“Virtual Private Network”，翻译过来就是“虚拟专用网络”。顾名思义，虚拟专用网络我们可以把它理解成是虚拟出来的企业内部专线。它可以通过特殊的加密的通讯协议在连接在Internet上的位于不同地方的两个或多个企业内部网之间建立一条专有的通讯线路，就好比是架设了一条专线一样，但是它并不需要真正的去铺设光缆之类的物理线路。一句话，VPN的核心就是在利用公共网络建立虚拟私有网。</p><p>VPNaas（VPN as a service）是Openstack的Havana版本中，neutron增加的一个新的功能，将VPN功能引入到了neutron中，虽然在Havana版中只支持IPSec协议的VPN，功能还比较弱，但这个关键特性已经有了，后续会不断加强该特性，其长期目标是使其功能非常丰富，支持多种支持静态和动态路由的隧道安全协议，但从短期来看，希望仅由静态态路由完成基于开源IPsec的基本实现。</p><h3 id="VPN的本质和分类"><a href="#VPN的本质和分类" class="headerlink" title="VPN的本质和分类"></a>VPN的本质和分类</h3><p>vpn比较容易误解的是，某网络区域不可访问的时候使用vpn就能顺利解决，这种情况其实vpn到vpn设备或网关就已终结，由他们进行隧道协议的封装和解封装后完成数据转发。<br>vpn本身的建立是在网络可达性之上的，其一般完成两件事：1.通过封装对中间设备透明，识别内部对应层次的原有报文语义；2.通过加密使数据不会暴露在外部传输网络中。</p><p>网络虚拟化最基础的技术莫过于分层，要实现分层有两种手段，一个是映射，另一个是封装。vpn技术就是基于封装的技术。</p><ul><li>映射：主要思路是转发时替换报文语义，如何替换将需要设备进行查询。</li><li>封装：把需要的报文语义添加到网包中，处理的时候一层层的解封装即可，尽量对设备透明。</li></ul><h4 id="第二层隧道协议"><a href="#第二层隧道协议" class="headerlink" title="第二层隧道协议"></a>第二层隧道协议</h4><p>PPP、PPTP、L2TP、L2F等都属于第二层隧道协议，修改帧报头将用户数据封装在PPP帧中通过互联网发送。对于非以太网，ATM和帧中继也是两种最为流行的vpn隧道。第二层隧道的优点是能将大二层直接打通，独立于它传输第三层的数据流。</p><h4 id="第三层隧道协议"><a href="#第三层隧道协议" class="headerlink" title="第三层隧道协议"></a>第三层隧道协议</h4><p>如果递送的报头位于第三层就是第三层vpn，如gre、mpls、ipsec等。</p><h4 id="IP-over-IP"><a href="#IP-over-IP" class="headerlink" title="IP-over-IP"></a>IP-over-IP</h4><p>经常会有人将像GRE这种隧道协议和IP-over-IP混淆。IP-over-IP一般具有两层IP报头，内部报头和外部报头，但无论是内部报头还是外部报头都是标准的IP报头，等于还是IP协议。但GRE这种隧道会有自己的新的报头，这样就相当于一种新协议，所以严格地讲我们叫它隧道协议，而不是隧道。</p><h3 id="常见-VPN-实现介绍"><a href="#常见-VPN-实现介绍" class="headerlink" title="常见 VPN 实现介绍"></a>常见 VPN 实现介绍</h3><h4 id="GRE"><a href="#GRE" class="headerlink" title="GRE"></a>GRE</h4><p>建立vpn很方便，且留有专门的virtual tunnel interface可以直接完成IGP的私网收敛，但没有安全机制，即数据没有进行加密，将内部报文直接暴露在外部传输网络中。</p><h4 id="MPLS"><a href="#MPLS" class="headerlink" title="MPLS"></a>MPLS</h4><p>在传输数据之前就先用L3层的路由机制将L2层的标签在途经的每个路由器上都事先算好了，并且这种标签是自动配置的。</p><h4 id="SSL"><a href="#SSL" class="headerlink" title="SSL"></a>SSL</h4><p>这种vpn的最大好处在于，仅需要一个单独的TCP或UDP端口便可以轻易穿越大多数防火墙进行数据传送。openVPN是在Linux系统上最好的实现，其使在广域网内网的两台主机可以直接进行通信，即host-to-host。</p><h4 id="IPSec（重点介绍）"><a href="#IPSec（重点介绍）" class="headerlink" title="IPSec（重点介绍）"></a>IPSec（重点介绍）</h4><p>目前neutron唯一实现的 vpn driver，但也已不再活跃。</p><p>IPSec就封装建立隧道而言还是很鸡肋的，匹配感兴趣流较麻烦，多路由节点配置，IGP无法收敛，所以一般采用和gre结合的方式，gre完成隧道建立，ipsec进行加密处理，结合方式有两种：</p><ul><li><p><strong>IPSEC Over GRE</strong>：IPSEC在里，GRE在外。先把需要加密的数据包封装成IPSEC包，然后再扔到GRE隧道里。作法是把IPSEC的加密图作用在Tunnel口上的，即在Tunnel口上监控（访问控制列表监控本地ip网段-源i和远端ip网段-目的地），是否有需要加密的数据流，有则先加密封装为IPSEC包，然后封装成GRE包进入隧道（这里显而易见的是，GRE隧道始终无论如何都是存在的，即GRE隧道的建立过程并没有被加密），同时，未在访问控制列表里的数据流将以不加密的状态直接走GRE隧道，即存在有些数据可能被不安全地传递的状况。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">- 访问控制列表，针对两个网段的数据流，如：</span><br><span class="line">  ip access-list extended vpn12</span><br><span class="line">  permit ip 10.1.1.0 0.0.0.255 10.2.2.0 0.0.0.255</span><br><span class="line">- 加密处放在Tunnel口</span><br></pre></td></tr></table></figure></li><li><p><strong>GRE Over IPSEC</strong>：GRE Over IPSEC是指，先把数据分装成GRE包，然后再分装成IPSEC包。做法是在物理接口上监控，是否有需要加密的GRE流量（访问控制列表针对GRE两端的设备ip），所有的这两个端点的GRE数据流将被加密分装为IPSEC包再进行传递，这样保证的是所有的数据包都会被加密，包括隧道的建立和路由的建立和传递。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">- 访问列表，针对两个路由器之间的GRE流，如：</span><br><span class="line">  ip access-list extended vpn12</span><br><span class="line">  permit gre host 172.16.11.2 host 172.16.22.2</span><br><span class="line">- 加密图作用在物理口。</span><br></pre></td></tr></table></figure></li></ul><p>另外还有一个概念是传输模式和隧道模式，加密方式也分为AH和ESP。</p><ul><li><strong>传输模式</strong>：一层报头，传输过程中IPSec源端点不会修改IP报中的目标IP地址，只是对IP协议的数据部分(payload)进行了加密。</li><li><strong>隧道模式</strong>：内外两层报头，传输过程中IPSec源端点会修改IP报中的目标IP地址，对整个IP数据包进行加密。</li></ul><p>显然隧道模式不符合我们的应用场景。</p><p>对于加密方式，由于南北流量需要经过端口复用的SNAT或者一对一的fip，会产生冲突。</p><ul><li><strong>AH</strong>：AH封装的校验从IP头开始，如果NAT将IP的头部改动，AH的校验就会失败，因此我们得出结论，AH是无法与NAT共存的。</li><li><strong>ESP</strong>：<ul><li><em>传输模式</em>，虽然不适合场景，此处也说明一下。对于NAT来说，ESP封装比AH的优势在于，无论是加密还是完整性的校验，IP头部都没有被包括进去。但是还是有新的问题，对于ESP的传输模式，NAT 无法更新上层校验和。因为TCP 和 UDP 报头包含一个校验和，它整合了源和目标 IP 地址和端口号的值，而源和目的IP地址和端口号在做NAT时会发生改变。当 NAT 改变了某个包的 IP 地址和（或）端口号时，它通常要更新 TCP 或 UDP 校验和。当 TCP 或 UDP 校验和使用了 ESP 来加密时，它就无法更新这个校验和。由于地址或端口已经被 NAT 更改，目的地的校验和检验就会失败。虽然 UDP 校验和是可选的，但是 TCP 校验和却是必需的。所以ESP的传输模式也不支持NAT穿越。</li><li><em>隧道模式</em>。ESP隧道模式将整个原始的IP包整个进行了加密，且在ESP的头部外面新加了一层IP头部，所以NAT如果只改变最前面的新的IP地址对后面受到保护的部分是不会有影响的。因此，IPsec只有采用ESP的隧道模式来封装数据时才能与NAT共存。但只能对非PAT得情况，即因为ESP协议号50，直接构建在IP层之上，没有类似于UDP/TCP端口号的概念，也就没有NAT复用标识，只能采用fip，q-router的qg桥上的默认snat失效，所以需要采用nat-t，通过借用UDP的方式实现端口复用。详细可参看<a href="https://technet.microsoft.com/zh-cn/library/bb878090.aspx" target="_blank" rel="noopener">https://technet.microsoft.com/zh-cn/library/bb878090.aspx</a>。</li></ul></li></ul><h3 id="模块架构"><a href="#模块架构" class="headerlink" title="模块架构"></a>模块架构</h3><p><img src="/images/Neutron-VPNaaS/模块架构.png" alt="模块架构"></p><h3 id="数据模型"><a href="#数据模型" class="headerlink" title="数据模型"></a>数据模型</h3><h4 id="VPNServices-Resource"><a href="#VPNServices-Resource" class="headerlink" title="VPNServices Resource"></a>VPNServices Resource</h4><table><thead><tr><th style="text-align:center">Attribute</th><th style="text-align:center">Type</th><th style="text-align:center">DefaultValue</th><th style="text-align:center">Vaildation Constraint</th><th style="text-align:center">Notes</th></tr></thead><tbody><tr><td style="text-align:center">id</td><td style="text-align:center">uuid-str</td><td style="text-align:center">generated</td><td style="text-align:center">N/A</td><td style="text-align:center">用于VPNService对象的UUID</td></tr><tr><td style="text-align:center">tenant_id</td><td style="text-align:center">uuid-str</td><td style="text-align:center">None</td><td style="text-align:center">Valid tenant_id</td><td style="text-align:center">vpn服务的租户的UUID</td></tr><tr><td style="text-align:center">name</td><td style="text-align:center">string</td><td style="text-align:center">None</td><td style="text-align:center">N/A</td><td style="text-align:center">VPN服务的名称</td></tr><tr><td style="text-align:center">description</td><td style="text-align:center">string</td><td style="text-align:center">None</td><td style="text-align:center">N/A</td><td style="text-align:center">VPN服务的描述</td></tr><tr><td style="text-align:center">status</td><td style="text-align:center">string</td><td style="text-align:center">N/A</td><td style="text-align:center">N/A</td><td style="text-align:center">指示ipsec vpnservice当前是否可用。可能的值包括：ACTIVE DOWN BUILD ERROR</td></tr><tr><td style="text-align:center">admin_state_up</td><td style="text-align:center">bool</td><td style="text-align:center">TRUE</td><td style="text-align:center">true/false</td><td style="text-align:center">vpnservice的管理状态。 如果为false（down），则端口不转发数据包</td></tr><tr><td style="text-align:center">subnet_id</td><td style="text-align:center">uuid</td><td style="text-align:center">N/A</td><td style="text-align:center">Valid subnet id</td><td style="text-align:center">租户需要vpn服务的子网ID</td></tr><tr><td style="text-align:center">router_id</td><td style="text-align:center">uuid</td><td style="text-align:center">N/A</td><td style="text-align:center">Valid router id</td><td style="text-align:center">vpn服务所插入的路由器ID</td></tr></tbody></table><h4 id="IKEPolicies-Resource"><a href="#IKEPolicies-Resource" class="headerlink" title="IKEPolicies Resource"></a>IKEPolicies Resource</h4><table><thead><tr><th style="text-align:center">Attribute</th><th style="text-align:center">Type</th><th style="text-align:center">DefaultValue</th><th style="text-align:center">Vaildation Constraint</th><th style="text-align:center">Notes</th></tr></thead><tbody><tr><td style="text-align:center">id</td><td style="text-align:center">uuid-str</td><td style="text-align:center">generated</td><td style="text-align:center">N/A</td><td style="text-align:center">用于IKEPolicy的UUID</td></tr><tr><td style="text-align:center">tenant_id</td><td style="text-align:center">uuid-str</td><td style="text-align:center">None</td><td style="text-align:center">Valid tenant_id</td><td style="text-align:center">用于vpn服务的所有者的UUID</td></tr><tr><td style="text-align:center">name</td><td style="text-align:center">string</td><td style="text-align:center">None</td><td style="text-align:center">N/A</td><td style="text-align:center">友好的ikepolicy名称</td></tr><tr><td style="text-align:center">description</td><td style="text-align:center">string</td><td style="text-align:center">None</td><td style="text-align:center">N/A</td><td style="text-align:center">ikepolicy的描述</td></tr><tr><td style="text-align:center">auth_algorithm</td><td style="text-align:center">string</td><td style="text-align:center">sha1</td><td style="text-align:center">N/A</td><td style="text-align:center">身份验证散列算法“sha1”</td></tr><tr><td style="text-align:center">encryption_algorithm</td><td style="text-align:center">string</td><td style="text-align:center">aes-128</td><td style="text-align:center">N/A</td><td style="text-align:center">加密算法3des，aes-128，aes-256，aes-192等</td></tr><tr><td style="text-align:center">phase1_negotiation_mode</td><td style="text-align:center">string</td><td style="text-align:center">Main Mode</td><td style="text-align:center">N/A</td><td style="text-align:center">IKE模式主模式</td></tr><tr><td style="text-align:center">pfs</td><td style="text-align:center">string</td><td style="text-align:center">Group5</td><td style="text-align:center">N/A</td><td style="text-align:center">完美的正向保密（Group2，Group5，Group14）</td></tr><tr><td style="text-align:center">ike_version</td><td style="text-align:center">string</td><td style="text-align:center">v1</td><td style="text-align:center">N/A</td><td style="text-align:center">v1或v2版本</td></tr><tr><td style="text-align:center">lifetime</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:center">units</td><td style="text-align:center">string</td><td style="text-align:center">seconds</td><td style="text-align:center">“seconds”</td><td style="text-align:center">SA单元的生命周期,以’秒’为单位</td></tr><tr><td style="text-align:center">value</td><td style="text-align:center">integer</td><td style="text-align:center">3600 for seconds</td><td style="text-align:center">Integer</td><td style="text-align:center">以秒为单位的生命周期值（值&gt; = 60）</td></tr></tbody></table><h4 id="IPsecPolicies-Resource"><a href="#IPsecPolicies-Resource" class="headerlink" title="IPsecPolicies Resource"></a>IPsecPolicies Resource</h4><table><thead><tr><th style="text-align:center">Attribute</th><th style="text-align:center">Type</th><th style="text-align:center">DefaultValue</th><th style="text-align:center">Vaildation Constraint</th><th style="text-align:center">Notes</th></tr></thead><tbody><tr><td style="text-align:center">id</td><td style="text-align:center">uuid-str</td><td style="text-align:center">generated</td><td style="text-align:center">N/A</td><td style="text-align:center">用于IPsecPolicy的UUID</td></tr><tr><td style="text-align:center">tenant_id</td><td style="text-align:center">uuid-str</td><td style="text-align:center">None</td><td style="text-align:center">Valid tenant_id</td><td style="text-align:center">用于vpn服务的所有者的UUID</td></tr><tr><td style="text-align:center">name</td><td style="text-align:center">string</td><td style="text-align:center">None</td><td style="text-align:center">N/A</td><td style="text-align:center">友好的IPsecPolicy名称</td></tr><tr><td style="text-align:center">description</td><td style="text-align:center">string</td><td style="text-align:center">None</td><td style="text-align:center">N/A</td><td style="text-align:center">policy的描述</td></tr><tr><td style="text-align:center">transform_protocol</td><td style="text-align:center">string</td><td style="text-align:center">ESP</td><td style="text-align:center">N/A</td><td style="text-align:center">使用Tranform协议，例如ESP或AH或AH-ESP</td></tr><tr><td style="text-align:center">encapsulation_mode</td><td style="text-align:center">string</td><td style="text-align:center">tunnel</td><td style="text-align:center">N/A</td><td style="text-align:center">封装模式为隧道模式或传输模式</td></tr><tr><td style="text-align:center">auth_algorithm</td><td style="text-align:center">string</td><td style="text-align:center">sha1</td><td style="text-align:center">N/A</td><td style="text-align:center">身份验证散列算法“sha1”</td></tr><tr><td style="text-align:center">encryption_algorithm</td><td style="text-align:center">string</td><td style="text-align:center">aes-128</td><td style="text-align:center">N/A</td><td style="text-align:center">加密算法3des，aes-128，aes-256，aes-192等</td></tr><tr><td style="text-align:center">pfs</td><td style="text-align:center">string</td><td style="text-align:center">Group5</td><td style="text-align:center">N/A</td><td style="text-align:center">完美的正向保密（Group2，Group5，Group14）</td></tr><tr><td style="text-align:center">lifetime</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:center">units</td><td style="text-align:center">string</td><td style="text-align:center">seconds</td><td style="text-align:center">“seconds”</td><td style="text-align:center">SA单元的生命周期,以’秒’为单位</td></tr><tr><td style="text-align:center">value</td><td style="text-align:center">integer</td><td style="text-align:center">3600 for seconds</td><td style="text-align:center">Integer</td><td style="text-align:center">以秒为单位的生命周期值（值&gt; = 60）</td></tr></tbody></table><h4 id="ipsec-site-connection-Resource"><a href="#ipsec-site-connection-Resource" class="headerlink" title="ipsec-site-connection Resource"></a>ipsec-site-connection Resource</h4><table><thead><tr><th style="text-align:center">Attribute</th><th style="text-align:center">Type</th><th style="text-align:center">DefaultValue</th><th style="text-align:center">Vaildation Constraint</th><th style="text-align:center">Notes</th></tr></thead><tbody><tr><td style="text-align:center">id</td><td style="text-align:center">uuid-str</td><td style="text-align:center">generated</td><td style="text-align:center">N/A</td><td style="text-align:center">用于vpn连接的UUID</td></tr><tr><td style="text-align:center">tenant_id</td><td style="text-align:center">uuid-str</td><td style="text-align:center">None</td><td style="text-align:center">valid tenant_id</td><td style="text-align:center">用于vpn服务的所有者的UUID</td></tr><tr><td style="text-align:center">name</td><td style="text-align:center">string</td><td style="text-align:center">None</td><td style="text-align:center">N/A</td><td style="text-align:center">ipsec-site-connection的名称</td></tr><tr><td style="text-align:center">description</td><td style="text-align:center">string</td><td style="text-align:center">None</td><td style="text-align:center">N/A</td><td style="text-align:center">ipsec站点连接的描述</td></tr><tr><td style="text-align:center">peer_address</td><td style="text-align:center">ipaddress(v4 or v6)</td><td style="text-align:center">N/A</td><td style="text-align:center">valid ip address (v4 or v6)</td><td style="text-align:center">对等VPN网关公共地址或FQDN</td></tr><tr><td style="text-align:center">peer_id</td><td style="text-align:center">string</td><td style="text-align:center">N/A</td><td style="text-align:center">N/A</td><td style="text-align:center">对等标识符（可以是名称，字符串或FQDN）</td></tr><tr><td style="text-align:center">peer_cidrs</td><td style="text-align:center">list[string]</td><td style="text-align:center">N/A</td><td style="text-align:center">valid cidr</td><td style="text-align:center">对等私有cidr</td></tr><tr><td style="text-align:center">route_mode</td><td style="text-align:center">string</td><td style="text-align:center">static</td><td style="text-align:center">static</td><td style="text-align:center">静态的</td></tr><tr><td style="text-align:center">mtu</td><td style="text-align:center">integer</td><td style="text-align:center">1500</td><td style="text-align:center">Integer</td><td style="text-align:center">mtu - 地址分段的最大传输单元（值&gt; = 68）</td></tr><tr><td style="text-align:center">auth_mode</td><td style="text-align:center">string</td><td style="text-align:center">psk</td><td style="text-align:center">psk/certs</td><td style="text-align:center">身份验证模式，PSK或证书</td></tr><tr><td style="text-align:center">psk</td><td style="text-align:center">string</td><td style="text-align:center">N/A</td><td style="text-align:center">NO</td><td style="text-align:center">预共享密钥,可以是任何字符串</td></tr><tr><td style="text-align:center">initiator</td><td style="text-align:center">string</td><td style="text-align:center">bi-directional</td><td style="text-align:center">“bi-directional / response-only”</td><td style="text-align:center">这个VPN是否只能响应连接或者可以启动</td></tr><tr><td style="text-align:center">admin_state_up</td><td style="text-align:center">bool</td><td style="text-align:center">True</td><td style="text-align:center">“true / false”</td><td style="text-align:center">VPN连接的管理状态。 如果为false（down），vpn连接不转发数据包</td></tr><tr><td style="text-align:center">status</td><td style="text-align:center">string</td><td style="text-align:center">N/A</td><td style="text-align:center">N/A</td><td style="text-align:center">指示vpn连接当前是否可用。 可能的值包括：ACTIVE，DOWN，BUILD，ERROR</td></tr><tr><td style="text-align:center">ikepolicy_id</td><td style="text-align:center">uuid</td><td style="text-align:center">N/A</td><td style="text-align:center">uuid of ikepolicy</td><td style="text-align:center">ikepolicy的uuid ID</td></tr><tr><td style="text-align:center">ipsecpolicy_id</td><td style="text-align:center">uuid</td><td style="text-align:center">N/A</td><td style="text-align:center">uuid of ipsecpolicy</td><td style="text-align:center">ipsecpolicy的uuid ID</td></tr><tr><td style="text-align:center">vpnservice_id</td><td style="text-align:center">uuid</td><td style="text-align:center">N/A</td><td style="text-align:center">uuid of vpnservice</td><td style="text-align:center">vpnservice的服务ID</td></tr><tr><td style="text-align:center">dpd</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:center">action</td><td style="text-align:center">string</td><td style="text-align:center">hold</td><td style="text-align:center">“hold / clear / disabled /restart /restart_by_peer”</td><td style="text-align:center">DPD操作控制使用死对等检测协议。 ( clear, hold, restart, disabled, restart-by-peer)</td></tr><tr><td style="text-align:center">interval</td><td style="text-align:center">integer</td><td style="text-align:center">30</td><td style="text-align:center">&gt; 0</td><td style="text-align:center">DPD延迟的秒数</td></tr><tr><td style="text-align:center">timeout</td><td style="text-align:center">integer</td><td style="text-align:center">120</td><td style="text-align:center">&gt; 0 &amp; &gt; dpd_interval</td><td style="text-align:center">DPD超时的秒数</td></tr></tbody></table><h4 id="object-diagram"><a href="#object-diagram" class="headerlink" title="object diagram"></a>object diagram</h4><p>目前，VPNaaS中的设计和对象模型允许每个路由器和每个子网创建1个服务对象。 但是每个服务可以有多个VPN连接对象。具体对象图如下：<br><img src="/images/Neutron-VPNaaS/object_diagram.jpg" alt="object_diagram"></p><h3 id="API-命令"><a href="#API-命令" class="headerlink" title="API 命令"></a>API 命令</h3><p>本部分介绍支持VPNaaS高级服务的CLI命令。详细内容见API参考文档: <a href="https://developer.openstack.org/api-ref/network/v2/index.html#vpnaas-2-0-vpn-vpnservices-ikepolicies-ipsecpolicies-endpoint-groups-ipsec-site-connections" target="_blank" rel="noopener">VPNaaS 2.0</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">vpn-service-create      Create a VPNService</span><br><span class="line">vpn-service-delete      Delete a given VPNService</span><br><span class="line">vpn-service-list        List all VPNService for a given tenant.</span><br><span class="line">vpn-service-show        Show detailed information of a given VPNService.</span><br><span class="line">vpn-service-update      Update a given VPNservice.</span><br><span class="line"></span><br><span class="line">vpn-ikepolicy-create       Create an IKEPolicy</span><br><span class="line">vpn-ikepolicy-delete       Delete a given IKE Policy.</span><br><span class="line">vpn-ikepolicy-list         List IKEPolicies that belong to a given tenant.</span><br><span class="line">vpn-ikepolicy-show         Show detailed information of a given IKEPolicy.</span><br><span class="line">vpn-ikepolicy-update       Update a given IKE Policy.</span><br><span class="line"></span><br><span class="line">vpn-ipsecpolicy-create     Create an IPsec policy</span><br><span class="line">vpn-ipsecpolicy-delete     Delete a given IPsec Policy</span><br><span class="line">vpn-ipsecpolicy-list       List IPsecPolicies that belong to a given tenant    connection.</span><br><span class="line">vpn-ipsecpolicy-show       Show detailed information of a given IPsec Policy</span><br><span class="line">vpn-ipsecpolicy-update     Update a given IPsec Policy.</span><br><span class="line"></span><br><span class="line">ipsec-site-connection-create  Create a ipsec-site-connection</span><br><span class="line">ipsec-site-connection-delete  Delete a given ipsec-site-connection.</span><br><span class="line">ipsec-site-connection-list    List ipsec-site-connections that belong to a given tenant.</span><br><span class="line">ipsec-site-connection-show    Show information of a given ipsec-site-connection.</span><br><span class="line">ipsec-site-connection-update  Update a given ipsec-site-connection.</span><br><span class="line"></span><br><span class="line">vpn-endpoint-group-create     Create a VPN endpoint groups.</span><br><span class="line">vpn-endpoint-group-delete     Removes a VPN endpoint group.</span><br><span class="line">vpn-endpoint-group-list       Lists VPN endpoint groups.</span><br><span class="line">vpn-endpoint-group-show       Shows details for a VPN endpoint group.</span><br><span class="line">vpn-endpoint-group-update     Updates settings for a VPN endpoint group.</span><br><span class="line"></span><br><span class="line">service-provider-list         List service providers.</span><br></pre></td></tr></table></figure></p><h3 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h3><h4 id="Devstack快速部署"><a href="#Devstack快速部署" class="headerlink" title="Devstack快速部署"></a>Devstack快速部署</h4><p>使用devstack在单节点上快速安装VPNaaS服务，需要在local.conf文件中添加以下内容：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[[local|localrc]]</span><br><span class="line"></span><br><span class="line">enable_plugin neutron-vpnaas https://git.openstack.org/openstack/neutron-vpnaas</span><br><span class="line"></span><br><span class="line">disable_service n-net</span><br><span class="line">enable_service q-svc</span><br><span class="line">enable_service q-agt</span><br><span class="line">enable_service q-dhcp</span><br><span class="line">enable_service q-l3</span><br><span class="line">enable_service q-meta</span><br><span class="line"># Optional, to enable tempest configuration as part of devstack</span><br><span class="line">enable_service tempest</span><br><span class="line"></span><br><span class="line"># IPSec driver to use. Optional, defaults to strongswan.For example, install libreswan for CentOS/RHEL 7</span><br><span class="line"># IPSEC_PACKAGE=&quot;libreswan&quot;</span><br></pre></td></tr></table></figure></p><p>执行stack.sh脚本文件，并且成功完成后，云主机环境中会发生如下变化：</p><ul><li><p>/etc/neutron/neutron.conf文件中service_plugins后面会增加vpnaas字段：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[DEFAULT]</span><br><span class="line">service_plugins = neutron.services.l3_router.l3_router_plugin.L3RouterPlugin,vpnaas</span><br></pre></td></tr></table></figure></li><li><p>/etc/neutron/目录下会为你配置好neutron_vpnaas.conf文件，内容如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[service_providers]</span><br><span class="line">service_provider = VPN:strongswan:neutron_vpnaas.services.vpn.service_drivers.ipsec.IPsecVPNDriver:default</span><br><span class="line"># if you want use libreswan，configuration example is as follows</span><br><span class="line">#service_provider = VPN:libreswan:neutron_vpnaas.services.vpn.service_drivers.ipsec.IPsecVPNDriver:default</span><br><span class="line"># From neutron.vpnaas</span><br><span class="line">#</span><br><span class="line"># Defines providers for advanced services using the format:</span><br><span class="line"># &lt;service_type&gt;:&lt;name&gt;:&lt;driver&gt;[:default] (multi valued)</span><br><span class="line">#service_provider =</span><br></pre></td></tr></table></figure></li><li><p>/etc/neutron/l3_agent.ini中会增加[AGENT]和[vpnagent]项：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[AGENT]</span><br><span class="line">extensions = vpnaas</span><br><span class="line">root_helper_daemon = sudo /usr/local/bin/neutron-rootwrap-daemon /etc/neutron/rootwrap.conf</span><br><span class="line">root_helper = sudo /usr/local/bin/neutron-rootwrap /etc/neutron/rootwrap.conf</span><br><span class="line">[vpnagent]</span><br><span class="line">vpn_device_driver = neutron_vpnaas.services.vpn.device_drivers.strongswan_ipsec.StrongSwanDriver</span><br><span class="line"># when use libreswan</span><br><span class="line"># vpn_device_driver = neutron_vpnaas.services.vpn.device_drivers.libreswan_ipsec.LibreSwanDriver</span><br></pre></td></tr></table></figure></li><li><p>/etc/neutron/rootwrap.d目录下会增加vpnaas.filters权限管理文件，内容如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"># neutron-rootwrap command filters for nodes on which neutron is</span><br><span class="line"># expected to control network</span><br><span class="line"># for libreswan, just change &quot;strongswan&quot; to &quot;libreswan&quot;</span><br><span class="line"># This file should be owned by (and only-writable by) the root user</span><br><span class="line"># format seems to be</span><br><span class="line"># cmd-name: filter-name, raw-command, user, args</span><br><span class="line">[Filters]</span><br><span class="line">cp: RegExpFilter, cp, root, cp, -a, .*, .*/strongswan.d</span><br><span class="line">ip: IpFilter, ip, root</span><br><span class="line">ip_exec: IpNetnsExecFilter, ip, root</span><br><span class="line">ipsec: CommandFilter, ipsec, root</span><br><span class="line">rm: RegExpFilter, rm, root, rm, -rf, (.*/strongswan.d|.*/ipsec/[0-9a-z-]+)</span><br><span class="line">rm_file: RegExpFilter, rm, root, rm, -f, .*/ipsec.secrets</span><br><span class="line">strongswan: CommandFilter, strongswan, root</span><br><span class="line">neutron_netns_wrapper: CommandFilter, neutron-vpn-netns-wrapper, root</span><br><span class="line">neutron_netns_wrapper_local: CommandFilter, /usr/local/bin/neutron-vpn-netns-wrapper, root</span><br><span class="line">chown: RegExpFilter, chown, root, chown, --from=.*, root.root, .*/(ipsec.secrets|ipsec/[0-9a-z-]+/log)</span><br></pre></td></tr></table></figure></li><li><p>数据库中会增加vpnservice，vpn_endpoint_groups，vpn_endpoints等与VPN服务相关的表:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show tables;</span><br><span class="line">+-----------------------------------------+</span><br><span class="line">| Tables_in_neutron |</span><br><span class="line">+-----------------------------------------+</span><br><span class="line">| address_scopes |</span><br><span class="line">| agents |</span><br><span class="line">| alembic_version |</span><br><span class="line">   ...........</span><br><span class="line">| vpn_endpoint_groups |</span><br><span class="line">| vpn_endpoints |</span><br><span class="line">| vpnservices |</span><br><span class="line">+-----------------------------------------+</span><br></pre></td></tr></table></figure></li></ul><h4 id="使用软件包安装部署"><a href="#使用软件包安装部署" class="headerlink" title="使用软件包安装部署"></a>使用软件包安装部署</h4><p>手动安装好OpenStack环境后，按以下步骤为环境添加VPN功能</p><ol><li><p>下载vpnaas软件包，以及实现ipsec的软件包，strongswan，openswan，libreswan等等，注意：目前CentOS不支持strongswan，使用libreswan即可。</p><ul><li><p>Ubuntu下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt-get install strongswan</span><br><span class="line">pip install neutron-vpnaas</span><br></pre></td></tr></table></figure></li><li><p>CentOS下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install libreswan</span><br><span class="line">pip install neutron-vpnaas</span><br></pre></td></tr></table></figure></li></ul></li><li><p>修改配置文件</p><ul><li><p>修改控制节点上neutron.conf文件，在service_plugins增加对VPNaaS的支持，修改如下所示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">***/etc/neutron/neutron.conf***</span><br><span class="line">[DEFAULT]</span><br><span class="line">service_plugins = ......,vpnaas</span><br></pre></td></tr></table></figure></li><li><p>在/etc/neutron目录下添加neutron_vpnaas.conf文件，添加[service_providers]</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">***/etc/neutron/neutron_vpnaas.conf***</span><br><span class="line">[service_providers]</span><br><span class="line">service_provider = VPN:strongswan:neutron_vpnaas.services.vpn.service_drivers.ipsec.IPsecVPNDriver:default</span><br><span class="line">#</span><br><span class="line"># if you want use libreswan，configuration example is as follows</span><br><span class="line">#service_provider = VPN:libreswan:neutron_vpnaas.services.vpn.service_drivers.ipsec.IPsecVPNDriver:default</span><br><span class="line"># From neutron.vpnaas</span><br><span class="line">#</span><br><span class="line"># Defines providers for advanced services using the format:</span><br><span class="line"># &lt;service_type&gt;:&lt;name&gt;:&lt;driver&gt;[:default] (multi valued)</span><br><span class="line">#service_provider =</span><br></pre></td></tr></table></figure></li><li><p>在/etc/neutron/l3_agent.ini文件中额外添加以下内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">***/etc/neutron/l3_agnet.ini***</span><br><span class="line">[AGENT]</span><br><span class="line">extensions = vpnaas</span><br><span class="line">root_helper_daemon = sudo /usr/bin/neutron-rootwrap-daemon /etc/neutron/rootwrap.conf</span><br><span class="line">root_helper = sudo /usr/bin/neutron-rootwrap /etc/neutron/rootwrap.conf</span><br><span class="line">[vpnagent]</span><br><span class="line">vpn_device_driver = neutron_vpnaas.services.vpn.device_drivers.strongswan_ipsec.StrongSwanDriver</span><br><span class="line"># when use libreswan</span><br><span class="line"># vpn_device_driver = neutron_vpnaas.services.vpn.device_drivers.libreswan_ipsec.LibreSwanDriver</span><br></pre></td></tr></table></figure></li><li><p>/etc/neutron/rootwrap.conf内容如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">***/etc/neutron/rootwrap.conf***</span><br><span class="line"># Configuration for neutron-rootwrap</span><br><span class="line"># This file should be owned by (and only-writeable by) the root user</span><br><span class="line">[DEFAULT]</span><br><span class="line"># List of directories to load filter definitions from (separated by &apos;,&apos;).</span><br><span class="line"># These directories MUST all be only writeable by root !</span><br><span class="line">filters_path=/etc/neutron/rootwrap.d</span><br><span class="line"># List of directories to search executables in, in case filters do not</span><br><span class="line"># explicitely specify a full path (separated by &apos;,&apos;)</span><br><span class="line"># If not specified, defaults to system PATH environment variable.</span><br><span class="line"># These directories MUST all be only writeable by root !</span><br><span class="line">exec_dirs=/sbin,/usr/sbin,/bin,/usr/bin,/usr/local/bin,/usr/local/sbin,/usr/local/bin</span><br><span class="line"># Enable logging to syslog</span><br><span class="line"># Default value is False</span><br><span class="line">use_syslog=False</span><br><span class="line"># Which syslog facility to use.</span><br><span class="line"># Valid values include auth, authpriv, syslog, local0, local1...</span><br><span class="line"># Default value is &apos;syslog&apos;</span><br><span class="line">syslog_log_facility=syslog</span><br><span class="line"># Which messages to log.</span><br><span class="line"># INFO means log all usage</span><br><span class="line"># ERROR means only log unsuccessful attempts</span><br><span class="line">syslog_log_level=ERROR</span><br><span class="line">[xenapi]</span><br><span class="line"># XenAPI configuration is only required by the L2 agent if it is to</span><br><span class="line"># target a XenServer/XCP compute host&apos;s dom0.</span><br><span class="line">xenapi_connection_url=&lt;None&gt;</span><br><span class="line">xenapi_connection_username=root</span><br><span class="line">xenapi_connection_password=&lt;None&gt;</span><br></pre></td></tr></table></figure></li><li><p>在/etc/neutron/rootwrap.d目录下添加权限管理文件vpnaas.filters，默认安装时该目录下没有该文件，所以必须手动将该文件放入，不然运行时会报没有操作权限的错误。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">***vpnaas.filters***</span><br><span class="line"># neutron-rootwrap command filters for nodes on which neutron is</span><br><span class="line"># expected to control network</span><br><span class="line"># for libreswan, just change &quot;strongswan&quot; to &quot;libreswan&quot;</span><br><span class="line"># This file should be owned by (and only-writable by) the root user</span><br><span class="line"># format seems to be</span><br><span class="line"># cmd-name: filter-name, raw-command, user, args</span><br><span class="line">[Filters]</span><br><span class="line">cp: RegExpFilter, cp, root, cp, -a, .*, .*/strongswan.d</span><br><span class="line">ip: IpFilter, ip, root</span><br><span class="line">ip_exec: IpNetnsExecFilter, ip, root</span><br><span class="line">ipsec: CommandFilter, ipsec, root</span><br><span class="line">rm: RegExpFilter, rm, root, rm, -rf, (.*/strongswan.d|.*/ipsec/[0-9a-z-]+)</span><br><span class="line">rm_file: RegExpFilter, rm, root, rm, -f, .*/ipsec.secrets</span><br><span class="line">strongswan: CommandFilter, strongswan, root</span><br><span class="line">neutron_netns_wrapper: CommandFilter, neutron-vpn-netns-wrapper, root</span><br><span class="line">neutron_netns_wrapper_local: CommandFilter, /usr/local/bin/neutron-vpn-netns-wrapper, root</span><br><span class="line">chown: RegExpFilter, chown, root, chown, --from=.*, root.root, .*/(ipsec.secrets|ipsec/[0-9a-z-]+/log)</span><br></pre></td></tr></table></figure></li></ul></li><li><p>创建和更新数据库中所需要的VPN服务相关的表，更换ipsec driver后，也需要执行以下命令来更新数据库。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># neutron-db-manage --subproject neutron-vpnaas upgrade head</span><br></pre></td></tr></table></figure></li><li><p>重启控制节点上的neutron-server和网络节点上的neutron-l3-agent，各项服务必须正常运行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># sudo systemctl restart &quot;devstack@q-*&quot;</span><br></pre></td></tr></table></figure></li></ol><p><em>查看服务状态</em><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">stack@vpn-test2:~$ sudo systemctl list-units | grep devstack</span><br><span class="line">devstack@c-api.service                                                      loaded active running   Devstack devstack@c-api.service</span><br><span class="line">devstack@c-sch.service                                                      loaded active running   Devstack devstack@c-sch.service</span><br><span class="line">devstack@c-vol.service                                                      loaded active running   Devstack devstack@c-vol.service</span><br><span class="line">devstack@dstat.service                                                      loaded active running   Devstack devstack@dstat.service</span><br><span class="line">devstack@etcd.service                                                       loaded active running   Devstack devstack@etcd.service</span><br><span class="line">devstack@g-api.service                                                      loaded active running   Devstack devstack@g-api.service</span><br><span class="line">devstack@g-reg.service                                                      loaded active running   Devstack devstack@g-reg.service</span><br><span class="line">devstack@keystone.service                                                   loaded active running   Devstack devstack@keystone.service</span><br><span class="line">devstack@n-api-meta.service                                                 loaded active running   Devstack devstack@n-api-meta.service</span><br><span class="line">devstack@n-api.service                                                      loaded active running   Devstack devstack@n-api.service</span><br><span class="line">devstack@n-cauth.service                                                    loaded active running   Devstack devstack@n-cauth.service</span><br><span class="line">devstack@n-cond-cell1.service                                               loaded active running   Devstack devstack@n-cond-cell1.service</span><br><span class="line">devstack@n-cpu.service                                                      loaded active running   Devstack devstack@n-cpu.service</span><br><span class="line">devstack@n-novnc-cell1.service                                              loaded active running   Devstack devstack@n-novnc-cell1.service</span><br><span class="line">devstack@n-sch.service                                                      loaded active running   Devstack devstack@n-sch.service</span><br><span class="line">devstack@n-super-cond.service                                               loaded active running   Devstack devstack@n-super-cond.service</span><br><span class="line">devstack@placement-api.service                                              loaded active running   Devstack devstack@placement-api.service</span><br><span class="line">devstack@q-agt.service                                                      loaded active running   Devstack devstack@q-agt.service</span><br><span class="line">devstack@q-dhcp.service                                                     loaded active running   Devstack devstack@q-dhcp.service</span><br><span class="line">devstack@q-l3.service                                                       loaded active running   Devstack devstack@q-l3.service</span><br><span class="line">devstack@q-meta.service                                                     loaded active running   Devstack devstack@q-meta.service</span><br><span class="line">devstack@q-svc.service                                                      loaded active running   Devstack devstack@q-svc.service</span><br><span class="line">system-devstack.slice                                                       loaded active active    system-devstack.slice</span><br></pre></td></tr></table></figure></p><p> <strong><em>注意</em></strong>：当采用默认devstack快速部署后，想更换ipsec_driver(如;strongswan→libreswan），同样可以按照以上步骤及配置进行更换，也必须执行neutron-db-manage来更新数据库内容，否则重启neutron服务时会出错。</p><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><h4 id="使用两个Devstack节点进行测试"><a href="#使用两个Devstack节点进行测试" class="headerlink" title="使用两个Devstack节点进行测试"></a>使用两个Devstack节点进行测试</h4><p>使用两个由公共“public”网络连接的DevStack节点来测试VPNaaS。 第二个节点可以使用与第一个节点相同的公共网络进行设置，但它将使用不同的网关IP（即路由器IP）。 在本次测试中，我们假设有两个DevStack节点（East和West），每个节点都在物理机上运行（如果需要，可以对多个虚拟机执行相同的操作）。 （注意：也可以在一个节点上使用两个虚拟路由器创建类似拓扑）</p><p>示例拓扑：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">(10.1.0.0/24 - DevStack East)</span><br><span class="line">              |</span><br><span class="line">              |  10.1.0.1</span><br><span class="line">     [Neutron Router]</span><br><span class="line">              |  172.24.4.226</span><br><span class="line">              |</span><br><span class="line">              |  172.24.4.225</span><br><span class="line">     [Internet GW]</span><br><span class="line">              |</span><br><span class="line">              |</span><br><span class="line">     [Internet GW]</span><br><span class="line">              | 172.24.4.232</span><br><span class="line">              |</span><br><span class="line">              | 172.24.4.233</span><br><span class="line">     [Neutron Router]</span><br><span class="line">              |  10.2.0.1</span><br><span class="line">              |</span><br><span class="line">     (10.2.0.0/24 DevStack West)</span><br></pre></td></tr></table></figure></p><p>专用物理端口可用于通过物理交换机互连的“public”网络连接（例如：eth2）。 需要将端口添加到每个DevStack节点上的OVS桥（例如：sudo ovs-vsctl add-port br-ex eth2）。</p><h5 id="DevStack配置"><a href="#DevStack配置" class="headerlink" title="DevStack配置"></a>DevStack配置</h5><p>对于East节点，可以将以下字段添加到local.conf文件，这将自动为你配置一个10.1.0.0/24的私有网络和172.24.4.0/24的公共网络。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">PUBLIC_SUBNET_NAME=yoursubnet</span><br><span class="line">PRIVATE_SUBNET_NAME=mysubnet</span><br><span class="line">FIXED_RANGE=10.1.0.0/24</span><br><span class="line">NETWORK_GATEWAY=10.1.0.1</span><br><span class="line">PUBLIC_NETWORK_GATEWAY=172.24.4.225</span><br><span class="line">Q_FLOATING_ALLOCATION_POOL=start=172.24.4.226,end=172.24.4.231</span><br></pre></td></tr></table></figure></p><p>对于West节点，添加以下内容，以使用不同的本地网络和公共的网关IP。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">PUBLIC_SUBNET_NAME=yoursubnet</span><br><span class="line">PRIVATE_SUBNET_NAME=mysubnet</span><br><span class="line">FIXED_RANGE=10.2.0.0/24</span><br><span class="line">NETWORK_GATEWAY=10.2.0.1</span><br><span class="line">PUBLIC_NETWORK_GATEWAY=172.24.4.232</span><br><span class="line">Q_FLOATING_ALLOCATION_POOL=start=172.24.4.233,end=172.24.4.238</span><br></pre></td></tr></table></figure></p><h5 id="VPNaaS配置"><a href="#VPNaaS配置" class="headerlink" title="VPNaaS配置"></a>VPNaaS配置</h5><p>使用在East和West节点上运行的DevStack并确认连接（即确保可以到另一个节点上路由器/ GW 能够ping通），然后执行以下VPNaaS CLI命令。</p><ul><li>East节点<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">neutron vpn-ikepolicy-create ikepolicy1</span><br><span class="line">neutron vpn-ipsecpolicy-create ipsecpolicy1</span><br><span class="line">neutron vpn-service-create --name myvpn --description &quot;My vpn service&quot; router1 mysubnet</span><br></pre></td></tr></table></figure></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">neutron ipsec-site-connection-create --name vpnconnection1 --vpnservice-id myvpn --ikepolicy-id ikepolicy1 --ipsecpolicy-id ipsecpolicy1 --peer-address 172.24.4.233 --peer-id 172.24.4.233 --peer-cidr 10.2.0.0/24 --psk secret</span><br></pre></td></tr></table></figure><ul><li>West节点<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">neutron vpn-ikepolicy-create ikepolicy1</span><br><span class="line">neutron vpn-ipsecpolicy-create ipsecpolicy1</span><br><span class="line">neutron vpn-service-create --name myvpn --description &quot;My vpn service&quot; router1 mysubnet</span><br></pre></td></tr></table></figure></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">neutron ipsec-site-connection-create --name vpnconnection1 --vpnservice-id myvpn --ikepolicy-id ikepolicy1 --ipsecpolicy-id ipsecpolicy1 --peer-address 172.24.4.226 --peer-id 172.24.4.226 --peer-cidr 10.1.0.0/24 --psk secret</span><br></pre></td></tr></table></figure><p>注：</p><ul><li>peer-address 和peer-id 对写成对方router的对外网关ip地址</li><li>peer-cidr写成对方路由保护的内网，即想要建立ipsec-site-connection连接的子网</li><li>psk可以自定义，只要双方一致即可</li></ul><h5 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h5><p>可以在每个节点上启动VM，然后从VM ping到远端路由器的公共IP。 使用运行在其中一个节点上的tcpdump，可以看到加密数据包（ESP）。</p><h4 id="使用单个Devstack节点进行测试"><a href="#使用单个Devstack节点进行测试" class="headerlink" title="使用单个Devstack节点进行测试"></a>使用单个Devstack节点进行测试</h4><p>这里的想法是使用DevStack部署一个OpenStack云，两个路由器（一个自动创建），两个私有网络（自动创建一个）10.1.0.0 / 24和10.2.0.0/24，每个私有网络中有一个虚拟机， 并使用公共网络（172.24.4.0/24）在两个私有网络之间建立VPN连接。</p><p>本次示例，local.conf文件内容如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">[[local|localrc]]</span><br><span class="line">GIT_BASE=https://github.com</span><br><span class="line">DEST=/opt/stack</span><br><span class="line"></span><br><span class="line">disable_service n-net</span><br><span class="line">enable_service q-svc</span><br><span class="line">enable_service q-agt</span><br><span class="line">enable_service q-dhcp</span><br><span class="line">enable_service q-l3</span><br><span class="line">enable_service q-meta</span><br><span class="line">enable_service neutron</span><br><span class="line">enable_plugin neutron-vpnaas https://git.openstack.org/openstack/neutron-vpnaas</span><br><span class="line"></span><br><span class="line">FIXED_RANGE=10.1.0.0/24</span><br><span class="line">FIXED_NETWORK_SIZE=256</span><br><span class="line">NETWORK_GATEWAY=10.1.0.1</span><br><span class="line">PRIVATE_SUBNET_NAME=privateA</span><br><span class="line"></span><br><span class="line">PUBLIC_SUBNET_NAME=public-subnet</span><br><span class="line">FLOATING_RANGE=172.24.4.0/24</span><br><span class="line">PUBLIC_NETWORK_GATEWAY=172.24.4.10</span><br><span class="line">Q_FLOATING_ALLOCATION_POOL=&quot;start=172.24.4.11,end=172.24.4.29&quot;</span><br><span class="line"></span><br><span class="line">LIBVIRT_TYPE=qemu</span><br><span class="line"></span><br><span class="line">IMAGE_URLS=&quot;http://cloud-images.ubuntu.com/releases/14.04.1/release/ubuntu-14.04-server-cloudimg-amd64.tar.gz,http://download.cirros-cloud.net/0.3.3/cirros-0.3.3-x86_64-uec.tar.gz&quot;</span><br><span class="line"></span><br><span class="line">SCREEN_LOGDIR=/opt/stack/screen-logs</span><br><span class="line">SYSLOG=True</span><br><span class="line">LOGFILE=~/devstack/stack.sh.log</span><br><span class="line"></span><br><span class="line">ADMIN_PASSWORD=password</span><br><span class="line">MYSQL_PASSWORD=password</span><br><span class="line">RABBIT_PASSWORD=password</span><br><span class="line">SERVICE_PASSWORD=password</span><br><span class="line">SERVICE_TOKEN=tokentoken</span><br><span class="line"></span><br><span class="line">Q_USE_DEBUG_COMMAND=True</span><br><span class="line"></span><br><span class="line"># RECLONE=No</span><br><span class="line">RECLONE=yes</span><br><span class="line">OFFLINE=False</span><br></pre></td></tr></table></figure></p><p>执行 ./stack.sh，确保执行成功。</p><h5 id="环境初始化"><a href="#环境初始化" class="headerlink" title="环境初始化"></a>环境初始化</h5><p>stack.sh完成后，将拥有一个专用网络（10.1.0.0/24）和一个路由器（router1）。 为了准备建立VPN连接，需要创建第二个网络，子网和路由器，并在每个专用网络中启动一个VM。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"># Create second net, subnet, router</span><br><span class="line">  source ~/devstack/openrc admin demo</span><br><span class="line">  neutron net-create privateB</span><br><span class="line">  neutron subnet-create --name subB privateB 10.2.0.0/24 --gateway 10.2.0.1</span><br><span class="line">  neutron router-create router2</span><br><span class="line">  neutron router-interface-add router2 subB</span><br><span class="line">  neutron router-gateway-set router2 public</span><br><span class="line"></span><br><span class="line">  # Start up a VM in the privateA subnet.</span><br><span class="line">  PRIVATE_NET=`neutron net-list | grep &apos;private &apos; | cut -f 2 -d&apos; &apos;`</span><br><span class="line">  nova boot --flavor 1 --image cirros-0.3.3-x86_64-uec --nic net-id=$PRIVATE_NET peter</span><br><span class="line"></span><br><span class="line">  # Start up a VM in the privateB subnet</span><br><span class="line">  PRIVATE_NETB=`neutron net-list | grep privateB | cut -f 2 -d&apos; &apos;`</span><br><span class="line">  nova boot --flavor 1 --image cirros-0.3.3-x86_64-uec --nic net-id=$PRIVATE_NETB paul</span><br></pre></td></tr></table></figure></p><h5 id="IPSec站点到站点连接创建"><a href="#IPSec站点到站点连接创建" class="headerlink" title="IPSec站点到站点连接创建"></a>IPSec站点到站点连接创建</h5><p>以下命令将创建IPSec连接<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># Create VPN connections</span><br><span class="line">   neutron vpn-ikepolicy-create ikepolicy</span><br><span class="line">   neutron vpn-ipsecpolicy-create ipsecpolicy</span><br><span class="line">   neutron vpn-service-create --name myvpn --description &quot;My vpn service&quot; router1 privateA</span><br><span class="line">    </span><br><span class="line">   neutron ipsec-site-connection-create --name vpnconnection1 --vpnservice-id myvpn \</span><br><span class="line">   --ikepolicy-id ikepolicy --ipsecpolicy-id ipsecpolicy --peer-address 172.24.4.13 \</span><br><span class="line">   --peer-id 172.24.4.13 --peer-cidr 10.2.0.0/24 --psk secret</span><br><span class="line">    </span><br><span class="line">   neutron vpn-service-create --name myvpnB --description &quot;My vpn serviceB&quot; router2 subB</span><br><span class="line">    </span><br><span class="line">   neutron ipsec-site-connection-create --name vpnconnection2 --vpnservice-id myvpnB \</span><br><span class="line">   --ikepolicy-id ikepolicy --ipsecpolicy-id ipsecpolicy --peer-address 172.24.4.11 \</span><br><span class="line">   --peer-id 172.24.4.11 --peer-cidr 10.1.0.0/24 --psk secret</span><br></pre></td></tr></table></figure></p><h5 id="验证-1"><a href="#验证-1" class="headerlink" title="验证"></a>验证</h5><p>此时（一旦连接变为Active状态 - 可能需要30秒左右），应该能够从privateA网络中的虚拟机ping到privateB网络中的虚拟机。 如果您使用来自其中一个路由器名称空间的qg-＃##接口进行tcpdump，您将看到加密数据包。 如果删除其中一个连接，您将看到ping失败（如果所有连接都正确）。</p><h5 id="MLS-和-Endpoint-group"><a href="#MLS-和-Endpoint-group" class="headerlink" title="*! MLS 和 Endpoint group"></a>*! MLS 和 Endpoint group</h5><p>MLS（Multi local subnets）即多个本地子网。在Mitaka版本中，除了当前的多个对等CIDR之外，IPSec站点间连接还将支持多个本地子网。 创建VPN服务时，多个本地子网功能由未指定本地子网触发。 通过在VPN服务创建中提供子网，可以在单个本地子网中保持向后兼容性。</p><p>为了支持多个本地子网，在Liberty版本已经提供了一种叫Endpoint groups的新功能，称为“端点组”。 每个端点组将定义一个或多个特定类型的端点，并可用于为IPSec连接指定本地和对等端点。 端点组将“连接的内容”与VPN服务的“如何连接”分开，并且将来可用于不同flavor的VPN。 一个例子：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># Create VPN connections</span><br><span class="line">  neutron vpn-ikepolicy-create ikepolicy</span><br><span class="line">  neutron vpn-ipsecpolicy-create ipsecpolicy</span><br><span class="line">  neutron vpn-service-create --name myvpnC --description &quot;My vpn service&quot; router1</span><br></pre></td></tr></table></figure></p><p>要准备IPSec站点到站点，可以为本地子网创建端点组，并为对等CIDR创建端点组，如下所示：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">neutron vpn-endpoint-group-create --name my-locals --type subnet --value privateA --value privateA2</span><br><span class="line">neutron vpn-endpoint-group-create --name my-peers --type cidr --value 10.2.0.0/24 --value 20.2.0.0/24</span><br></pre></td></tr></table></figure></p><p>其中privateA和privateA2是两个本地（专用）子网，10.2.0.0/24和20.2.0.0/24是两个CIDR，代表连接将使用的对等（专用）子网。 然后，在创建IPSec站点到站点连接时，将指定这些端点组ID，而不是peer-cidrs属性：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">neutron ipsec-site-connection-create --name vpnconnection3 --vpnservice-id myvpnC \</span><br><span class="line">   --ikepolicy-id ikepolicy --ipsecpolicy-id ipsecpolicy --peer-address 172.24.4.11 \</span><br><span class="line">   --peer-id 172.24.4.11 --local-ep-group my-locals --peer-ep-group my-peers --psk secret</span><br></pre></td></tr></table></figure></p><h4 id="VPN-test-for-CentOS"><a href="#VPN-test-for-CentOS" class="headerlink" title="VPN test for CentOS"></a>VPN test for CentOS</h4><h5 id="测试环境"><a href="#测试环境" class="headerlink" title="测试环境"></a>测试环境</h5><p>云主机环境：CentOS7.4<br>Devstack版本：master<br>Openstack版本：master(Rocky，Queens)<br>ipsec_driver类型：libreswan<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[stack@vpnaas devstack]$ neutron service-provider-list</span><br><span class="line">neutron CLI is deprecated and will be removed in the future. Use openstack CLI instead.</span><br><span class="line">+---------------+-------------+---------+</span><br><span class="line">| service_type  | name        | default |</span><br><span class="line">+---------------+-------------+---------+</span><br><span class="line">| L3_ROUTER_NAT | single_node | False   |</span><br><span class="line">| L3_ROUTER_NAT | ha          | False   |</span><br><span class="line">| L3_ROUTER_NAT | dvrha       | False   |</span><br><span class="line">| VPN           | libreswan   | True    |</span><br><span class="line">| L3_ROUTER_NAT | dvr         | False   |</span><br><span class="line">| VPN           | libreswan   | True    |</span><br><span class="line">+---------------+-------------+---------+</span><br></pre></td></tr></table></figure></p><h5 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h5><p>Devstack目录下local.conf的配置内容如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">[[local|localrc]]</span><br><span class="line">ADMIN_PASSWORD=secret</span><br><span class="line">DATABASE_PASSWORD=$ADMIN_PASSWORD</span><br><span class="line">RABBIT_PASSWORD=$ADMIN_PASSWORD</span><br><span class="line">SERVICE_PASSWORD=$ADMIN_PASSWORD</span><br><span class="line"></span><br><span class="line">enable_plugin neutron-vpnaas https://git.openstack.org/openstack/neutron-vpnaas</span><br><span class="line">disable_service n-net</span><br><span class="line">enable_service q-svc</span><br><span class="line">enable_service q-agt</span><br><span class="line">enable_service q-dhcp</span><br><span class="line">enable_service q-l3</span><br><span class="line">enable_service q-meta</span><br><span class="line">enable_service tempest</span><br><span class="line"></span><br><span class="line">IPSEC_PACKAGE=&quot;libreswan&quot;</span><br><span class="line"></span><br><span class="line">LOGFILE=$DEST/logs/stack.sh.log</span><br><span class="line">LOGDAYS=2</span><br><span class="line"></span><br><span class="line">SWIFT_HASH=66a3d6b56c1f479c8b4e70ab5c2000f5</span><br><span class="line">SWIFT_REPLICAS=1</span><br><span class="line">SWIFT_DATA_DIR=$DEST/data</span><br></pre></td></tr></table></figure></p><p><strong><em>注意</em></strong>：本次测试第一次是使用默认IPSEC_PACKAGE=”strongwan”，最后发现创建vpn-service和ipsec-site-connection状态都是PENDING-CREATE，于是手动安装libreswan，将配置strongswan更改为librewan,具体更改配置步骤参照另一篇文档中使用软件包安装部署，当然你也可以跑devstack时候，在local.conf里面直接指定IPSEC_PACKAGE=”libreswan”，参照上面。</p><h5 id="测试方案"><a href="#测试方案" class="headerlink" title="测试方案"></a>测试方案</h5><p>两个不同的vm，各自创建VPN服务，只需要各自VPC对应的VPN-Service里的出口网关IP地址能通即可；可vpn-service里出口IP默认是Router Gateway IP，而只需要将两个vm的external网络设置为同一网段，这样就能达到目标。</p><p>具体步骤:</p><ol><li>为两个vm创建对应的network和所在子网</li><li>创建router，并设置网关在同一段external网络，即”public”</li><li>各自network下创建vm，并创建ikepolicy，ipsecpolicy，和vpn-service</li><li>创建ipsec-site-connection，测试两个vm的连通性</li></ol><p>网络拓扑:<br><img src="https://raw.githubusercontent.com/Sirius21c/sirius21c.github.io/master/images/Neutron-VPNaaS/centos%E6%B5%8B%E8%AF%95%E6%8B%93%E6%89%91.png" alt="CentOS测试拓扑"></p><h5 id="过程记录"><a href="#过程记录" class="headerlink" title="过程记录"></a>过程记录</h5><ol><li><p>创建vpn-network-1，和vpn-network-1，指定子网的CIDR为2.3.4.0/24</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">neutron net-create vpn-network-1</span><br><span class="line">neutron CLI is deprecated and will be removed in the future. Use openstack CLI instead.</span><br><span class="line">Created a new network:</span><br><span class="line">+---------------------------+--------------------------------------+</span><br><span class="line">| Field                     | Value                                |</span><br><span class="line">+---------------------------+--------------------------------------+</span><br><span class="line">| admin_state_up            | True                                 |</span><br><span class="line">| availability_zone_hints   |                                      |</span><br><span class="line">| availability_zones        |                                      |</span><br><span class="line">| created_at                | 2018-07-05T10:14:12Z                 |</span><br><span class="line">| description               |                                      |</span><br><span class="line">| id                        | e6edeb26-b2b7-4c83-ad39-4fc2fe671e6e |</span><br><span class="line">| ipv4_address_scope        |                                      |</span><br><span class="line">| ipv6_address_scope        |                                      |</span><br><span class="line">| is_default                | False                                |</span><br><span class="line">| mtu                       | 1450                                 |</span><br><span class="line">| name                      | vpn-network-1                        |</span><br><span class="line">| port_security_enabled     | True                                 |</span><br><span class="line">| project_id                | 60ad4059478544e6a4d3d241fdbefa69     |</span><br><span class="line">| provider:network_type     | vxlan                                |</span><br><span class="line">| provider:physical_network |                                      |</span><br><span class="line">| provider:segmentation_id  | 15                                   |</span><br><span class="line">| revision_number           | 2                                    |</span><br><span class="line">| router:external           | False                                |</span><br><span class="line">| shared                    | False                                |</span><br><span class="line">| status                    | ACTIVE                               |</span><br><span class="line">| subnets                   |                                      |</span><br><span class="line">| tags                      |                                      |</span><br><span class="line">| tenant_id                 | 60ad4059478544e6a4d3d241fdbefa69     |</span><br><span class="line">| updated_at                | 2018-07-05T10:14:13Z                 |</span><br><span class="line">+---------------------------+--------------------------------------+</span><br><span class="line">neutron subnet-create --name vpn-subnet-1 vpn-network-1 2.3.4.0/24</span><br><span class="line">neutron CLI is deprecated and will be removed in the future. Use openstack CLI instead.</span><br><span class="line">Created a new subnet:</span><br><span class="line">+-------------------+------------------------------------------+</span><br><span class="line">| Field             | Value                                    |</span><br><span class="line">+-------------------+------------------------------------------+</span><br><span class="line">| allocation_pools  | &#123;&quot;start&quot;: &quot;2.3.4.2&quot;, &quot;end&quot;: &quot;2.3.4.254&quot;&#125; |</span><br><span class="line">| cidr              | 2.3.4.0/24                               |</span><br><span class="line">| created_at        | 2018-07-05T10:14:51Z                     |</span><br><span class="line">| description       |                                          |</span><br><span class="line">| dns_nameservers   |                                          |</span><br><span class="line">| enable_dhcp       | True                                     |</span><br><span class="line">| gateway_ip        | 2.3.4.1                                  |</span><br><span class="line">| host_routes       |                                          |</span><br><span class="line">| id                | 79645d5f-59db-47b1-a996-b30d2e513140     |</span><br><span class="line">| ip_version        | 4                                        |</span><br><span class="line">| ipv6_address_mode |                                          |</span><br><span class="line">| ipv6_ra_mode      |                                          |</span><br><span class="line">| name              | vpn-subnet-1                             |</span><br><span class="line">| network_id        | e6edeb26-b2b7-4c83-ad39-4fc2fe671e6e     |</span><br><span class="line">| project_id        | 60ad4059478544e6a4d3d241fdbefa69         |</span><br><span class="line">| revision_number   | 0                                        |</span><br><span class="line">| service_types     |                                          |</span><br><span class="line">| subnetpool_id     |                                          |</span><br><span class="line">| tags              |                                          |</span><br><span class="line">| tenant_id         | 60ad4059478544e6a4d3d241fdbefa69         |</span><br><span class="line">| updated_at        | 2018-07-05T10:14:51Z                     |</span><br><span class="line">+-------------------+------------------------------------------+</span><br></pre></td></tr></table></figure></li><li><p>创建路由器vpn-router-1，为其添加子网vpn-subnet-1，设置其网关为”public”网络</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">[stack@vpnaas devstack]$ openstack network list</span><br><span class="line">+--------------------------------------+---------------+----------------------------------------------------------------------------+</span><br><span class="line">| ID                                   | Name          | Subnets                                                                    |</span><br><span class="line">+--------------------------------------+---------------+----------------------------------------------------------------------------+</span><br><span class="line">| 0e34b977-8c21-4027-9029-1ff0d53c443c | private       | 00015b05-4e14-4535-864f-04a2991761aa, f30ddb58-d365-4154-88f7-baf0259a6363 |</span><br><span class="line">| cfc1f313-1a12-46d3-b9f0-8a0d0fc83994 | public        | eca99e88-279e-4a4d-9dcd-d2011bbcc58b, eefc51de-718a-4539-a167-e95cab039ae4 |</span><br><span class="line">| e6edeb26-b2b7-4c83-ad39-4fc2fe671e6e | vpn-network-1 | 79645d5f-59db-47b1-a996-b30d2e513140                                       |</span><br><span class="line">+--------------------------------------+---------------+----------------------------------------------------------------------------+</span><br><span class="line">[stack@vpnaas devstack]$ neutron router-create vpn-router-1</span><br><span class="line">neutron CLI is deprecated and will be removed in the future. Use openstack CLI instead.</span><br><span class="line">Created a new router:</span><br><span class="line">+-------------------------+--------------------------------------+</span><br><span class="line">| Field                   | Value                                |</span><br><span class="line">+-------------------------+--------------------------------------+</span><br><span class="line">| admin_state_up          | True                                 |</span><br><span class="line">| availability_zone_hints |                                      |</span><br><span class="line">| availability_zones      |                                      |</span><br><span class="line">| created_at              | 2018-07-05T10:16:23Z                 |</span><br><span class="line">| description             |                                      |</span><br><span class="line">| distributed             | False                                |</span><br><span class="line">| external_gateway_info   |                                      |</span><br><span class="line">| flavor_id               |                                      |</span><br><span class="line">| ha                      | False                                |</span><br><span class="line">| id                      | da70042a-aa92-4b81-a00d-630b8da0f3e2 |</span><br><span class="line">| name                    | vpn-router-1                         |</span><br><span class="line">| project_id              | 60ad4059478544e6a4d3d241fdbefa69     |</span><br><span class="line">| revision_number         | 1                                    |</span><br><span class="line">| routes                  |                                      |</span><br><span class="line">| status                  | ACTIVE                               |</span><br><span class="line">| tags                    |                                      |</span><br><span class="line">| tenant_id               | 60ad4059478544e6a4d3d241fdbefa69     |</span><br><span class="line">| updated_at              | 2018-07-05T10:16:23Z                 |</span><br><span class="line">+-------------------------+--------------------------------------+</span><br><span class="line">[stack@vpnaas devstack]$ neutron router-interface-add vpn-router-1 vpn-subnet-1</span><br><span class="line">neutron CLI is deprecated and will be removed in the future. Use openstack CLI instead.</span><br><span class="line">Added interface 2c1b084d-f618-4cae-9a35-83718976fe40 to router vpn-router-1.</span><br><span class="line">[stack@vpnaas devstack]$ neutron router-gateway-set vpn-router-1 public</span><br><span class="line">neutron CLI is deprecated and will be removed in the future. Use openstack CLI instead.</span><br><span class="line">Set gateway for router vpn-router-1</span><br></pre></td></tr></table></figure></li><li><p>创建vm1,类似创建vpn-network-2及vm2</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line">[stack@vpnaas devstack]$ nova boot --flavor 1 --image cirros-0.3.5-x86_64-disk --nic net-id=e6edeb26-b2b7-4c83-ad39-4fc2fe671e6e vm1</span><br><span class="line">+--------------------------------------+-----------------------------------------------------------------+</span><br><span class="line">| Property                             | Value                                                           |</span><br><span class="line">+--------------------------------------+-----------------------------------------------------------------+</span><br><span class="line">| OS-DCF:diskConfig                    | MANUAL                                                          |</span><br><span class="line">| OS-EXT-AZ:availability_zone          |                                                                 |</span><br><span class="line">| OS-EXT-SRV-ATTR:host                 | -                                                               |</span><br><span class="line">| OS-EXT-SRV-ATTR:hostname             | vm1                                                             |</span><br><span class="line">| OS-EXT-SRV-ATTR:hypervisor_hostname  | -                                                               |</span><br><span class="line">| OS-EXT-SRV-ATTR:instance_name        |                                                                 |</span><br><span class="line">| OS-EXT-SRV-ATTR:kernel_id            |                                                                 |</span><br><span class="line">| OS-EXT-SRV-ATTR:launch_index         | 0                                                               |</span><br><span class="line">| OS-EXT-SRV-ATTR:ramdisk_id           |                                                                 |</span><br><span class="line">| OS-EXT-SRV-ATTR:reservation_id       | r-5ufc0lzr                                                      |</span><br><span class="line">| OS-EXT-SRV-ATTR:root_device_name     | -                                                               |</span><br><span class="line">| OS-EXT-SRV-ATTR:user_data            | -                                                               |</span><br><span class="line">| OS-EXT-STS:power_state               | 0                                                               |</span><br><span class="line">| OS-EXT-STS:task_state                | scheduling                                                      |</span><br><span class="line">| OS-EXT-STS:vm_state                  | building                                                        |</span><br><span class="line">| OS-SRV-USG:launched_at               | -                                                               |</span><br><span class="line">| OS-SRV-USG:terminated_at             | -                                                               |</span><br><span class="line">| accessIPv4                           |                                                                 |</span><br><span class="line">| accessIPv6                           |                                                                 |</span><br><span class="line">| adminPass                            | zWsm6KWAoBhc                                                    |</span><br><span class="line">| config_drive                         |                                                                 |</span><br><span class="line">| created                              | 2018-07-05T10:20:02Z                                            |</span><br><span class="line">| description                          | -                                                               |</span><br><span class="line">| flavor:disk                          | 1                                                               |</span><br><span class="line">| flavor:ephemeral                     | 0                                                               |</span><br><span class="line">| flavor:extra_specs                   | &#123;&#125;                                                              |</span><br><span class="line">| flavor:original_name                 | m1.tiny                                                         |</span><br><span class="line">| flavor:ram                           | 512                                                             |</span><br><span class="line">| flavor:swap                          | 0                                                               |</span><br><span class="line">| flavor:vcpus                         | 1                                                               |</span><br><span class="line">| hostId                               |                                                                 |</span><br><span class="line">| host_status                          |                                                                 |</span><br><span class="line">| id                                   | 5d88d5c3-ac9a-4330-bf96-6c953c215bf0                            |</span><br><span class="line">| image                                | cirros-0.3.5-x86_64-disk (5cd7bf05-9701-4e40-b6df-d2105457030c) |</span><br><span class="line">| key_name                             | -                                                               |</span><br><span class="line">| locked                               | False                                                           |</span><br><span class="line">| metadata                             | &#123;&#125;                                                              |</span><br><span class="line">| name                                 | vm1                                                             |</span><br><span class="line">| os-extended-volumes:volumes_attached | []                                                              |</span><br><span class="line">| progress                             | 0                                                               |</span><br><span class="line">| security_groups                      | default                                                         |</span><br><span class="line">| status                               | BUILD                                                           |</span><br><span class="line">| tags                                 | []                                                              |</span><br><span class="line">| tenant_id                            | 60ad4059478544e6a4d3d241fdbefa69                                |</span><br><span class="line">| updated                              | 2018-07-05T10:20:02Z                                            |</span><br><span class="line">| user_id                              | 08e7a814d45a4328a330c0bc4a41fa5d                                |</span><br><span class="line">+--------------------------------------+-----------------------------------------------------------------+</span><br><span class="line">[stack@vpnaas devstack]$ neutron net-create vpn-network-2</span><br><span class="line">[stack@vpnaas devstack]$ neutron subnet-create --name vpn-subnet-2 vpn-network-2 4.3.2.0/24</span><br><span class="line">[stack@vpnaas devstack]$ neutron router-create vpn-router-2</span><br><span class="line">[stack@vpnaas devstack]$ neutron router-interface-add vpn-router-2 vpn-subnet-2</span><br><span class="line">[stack@vpnaas devstack]$ neutron router-gateway-set vpn-router-2 public</span><br><span class="line">[stack@vpnaas devstack]$ nova boot --flavor 1 --image cirros-0.3.5-x86_64-disk --nic net-id=2a7d7d49-475f-4868-9d1f-c307bd05c8fe vm2</span><br><span class="line">[stack@vpnaas devstack]$ nova list</span><br><span class="line">+--------------------------------------+------+--------+------------+-------------+------------------------+</span><br><span class="line">| ID                                   | Name | Status | Task State | Power State | Networks               |</span><br><span class="line">+--------------------------------------+------+--------+------------+-------------+------------------------+</span><br><span class="line">| 5d88d5c3-ac9a-4330-bf96-6c953c215bf0 | vm1  | ACTIVE | -          | Running     | vpn-network-1=2.3.4.11 |</span><br><span class="line">| 7971cf68-1b0b-461b-a72c-0d0243928543 | vm2  | ACTIVE | -          | Running     | vpn-network-2=4.3.2.6  |</span><br><span class="line">+--------------------------------------+------+--------+------------+-------------+------------------------+</span><br><span class="line">[stack@vpnaas devstack]$ openstack network list</span><br><span class="line">+--------------------------------------+---------------+----------------------------------------------------------------------------+</span><br><span class="line">| ID                                   | Name          | Subnets                                                                    |</span><br><span class="line">+--------------------------------------+---------------+----------------------------------------------------------------------------+</span><br><span class="line">| 0e34b977-8c21-4027-9029-1ff0d53c443c | private       | 00015b05-4e14-4535-864f-04a2991761aa, f30ddb58-d365-4154-88f7-baf0259a6363 |</span><br><span class="line">| 2a7d7d49-475f-4868-9d1f-c307bd05c8fe | vpn-network-2 | 5035c74b-5d70-4d2b-b7cb-b1014a7c2e35                                       |</span><br><span class="line">| cfc1f313-1a12-46d3-b9f0-8a0d0fc83994 | public        | eca99e88-279e-4a4d-9dcd-d2011bbcc58b, eefc51de-718a-4539-a167-e95cab039ae4 |</span><br><span class="line">| e6edeb26-b2b7-4c83-ad39-4fc2fe671e6e | vpn-network-1 | 79645d5f-59db-47b1-a996-b30d2e513140                                       |</span><br><span class="line">+--------------------------------------+---------------+----------------------------------------------------------------------------+</span><br><span class="line">[stack@vpnaas devstack]$ openstack router list</span><br><span class="line">+--------------------------------------+--------------+--------+-------+-------------+-------+----------------------------------+</span><br><span class="line">| ID                                   | Name         | Status | State | Distributed | HA    | Project                          |</span><br><span class="line">+--------------------------------------+--------------+--------+-------+-------------+-------+----------------------------------+</span><br><span class="line">| 6aaa82da-d904-468c-b643-220d96cf3841 | router1      | ACTIVE | UP    | False       | False | 3cf6626d7c3a4fc2b43deda4493a38ab |</span><br><span class="line">| 9ae51377-14b2-40c0-917e-c93a32ed6b76 | vpn-router-2 | ACTIVE | UP    | False       | False | 60ad4059478544e6a4d3d241fdbefa69 |</span><br><span class="line">| da70042a-aa92-4b81-a00d-630b8da0f3e2 | vpn-router-1 | ACTIVE | UP    | False       | False | 60ad4059478544e6a4d3d241fdbefa69 |</span><br><span class="line">+--------------------------------------+--------------+--------+-------+-------------+-------+----------------------------------+</span><br><span class="line">[stack@vpnaas devstack]$ openstack subnet list</span><br><span class="line">+--------------------------------------+---------------------+--------------------------------------+---------------------+</span><br><span class="line">| ID                                   | Name                | Network                              | Subnet              |</span><br><span class="line">+--------------------------------------+---------------------+--------------------------------------+---------------------+</span><br><span class="line">| 00015b05-4e14-4535-864f-04a2991761aa | ipv6-private-subnet | 0e34b977-8c21-4027-9029-1ff0d53c443c | fd19:a538:3b0f::/64 |</span><br><span class="line">| 5035c74b-5d70-4d2b-b7cb-b1014a7c2e35 | vpn-subnet-2        | 2a7d7d49-475f-4868-9d1f-c307bd05c8fe | 4.3.2.0/24          |</span><br><span class="line">| 79645d5f-59db-47b1-a996-b30d2e513140 | vpn-subnet-1        | e6edeb26-b2b7-4c83-ad39-4fc2fe671e6e | 2.3.4.0/24          |</span><br><span class="line">| eca99e88-279e-4a4d-9dcd-d2011bbcc58b | ipv6-public-subnet  | cfc1f313-1a12-46d3-b9f0-8a0d0fc83994 | 2001:db8::/64       |</span><br><span class="line">| eefc51de-718a-4539-a167-e95cab039ae4 | public-subnet       | cfc1f313-1a12-46d3-b9f0-8a0d0fc83994 | 172.24.4.0/24       |</span><br><span class="line">| f30ddb58-d365-4154-88f7-baf0259a6363 | privateA            | 0e34b977-8c21-4027-9029-1ff0d53c443c | 10.0.0.0/26         |</span><br><span class="line">+--------------------------------------+---------------------+--------------------------------------+---------------------+</span><br></pre></td></tr></table></figure></li><li><p>创建ikepolicy和ipsecpolicy和vpn-service</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line">[stack@vpnaas devstack]$ neutron vpn-ikepolicy-create vpn-ikepolicy-1</span><br><span class="line">neutron CLI is deprecated and will be removed in the future. Use openstack CLI instead.</span><br><span class="line">Created a new ikepolicy:</span><br><span class="line">+-------------------------+--------------------------------------+</span><br><span class="line">| Field                   | Value                                |</span><br><span class="line">+-------------------------+--------------------------------------+</span><br><span class="line">| auth_algorithm          | sha1                                 |</span><br><span class="line">| description             |                                      |</span><br><span class="line">| encryption_algorithm    | aes-128                              |</span><br><span class="line">| id                      | 1b6d0d3c-da17-4d61-961b-0b8585bfce21 |</span><br><span class="line">| ike_version             | v1                                   |</span><br><span class="line">| lifetime                | &#123;&quot;units&quot;: &quot;seconds&quot;, &quot;value&quot;: 3600&#125;  |</span><br><span class="line">| name                    | vpn-ikepolicy-1                      |</span><br><span class="line">| pfs                     | group5                               |</span><br><span class="line">| phase1_negotiation_mode | main                                 |</span><br><span class="line">| project_id              | 60ad4059478544e6a4d3d241fdbefa69     |</span><br><span class="line">| tenant_id               | 60ad4059478544e6a4d3d241fdbefa69     |</span><br><span class="line">+-------------------------+--------------------------------------+</span><br><span class="line">[stack@vpnaas devstack]$ neutron vpn-ikepolicy-create vpn-ikepolicy-2</span><br><span class="line">neutron CLI is deprecated and will be removed in the future. Use openstack CLI instead.</span><br><span class="line">Created a new ikepolicy:</span><br><span class="line">+-------------------------+--------------------------------------+</span><br><span class="line">| Field                   | Value                                |</span><br><span class="line">+-------------------------+--------------------------------------+</span><br><span class="line">| auth_algorithm          | sha1                                 |</span><br><span class="line">| description             |                                      |</span><br><span class="line">| encryption_algorithm    | aes-128                              |</span><br><span class="line">| id                      | 9932a063-1df6-4b99-968b-3320a45ff2e8 |</span><br><span class="line">| ike_version             | v1                                   |</span><br><span class="line">| lifetime                | &#123;&quot;units&quot;: &quot;seconds&quot;, &quot;value&quot;: 3600&#125;  |</span><br><span class="line">| name                    | vpn-ikepolicy-2                      |</span><br><span class="line">| pfs                     | group5                               |</span><br><span class="line">| phase1_negotiation_mode | main                                 |</span><br><span class="line">| project_id              | 60ad4059478544e6a4d3d241fdbefa69     |</span><br><span class="line">| tenant_id               | 60ad4059478544e6a4d3d241fdbefa69     |</span><br><span class="line">+-------------------------+--------------------------------------+</span><br><span class="line">[stack@vpnaas devstack]$ neutron vpn-ipsecpolicy-create vpn-ipsecpolicy-1</span><br><span class="line">neutron CLI is deprecated and will be removed in the future. Use openstack CLI instead.</span><br><span class="line">Created a new ipsecpolicy:</span><br><span class="line">+----------------------+--------------------------------------+</span><br><span class="line">| Field                | Value                                |</span><br><span class="line">+----------------------+--------------------------------------+</span><br><span class="line">| auth_algorithm       | sha1                                 |</span><br><span class="line">| description          |                                      |</span><br><span class="line">| encapsulation_mode   | tunnel                               |</span><br><span class="line">| encryption_algorithm | aes-128                              |</span><br><span class="line">| id                   | 73af30cb-e34b-4ca6-9dd8-1ea30b132284 |</span><br><span class="line">| lifetime             | &#123;&quot;units&quot;: &quot;seconds&quot;, &quot;value&quot;: 3600&#125;  |</span><br><span class="line">| name                 | vpn-ipsecpolicy-1                    |</span><br><span class="line">| pfs                  | group5                               |</span><br><span class="line">| project_id           | 60ad4059478544e6a4d3d241fdbefa69     |</span><br><span class="line">| tenant_id            | 60ad4059478544e6a4d3d241fdbefa69     |</span><br><span class="line">| transform_protocol   | esp                                  |</span><br><span class="line">+----------------------+--------------------------------------+</span><br><span class="line">[stack@vpnaas devstack]$ neutron vpn-ipsecpolicy-create vpn-ipsecpolicy-2</span><br><span class="line">neutron CLI is deprecated and will be removed in the future. Use openstack CLI instead.</span><br><span class="line">Created a new ipsecpolicy:</span><br><span class="line">+----------------------+--------------------------------------+</span><br><span class="line">| Field                | Value                                |</span><br><span class="line">+----------------------+--------------------------------------+</span><br><span class="line">| auth_algorithm       | sha1                                 |</span><br><span class="line">| description          |                                      |</span><br><span class="line">| encapsulation_mode   | tunnel                               |</span><br><span class="line">| encryption_algorithm | aes-128                              |</span><br><span class="line">| id                   | c40a7b02-2745-49c5-bfb4-435e4d98bd0a |</span><br><span class="line">| lifetime             | &#123;&quot;units&quot;: &quot;seconds&quot;, &quot;value&quot;: 3600&#125;  |</span><br><span class="line">| name                 | vpn-ipsecpolicy-2                    |</span><br><span class="line">| pfs                  | group5                               |</span><br><span class="line">| project_id           | 60ad4059478544e6a4d3d241fdbefa69     |</span><br><span class="line">| tenant_id            | 60ad4059478544e6a4d3d241fdbefa69     |</span><br><span class="line">| transform_protocol   | esp                                  |</span><br><span class="line">+----------------------+--------------------------------------+</span><br><span class="line">[stack@vpnaas devstack]$ neutron vpn-service-create vpn-router-1 vpn-subnet-1</span><br><span class="line">neutron CLI is deprecated and will be removed in the future. Use openstack CLI instead.</span><br><span class="line">Created a new vpnservice:</span><br><span class="line">+----------------+--------------------------------------+</span><br><span class="line">| Field          | Value                                |</span><br><span class="line">+----------------+--------------------------------------+</span><br><span class="line">| admin_state_up | True                                 |</span><br><span class="line">| description    |                                      |</span><br><span class="line">| external_v4_ip | 172.24.4.14                          |</span><br><span class="line">| external_v6_ip | 2001:db8::b                          |</span><br><span class="line">| flavor_id      |                                      |</span><br><span class="line">| id             | f46567dc-6752-497e-a9bd-97bffcc40ba0 |</span><br><span class="line">| name           |                                      |</span><br><span class="line">| project_id     | 60ad4059478544e6a4d3d241fdbefa69     |</span><br><span class="line">| router_id      | da70042a-aa92-4b81-a00d-630b8da0f3e2 |</span><br><span class="line">| status         | PENDING_CREATE                       |</span><br><span class="line">| subnet_id      | 79645d5f-59db-47b1-a996-b30d2e513140 |</span><br><span class="line">| tenant_id      | 60ad4059478544e6a4d3d241fdbefa69     |</span><br><span class="line">+----------------+--------------------------------------+</span><br><span class="line">[stack@vpnaas devstack]$ neutron vpn-service-create vpn-router-2 vpn-subnet-2</span><br><span class="line">neutron CLI is deprecated and will be removed in the future. Use openstack CLI instead.</span><br><span class="line">Created a new vpnservice:</span><br><span class="line">+----------------+--------------------------------------+</span><br><span class="line">| Field          | Value                                |</span><br><span class="line">+----------------+--------------------------------------+</span><br><span class="line">| admin_state_up | True                                 |</span><br><span class="line">| description    |                                      |</span><br><span class="line">| external_v4_ip | 172.24.4.12                          |</span><br><span class="line">| external_v6_ip | 2001:db8::9                          |</span><br><span class="line">| flavor_id      |                                      |</span><br><span class="line">| id             | 056b7032-d26e-40a7-9e5a-0dd2cdd8e2b7 |</span><br><span class="line">| name           |                                      |</span><br><span class="line">| project_id     | 60ad4059478544e6a4d3d241fdbefa69     |</span><br><span class="line">| router_id      | 9ae51377-14b2-40c0-917e-c93a32ed6b76 |</span><br><span class="line">| status         | PENDING_CREATE                       |</span><br><span class="line">| subnet_id      | 5035c74b-5d70-4d2b-b7cb-b1014a7c2e35 |</span><br><span class="line">| tenant_id      | 60ad4059478544e6a4d3d241fdbefa69     |</span><br><span class="line">+----------------+--------------------------------------+</span><br></pre></td></tr></table></figure></li><li><p>创建ipsec-site-connection</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line">[stack@vpnaas devstack]$ neutron ipsec-site-connection-create --name connectionA --vpnservice-id f46567dc-6752-497e-a9bd-97bffcc40ba0 --ikepolicy-id 1b6d0d3c-da17-4d61-961b-0b8585bfce21 --ipsecpolicy-id 73af30cb-e34b-4ca6-9dd8-1ea30b132284 --peer-address 172.24.4.12 --peer-id 172.24.4.12 --peer-cidr 4.3.2.0/24 --psk lizenghui_key</span><br><span class="line">neutron CLI is deprecated and will be removed in the future. Use openstack CLI instead.</span><br><span class="line">Created a new ipsec_site_connection:</span><br><span class="line">+-------------------+----------------------------------------------------+</span><br><span class="line">| Field             | Value                                              |</span><br><span class="line">+-------------------+----------------------------------------------------+</span><br><span class="line">| admin_state_up    | True                                               |</span><br><span class="line">| auth_mode         | psk                                                |</span><br><span class="line">| description       |                                                    |</span><br><span class="line">| dpd               | &#123;&quot;action&quot;: &quot;hold&quot;, &quot;interval&quot;: 30, &quot;timeout&quot;: 120&#125; |</span><br><span class="line">| id                | ccab8f61-3998-4526-a0be-28dcda09871d               |</span><br><span class="line">| ikepolicy_id      | 1b6d0d3c-da17-4d61-961b-0b8585bfce21               |</span><br><span class="line">| initiator         | bi-directional                                     |</span><br><span class="line">| ipsecpolicy_id    | 73af30cb-e34b-4ca6-9dd8-1ea30b132284               |</span><br><span class="line">| local_ep_group_id |                                                    |</span><br><span class="line">| local_id          |                                                    |</span><br><span class="line">| mtu               | 1500                                               |</span><br><span class="line">| name              | connectionA                                        |</span><br><span class="line">| peer_address      | 172.24.4.12                                        |</span><br><span class="line">| peer_cidrs        | 4.3.2.0/24                                         |</span><br><span class="line">| peer_ep_group_id  |                                                    |</span><br><span class="line">| peer_id           | 172.24.4.12                                        |</span><br><span class="line">| project_id        | 60ad4059478544e6a4d3d241fdbefa69                   |</span><br><span class="line">| psk               | lizenghui_key                                      |</span><br><span class="line">| route_mode        | static                                             |</span><br><span class="line">| status            | PENDING_CREATE                                     |</span><br><span class="line">| tenant_id         | 60ad4059478544e6a4d3d241fdbefa69                   |</span><br><span class="line">| vpnservice_id     | f46567dc-6752-497e-a9bd-97bffcc40ba0               |</span><br><span class="line">+-------------------+----------------------------------------------------+</span><br><span class="line">neutron ipsec-site-connection-create --name connectionB --vpnservice-id 056b7032-d26e-40a7-9e5a-0dd2cdd8e2b7 --ikepolicy-id 9932a063-1df6-4b99-968b-3320a45ff2e8 --ipsecpolicy-id c40a7b02-2745-49c5-bfb4-435e4d98bd0a --peer-address 172.24.4.14 --peer-id 172.24.4.14 --peer-cidr 2.3.4.0/24 --psk lizenghui_key</span><br><span class="line">neutron CLI is deprecated and will be removed in the future. Use openstack CLI instead.</span><br><span class="line">Created a new ipsec_site_connection:</span><br><span class="line">+-------------------+----------------------------------------------------+</span><br><span class="line">| Field             | Value                                              |</span><br><span class="line">+-------------------+----------------------------------------------------+</span><br><span class="line">| admin_state_up    | True                                               |</span><br><span class="line">| auth_mode         | psk                                                |</span><br><span class="line">| description       |                                                    |</span><br><span class="line">| dpd               | &#123;&quot;action&quot;: &quot;hold&quot;, &quot;interval&quot;: 30, &quot;timeout&quot;: 120&#125; |</span><br><span class="line">| id                | b37e51cc-9cdd-45b0-98d8-c13a5fd2f41c               |</span><br><span class="line">| ikepolicy_id      | 9932a063-1df6-4b99-968b-3320a45ff2e8               |</span><br><span class="line">| initiator         | bi-directional                                     |</span><br><span class="line">| ipsecpolicy_id    | c40a7b02-2745-49c5-bfb4-435e4d98bd0a               |</span><br><span class="line">| local_ep_group_id |                                                    |</span><br><span class="line">| local_id          |                                                    |</span><br><span class="line">| mtu               | 1500                                               |</span><br><span class="line">| name              | connectionB                                        |</span><br><span class="line">| peer_address      | 172.24.4.14                                        |</span><br><span class="line">| peer_cidrs        | 2.3.4.0/24                                         |</span><br><span class="line">| peer_ep_group_id  |                                                    |</span><br><span class="line">| peer_id           | 172.24.4.14                                        |</span><br><span class="line">| project_id        | 60ad4059478544e6a4d3d241fdbefa69                   |</span><br><span class="line">| psk               | lizenghui_key                                      |</span><br><span class="line">| route_mode        | static                                             |</span><br><span class="line">| status            | PENDING_CREATE                                     |</span><br><span class="line">| tenant_id         | 60ad4059478544e6a4d3d241fdbefa69                   |</span><br><span class="line">| vpnservice_id     | 056b7032-d26e-40a7-9e5a-0dd2cdd8e2b7               |</span><br><span class="line">+-------------------+----------------------------------------------------+</span><br><span class="line">[stack@vpnaas devstack]$ neutron ipsec-site-connection-list</span><br><span class="line">neutron CLI is deprecated and will be removed in the future. Use openstack CLI instead.</span><br><span class="line">+--------------------------------------+-------------+----------------------------------+--------------+-----------+--------+</span><br><span class="line">| id                                   | name        | tenant_id                        | peer_address | auth_mode | status |</span><br><span class="line">+--------------------------------------+-------------+----------------------------------+--------------+-----------+--------+</span><br><span class="line">| b37e51cc-9cdd-45b0-98d8-c13a5fd2f41c | connectionB | 60ad4059478544e6a4d3d241fdbefa69 | 172.24.4.14  | psk       | ACTIVE |</span><br><span class="line">| ccab8f61-3998-4526-a0be-28dcda09871d | connectionA | 60ad4059478544e6a4d3d241fdbefa69 | 172.24.4.12  | psk       | ACTIVE |</span><br><span class="line">+--------------------------------------+-------------+----------------------------------+--------------+-----------+--------+</span><br></pre></td></tr></table></figure></li><li><p>测试vm1和vm2的连通性，能够ping通，删掉site-connection后，无法ping通</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line">[stack@vpnaas ~]$ openstack router list</span><br><span class="line">+--------------------------------------+--------------+--------+-------+-------------+-------+----------------------------------+</span><br><span class="line">| ID                                   | Name         | Status | State | Distributed | HA    | Project                          |</span><br><span class="line">+--------------------------------------+--------------+--------+-------+-------------+-------+----------------------------------+</span><br><span class="line">| 6aaa82da-d904-468c-b643-220d96cf3841 | router1      | ACTIVE | UP    | False       | False | 3cf6626d7c3a4fc2b43deda4493a38ab |</span><br><span class="line">| 9ae51377-14b2-40c0-917e-c93a32ed6b76 | vpn-router-2 | ACTIVE | UP    | False       | False | 60ad4059478544e6a4d3d241fdbefa69 |</span><br><span class="line">| da70042a-aa92-4b81-a00d-630b8da0f3e2 | vpn-router-1 | ACTIVE | UP    | False       | False | 60ad4059478544e6a4d3d241fdbefa69 |</span><br><span class="line">+--------------------------------------+--------------+--------+-------+-------------+-------+----------------------------------+</span><br><span class="line">[stack@vpnaas ~]$ nova list</span><br><span class="line">+--------------------------------------+------+--------+------------+-------------+------------------------+</span><br><span class="line">| ID                                   | Name | Status | Task State | Power State | Networks               |</span><br><span class="line">+--------------------------------------+------+--------+------------+-------------+------------------------+</span><br><span class="line">| 5d88d5c3-ac9a-4330-bf96-6c953c215bf0 | vm1  | ACTIVE | -          | Running     | vpn-network-1=2.3.4.11 |</span><br><span class="line">| 7971cf68-1b0b-461b-a72c-0d0243928543 | vm2  | ACTIVE | -          | Running     | vpn-network-2=4.3.2.6  |</span><br><span class="line">+--------------------------------------+------+--------+------------+-------------+------------------------+</span><br><span class="line">[stack@vpnaas ~]$ sudo ip netns exec qrouter-da70042a-aa92-4b81-a00d-630b8da0f3e2 ssh cirros@2.3.4.11</span><br><span class="line">The authenticity of host &apos;2.3.4.11 (2.3.4.11)&apos; can&apos;t be established.</span><br><span class="line">RSA key fingerprint is SHA256:quCmsfIs7PjSTxkwF+ZWTgVW6biLCUv2CovYtbMLkek.</span><br><span class="line">RSA key fingerprint is MD5:7c:c7:9e:54:0c:a2:1c:66:2a:18:37:d8:6d:d5:03:20.</span><br><span class="line">Are you sure you want to continue connecting (yes/no)? yes</span><br><span class="line">Warning: Permanently added &apos;2.3.4.11&apos; (RSA) to the list of known hosts.</span><br><span class="line">cirros@2.3.4.11&apos;s password:</span><br><span class="line">$ ping 4.3.2.6</span><br><span class="line">PING 4.3.2.6 (4.3.2.6): 56 data bytes</span><br><span class="line">64 bytes from 4.3.2.6: seq=0 ttl=62 time=11.136 ms</span><br><span class="line">64 bytes from 4.3.2.6: seq=1 ttl=62 time=2.416 ms</span><br><span class="line">64 bytes from 4.3.2.6: seq=2 ttl=62 time=1.563 ms</span><br><span class="line">64 bytes from 4.3.2.6: seq=3 ttl=62 time=1.402 ms</span><br><span class="line">64 bytes from 4.3.2.6: seq=4 ttl=62 time=1.457 ms</span><br><span class="line">64 bytes from 4.3.2.6: seq=5 ttl=62 time=1.745 ms</span><br><span class="line">64 bytes from 4.3.2.6: seq=6 ttl=62 time=1.462 ms</span><br><span class="line">64 bytes from 4.3.2.6: seq=7 ttl=62 time=1.726 ms</span><br><span class="line">^C</span><br><span class="line">--- 4.3.2.6 ping statistics ---</span><br><span class="line">8 packets transmitted, 8 packets received, 0% packet loss</span><br><span class="line">round-trip min/avg/max = 1.402/2.863/11.136 ms</span><br><span class="line">$ exit</span><br><span class="line">Connection to 2.3.4.11 closed.</span><br><span class="line">[stack@vpnaas ~]$ sudo ip netns exec qrouter-9ae51377-14b2-40c0-917e-c93a32ed6b76 ssh cirros@4.3.2.6</span><br><span class="line">The authenticity of host &apos;4.3.2.6 (4.3.2.6)&apos; can&apos;t be established.</span><br><span class="line">RSA key fingerprint is SHA256:iJlXmthJVWjemtbNfCTqWjO7ePihSXrEpD1+ocCNCXI.</span><br><span class="line">RSA key fingerprint is MD5:d8:3b:2e:70:98:41:22:de:04:f3:02:69:08:50:99:06.</span><br><span class="line">Are you sure you want to continue connecting (yes/no)? yes</span><br><span class="line">Warning: Permanently added &apos;4.3.2.6&apos; (RSA) to the list of known hosts.</span><br><span class="line">cirros@4.3.2.6&apos;s password:</span><br><span class="line">$ ping 2.3.4.11</span><br><span class="line">PING 2.3.4.11 (2.3.4.11): 56 data bytes</span><br><span class="line">64 bytes from 2.3.4.11: seq=0 ttl=62 time=5.454 ms</span><br><span class="line">64 bytes from 2.3.4.11: seq=1 ttl=62 time=1.406 ms</span><br><span class="line">64 bytes from 2.3.4.11: seq=2 ttl=62 time=1.584 ms</span><br><span class="line">64 bytes from 2.3.4.11: seq=3 ttl=62 time=1.577 ms</span><br><span class="line">64 bytes from 2.3.4.11: seq=4 ttl=62 time=1.412 ms</span><br><span class="line">64 bytes from 2.3.4.11: seq=5 ttl=62 time=1.335 ms</span><br><span class="line">64 bytes from 2.3.4.11: seq=6 ttl=62 time=2.119 ms</span><br><span class="line">^C</span><br><span class="line">--- 2.3.4.11 ping statistics ---</span><br><span class="line">7 packets transmitted, 7 packets received, 0% packet loss</span><br><span class="line">round-trip min/avg/max = 1.335/2.126/5.454 ms</span><br><span class="line">$ exit</span><br><span class="line">Connection to 4.3.2.6 closed.</span><br><span class="line">[stack@vpnaas ~]$ neutron ipsec-site-connection-list</span><br><span class="line">neutron CLI is deprecated and will be removed in the future. Use openstack CLI instead.</span><br><span class="line">+--------------------------------------+-------------+----------------------------------+--------------+-----------+--------+</span><br><span class="line">| id                                   | name        | tenant_id                        | peer_address | auth_mode | status |</span><br><span class="line">+--------------------------------------+-------------+----------------------------------+--------------+-----------+--------+</span><br><span class="line">| b37e51cc-9cdd-45b0-98d8-c13a5fd2f41c | connectionB | 60ad4059478544e6a4d3d241fdbefa69 | 172.24.4.14  | psk       | ACTIVE |</span><br><span class="line">| ccab8f61-3998-4526-a0be-28dcda09871d | connectionA | 60ad4059478544e6a4d3d241fdbefa69 | 172.24.4.12  | psk       | ACTIVE |</span><br><span class="line">+--------------------------------------+-------------+----------------------------------+--------------+-----------+--------+</span><br><span class="line">[stack@vpnaas ~]$ neutron ipsec-site-connection-list</span><br><span class="line">neutron CLI is deprecated and will be removed in the future. Use openstack CLI instead.</span><br><span class="line">+--------------------------------------+-------------+----------------------------------+--------------+-----------+--------+</span><br><span class="line">| id                                   | name        | tenant_id                        | peer_address | auth_mode | status |</span><br><span class="line">+--------------------------------------+-------------+----------------------------------+--------------+-----------+--------+</span><br><span class="line">| b37e51cc-9cdd-45b0-98d8-c13a5fd2f41c | connectionB | 60ad4059478544e6a4d3d241fdbefa69 | 172.24.4.14  | psk       | ACTIVE |</span><br><span class="line">| ccab8f61-3998-4526-a0be-28dcda09871d | connectionA | 60ad4059478544e6a4d3d241fdbefa69 | 172.24.4.12  | psk       | ACTIVE |</span><br><span class="line">+--------------------------------------+-------------+----------------------------------+--------------+-----------+--------+</span><br><span class="line">[stack@vpnaas ~]$ neutron ipsec-site-connection-delete b37e51cc-9cdd-45b0-98d8-c13a5fd2f41c</span><br><span class="line">neutron CLI is deprecated and will be removed in the future. Use openstack CLI instead.</span><br><span class="line">Deleted ipsec_site_connection(s): b37e51cc-9cdd-45b0-98d8-c13a5fd2f41c</span><br><span class="line">[stack@vpnaas ~]$ neutron ipsec-site-connection-list</span><br><span class="line">neutron CLI is deprecated and will be removed in the future. Use openstack CLI instead.</span><br><span class="line">+--------------------------------------+-------------+----------------------------------+--------------+-----------+--------+</span><br><span class="line">| id                                   | name        | tenant_id                        | peer_address | auth_mode | status |</span><br><span class="line">+--------------------------------------+-------------+----------------------------------+--------------+-----------+--------+</span><br><span class="line">| ccab8f61-3998-4526-a0be-28dcda09871d | connectionA | 60ad4059478544e6a4d3d241fdbefa69 | 172.24.4.12  | psk       | ACTIVE |</span><br><span class="line">+--------------------------------------+-------------+----------------------------------+--------------+-----------+--------+</span><br><span class="line">[stack@vpnaas ~]$ sudo ip netns exec qrouter-da70042a-aa92-4b81-a00d-630b8da0f3e2 ssh cirros@2.3.4.11</span><br><span class="line">cirros@2.3.4.11&apos;s password:</span><br><span class="line">$ ping 4.3.2.6</span><br><span class="line">PING 4.3.2.6 (4.3.2.6): 56 data bytes</span><br><span class="line">^C</span><br><span class="line">--- 4.3.2.6 ping statistics ---</span><br><span class="line">5 packets transmitted, 0 packets received, 100% packet loss</span><br><span class="line">$ exit</span><br><span class="line">Connection to 2.3.4.11 closed.</span><br><span class="line">[stack@vpnaas ~]$ sudo ip netns exec qrouter-9ae51377-14b2-40c0-917e-c93a32ed6b76 ssh cirros@4.3.2.6</span><br><span class="line">cirros@4.3.2.6&apos;s password:</span><br><span class="line">$ ping 2.3.4.11</span><br><span class="line">PING 2.3.4.11 (2.3.4.11): 56 data bytes</span><br><span class="line">^C</span><br><span class="line">--- 2.3.4.11 ping statistics ---</span><br><span class="line">4 packets transmitted, 0 packets received, 100% packet loss</span><br><span class="line">$ exit</span><br><span class="line">Connection to 4.3.2.6 closed.</span><br></pre></td></tr></table></figure></li></ol><h5 id="分析与总结"><a href="#分析与总结" class="headerlink" title="分析与总结"></a>分析与总结</h5><ul><li>CentOS不支持ipsec_duiver类型为strongswan，推荐Fedora/RHEL/CentOS系统使用libreswan。</li><li>Endpoint group测试可参照另一篇文档 <a href="#Endpoint-group功能测试">Endpoint group功能测试</a>。</li><li>如果已经在CentOS上装了strongswan，下载libreswan软件包，修改配置文件配置一下，将strongswan改成libreswan，然后更新neutron数据库，重启neutron相关服务即可。配置过程参照<a href="#使用软件包安装部署">使用软件包安装部署</a>。</li><li>建立ipsec-site-connection连接时双方psk值必须一致匹配。</li></ul><h4 id="VPN-test-for-Ubuntu"><a href="#VPN-test-for-Ubuntu" class="headerlink" title="VPN test for Ubuntu"></a>VPN test for Ubuntu</h4><h5 id="测试环境-1"><a href="#测试环境-1" class="headerlink" title="测试环境"></a>测试环境</h5><p>云主机环境：Ubuntu16.04<br>Devstack版本：master<br>Openstack版本：master(Rocky，Queens)<br>IPsec_driver类型：strongswan<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">stack@vpn-test2:~$ neutron service-provider-list</span><br><span class="line">neutron CLI is deprecated and will be removed in the future. Use openstack CLI instead.</span><br><span class="line">+---------------+-------------+---------+</span><br><span class="line">| service_type  | name        | default |</span><br><span class="line">+---------------+-------------+---------+</span><br><span class="line">| L3_ROUTER_NAT | single_node | False   |</span><br><span class="line">| L3_ROUTER_NAT | ha          | False   |</span><br><span class="line">| L3_ROUTER_NAT | dvrha       | False   |</span><br><span class="line">| VPN           | strongswan  | True    |</span><br><span class="line">| L3_ROUTER_NAT | dvr         | False   |</span><br><span class="line">| VPN           | strongswan  | True    |</span><br><span class="line">+---------------+-------------+---------+</span><br></pre></td></tr></table></figure></p><h5 id="环境配置-1"><a href="#环境配置-1" class="headerlink" title="环境配置"></a>环境配置</h5><p>Devstack目录下local.conf的配置内容如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">[[local|localrc]]</span><br><span class="line"></span><br><span class="line">ADMIN_PASSWORD=secret</span><br><span class="line">DATABASE_PASSWORD=$ADMIN_PASSWORD</span><br><span class="line">RABBIT_PASSWORD=$ADMIN_PASSWORD</span><br><span class="line">SERVICE_PASSWORD=$ADMIN_PASSWORD</span><br><span class="line"></span><br><span class="line">enable_plugin neutron-vpnaas https://git.openstack.org/openstack/neutron-vpnaas</span><br><span class="line">disable_service n-net</span><br><span class="line">enable_service q-svc</span><br><span class="line">enable_service q-agt</span><br><span class="line">enable_service q-dhcp</span><br><span class="line">enable_service q-l3</span><br><span class="line">enable_service q-meta</span><br><span class="line">enable_service tempest</span><br><span class="line"></span><br><span class="line">IPSEC_PACKAGE=&quot;strongswan&quot;</span><br><span class="line"></span><br><span class="line">LOGFILE=$DEST/logs/stack.sh.log</span><br><span class="line">LOGDAYS=2</span><br><span class="line"></span><br><span class="line">SWIFT_HASH=66a3d6b56c1f479c8b4e70ab5c2000f5</span><br><span class="line">SWIFT_REPLICAS=1</span><br></pre></td></tr></table></figure></p><h5 id="测试方案-1"><a href="#测试方案-1" class="headerlink" title="测试方案"></a>测试方案</h5><p>环境是ALL-IN-ONE单节点Openstack，两个不同的vm，各自创建VPN服务，只需要各自VPC对应的VPN-Service里的出口网关IP地址能通即可；可vpn-service里出口IP默认是Router Gateway IP，而只需要将两个vm的external网络设置为同一网段，这样就能达到目标。</p><p>具体步骤:</p><ol><li>为两个vm创建对应的network和所在子网</li><li>创建router，并设置网关在同一段external网络，即”public”</li><li>各自network下创建vm，并创建ikepolicy，ipsecpolicy，和vpn-service</li><li>创建ipsec-site-connection，测试两个vm的连通性</li></ol><p>网络拓扑:<br><img src="https://raw.githubusercontent.com/Sirius21c/sirius21c.github.io/master/images/Neutron-VPNaaS/ubuntu%E6%B5%8B%E8%AF%95%E6%8B%93%E6%89%91.png" alt="ubuntu测试拓扑"></p><h5 id="过程记录-1"><a href="#过程记录-1" class="headerlink" title="过程记录"></a>过程记录</h5><ol><li><p>创建network和相应子网</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br></pre></td><td class="code"><pre><span class="line">stack@vpn-test2:~/devstack$ neutron net-create vpn-network-1</span><br><span class="line">neutron CLI is deprecated and will be removed in the future. Use openstack CLI instead.</span><br><span class="line">Created a new network:</span><br><span class="line">+---------------------------+--------------------------------------+</span><br><span class="line">| Field                     | Value                                |</span><br><span class="line">+---------------------------+--------------------------------------+</span><br><span class="line">| admin_state_up            | True                                 |</span><br><span class="line">| availability_zone_hints   |                                      |</span><br><span class="line">| availability_zones        |                                      |</span><br><span class="line">| created_at                | 2018-07-04T09:02:12Z                 |</span><br><span class="line">| description               |                                      |</span><br><span class="line">| id                        | 8f71bd0e-d26e-405b-8e48-68148fef8ed1 |</span><br><span class="line">| ipv4_address_scope        |                                      |</span><br><span class="line">| ipv6_address_scope        |                                      |</span><br><span class="line">| is_default                | False                                |</span><br><span class="line">| mtu                       | 1450                                 |</span><br><span class="line">| name                      | vpn-network-1                        |</span><br><span class="line">| port_security_enabled     | True                                 |</span><br><span class="line">| project_id                | da717c389f494c3e8e6d32f46142d610     |</span><br><span class="line">| provider:network_type     | vxlan                                |</span><br><span class="line">| provider:physical_network |                                      |</span><br><span class="line">| provider:segmentation_id  | 35                                   |</span><br><span class="line">| revision_number           | 1                                    |</span><br><span class="line">| router:external           | False                                |</span><br><span class="line">| shared                    | False                                |</span><br><span class="line">| status                    | ACTIVE                               |</span><br><span class="line">| subnets                   |                                      |</span><br><span class="line">| tags                      |                                      |</span><br><span class="line">| tenant_id                 | da717c389f494c3e8e6d32f46142d610     |</span><br><span class="line">| updated_at                | 2018-07-04T09:02:12Z                 |</span><br><span class="line">+---------------------------+--------------------------------------+</span><br><span class="line">stack@vpn-test2:~/devstack$ neutron subnet-create --name vpn-subnet-1 vpn-network-1 10.1.0.0/24 --gateway 10.1.0.1</span><br><span class="line">neutron CLI is deprecated and will be removed in the future. Use openstack CLI instead.</span><br><span class="line">Created a new subnet:</span><br><span class="line">+-------------------+--------------------------------------------+</span><br><span class="line">| Field             | Value                                      |</span><br><span class="line">+-------------------+--------------------------------------------+</span><br><span class="line">| allocation_pools  | &#123;&quot;start&quot;: &quot;10.1.0.2&quot;, &quot;end&quot;: &quot;10.1.0.254&quot;&#125; |</span><br><span class="line">| cidr              | 10.1.0.0/24                                |</span><br><span class="line">| created_at        | 2018-07-04T09:03:32Z                       |</span><br><span class="line">| description       |                                            |</span><br><span class="line">| dns_nameservers   |                                            |</span><br><span class="line">| enable_dhcp       | True                                       |</span><br><span class="line">| gateway_ip        | 10.1.0.1                                   |</span><br><span class="line">| host_routes       |                                            |</span><br><span class="line">| id                | 840b87e2-c78c-45cb-92e7-2272ef6e0821       |</span><br><span class="line">| ip_version        | 4                                          |</span><br><span class="line">| ipv6_address_mode |                                            |</span><br><span class="line">| ipv6_ra_mode      |                                            |</span><br><span class="line">| name              | vpn-subnet-1                               |</span><br><span class="line">| network_id        | 8f71bd0e-d26e-405b-8e48-68148fef8ed1       |</span><br><span class="line">| project_id        | da717c389f494c3e8e6d32f46142d610           |</span><br><span class="line">| revision_number   | 0                                          |</span><br><span class="line">| service_types     |                                            |</span><br><span class="line">| subnetpool_id     |                                            |</span><br><span class="line">| tags              |                                            |</span><br><span class="line">| tenant_id         | da717c389f494c3e8e6d32f46142d610           |</span><br><span class="line">| updated_at        | 2018-07-04T09:03:32Z                       |</span><br><span class="line">+-------------------+--------------------------------------------+</span><br><span class="line">stack@vpn-test2:~/devstack$ neutron net-create vpn-network-2</span><br><span class="line">neutron CLI is deprecated and will be removed in the future. Use openstack CLI instead.</span><br><span class="line">Created a new network:</span><br><span class="line">+---------------------------+--------------------------------------+</span><br><span class="line">| Field                     | Value                                |</span><br><span class="line">+---------------------------+--------------------------------------+</span><br><span class="line">| admin_state_up            | True                                 |</span><br><span class="line">| availability_zone_hints   |                                      |</span><br><span class="line">| availability_zones        |                                      |</span><br><span class="line">| created_at                | 2018-07-04T09:03:55Z                 |</span><br><span class="line">| description               |                                      |</span><br><span class="line">| id                        | 137d45d3-820f-409c-aac7-12ef9be66cb2 |</span><br><span class="line">| ipv4_address_scope        |                                      |</span><br><span class="line">| ipv6_address_scope        |                                      |</span><br><span class="line">| is_default                | False                                |</span><br><span class="line">| mtu                       | 1450                                 |</span><br><span class="line">| name                      | vpn-network-2                        |</span><br><span class="line">| port_security_enabled     | True                                 |</span><br><span class="line">| project_id                | da717c389f494c3e8e6d32f46142d610     |</span><br><span class="line">| provider:network_type     | vxlan                                |</span><br><span class="line">| provider:physical_network |                                      |</span><br><span class="line">| provider:segmentation_id  | 87                                   |</span><br><span class="line">| revision_number           | 1                                    |</span><br><span class="line">| router:external           | False                                |</span><br><span class="line">| shared                    | False                                |</span><br><span class="line">| status                    | ACTIVE                               |</span><br><span class="line">| subnets                   |                                      |</span><br><span class="line">| tags                      |                                      |</span><br><span class="line">| tenant_id                 | da717c389f494c3e8e6d32f46142d610     |</span><br><span class="line">| updated_at                | 2018-07-04T09:03:55Z                 |</span><br><span class="line">+---------------------------+--------------------------------------+</span><br><span class="line">stack@vpn-test2:~/devstack$ neutron subnet-create --name vpn-subnet-2 vpn-network-2 10.2.0.0/24 --gateway 10.2.0.1</span><br><span class="line">neutron CLI is deprecated and will be removed in the future. Use openstack CLI instead.</span><br><span class="line">Created a new subnet:</span><br><span class="line">+-------------------+--------------------------------------------+</span><br><span class="line">| Field             | Value                                      |</span><br><span class="line">+-------------------+--------------------------------------------+</span><br><span class="line">| allocation_pools  | &#123;&quot;start&quot;: &quot;10.2.0.2&quot;, &quot;end&quot;: &quot;10.2.0.254&quot;&#125; |</span><br><span class="line">| cidr              | 10.2.0.0/24                                |</span><br><span class="line">| created_at        | 2018-07-04T09:04:39Z                       |</span><br><span class="line">| description       |                                            |</span><br><span class="line">| dns_nameservers   |                                            |</span><br><span class="line">| enable_dhcp       | True                                       |</span><br><span class="line">| gateway_ip        | 10.2.0.1                                   |</span><br><span class="line">| host_routes       |                                            |</span><br><span class="line">| id                | 4a0b78a7-3d04-4b0e-8a43-350a482c4564       |</span><br><span class="line">| ip_version        | 4                                          |</span><br><span class="line">| ipv6_address_mode |                                            |</span><br><span class="line">| ipv6_ra_mode      |                                            |</span><br><span class="line">| name              | vpn-subnet-2                               |</span><br><span class="line">| network_id        | 137d45d3-820f-409c-aac7-12ef9be66cb2       |</span><br><span class="line">| project_id        | da717c389f494c3e8e6d32f46142d610           |</span><br><span class="line">| revision_number   | 0                                          |</span><br><span class="line">| service_types     |                                            |</span><br><span class="line">| subnetpool_id     |                                            |</span><br><span class="line">| tags              |                                            |</span><br><span class="line">| tenant_id         | da717c389f494c3e8e6d32f46142d610           |</span><br><span class="line">| updated_at        | 2018-07-04T09:04:39Z                       |</span><br><span class="line">+-------------------+--------------------------------------------+</span><br></pre></td></tr></table></figure></li><li><p>创建router，设置网关</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">stack@vpn-test2:~/devstack$ neutron router-create vpn-router-1</span><br><span class="line">neutron CLI is deprecated and will be removed in the future. Use openstack CLI instead.</span><br><span class="line">Created a new router:</span><br><span class="line">+-------------------------+--------------------------------------+</span><br><span class="line">| Field                   | Value                                |</span><br><span class="line">+-------------------------+--------------------------------------+</span><br><span class="line">| admin_state_up          | True                                 |</span><br><span class="line">| availability_zone_hints |                                      |</span><br><span class="line">| availability_zones      |                                      |</span><br><span class="line">| created_at              | 2018-07-04T09:10:49Z                 |</span><br><span class="line">| description             |                                      |</span><br><span class="line">| distributed             | False                                |</span><br><span class="line">| external_gateway_info   |                                      |</span><br><span class="line">| flavor_id               |                                      |</span><br><span class="line">| ha                      | False                                |</span><br><span class="line">| id                      | f0906c65-e9b2-447c-ad25-73fecb7fd093 |</span><br><span class="line">| name                    | vpn-router-1                         |</span><br><span class="line">| project_id              | da717c389f494c3e8e6d32f46142d610     |</span><br><span class="line">| revision_number         | 0                                    |</span><br><span class="line">| routes                  |                                      |</span><br><span class="line">| status                  | ACTIVE                               |</span><br><span class="line">| tags                    |                                      |</span><br><span class="line">| tenant_id               | da717c389f494c3e8e6d32f46142d610     |</span><br><span class="line">| updated_at              | 2018-07-04T09:10:49Z                 |</span><br><span class="line">+-------------------------+--------------------------------------+</span><br><span class="line">stack@vpn-test2:~/devstack$ neutron router-interface-add vpn-router-1 vpn-subnet-1</span><br><span class="line">neutron CLI is deprecated and will be removed in the future. Use openstack CLI instead.</span><br><span class="line">Added interface 0fbd2cfa-9e25-4ba2-a5ff-c5949d2bdd70 to router vpn-router-1.</span><br><span class="line">stack@vpn-test2:~/devstack$ neutron router-gateway-set vpn-router-1 public</span><br><span class="line">neutron CLI is deprecated and will be removed in the future. Use openstack CLI instead.</span><br><span class="line">Set gateway for router vpn-router-1</span><br></pre></td></tr></table></figure></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">stack@vpn-test2:~/devstack$ neutron router-create vpn-router-2</span><br><span class="line">neutron CLI is deprecated and will be removed in the future. Use openstack CLI instead.</span><br><span class="line">Created a new router:</span><br><span class="line">+-------------------------+--------------------------------------+</span><br><span class="line">| Field                   | Value                                |</span><br><span class="line">+-------------------------+--------------------------------------+</span><br><span class="line">| admin_state_up          | True                                 |</span><br><span class="line">| availability_zone_hints |                                      |</span><br><span class="line">| availability_zones      |                                      |</span><br><span class="line">| created_at              | 2018-07-04T09:13:56Z                 |</span><br><span class="line">| description             |                                      |</span><br><span class="line">| distributed             | False                                |</span><br><span class="line">| external_gateway_info   |                                      |</span><br><span class="line">| flavor_id               |                                      |</span><br><span class="line">| ha                      | False                                |</span><br><span class="line">| id                      | faf5fb10-8662-4862-bcb4-b3cee3c603be |</span><br><span class="line">| name                    | vpn-router-2                         |</span><br><span class="line">| project_id              | da717c389f494c3e8e6d32f46142d610     |</span><br><span class="line">| revision_number         | 0                                    |</span><br><span class="line">| routes                  |                                      |</span><br><span class="line">| status                  | ACTIVE                               |</span><br><span class="line">| tags                    |                                      |</span><br><span class="line">| tenant_id               | da717c389f494c3e8e6d32f46142d610     |</span><br><span class="line">| updated_at              | 2018-07-04T09:13:56Z                 |</span><br><span class="line">+-------------------------+--------------------------------------+</span><br><span class="line">stack@vpn-test2:~/devstack$ neutron router-interface-add vpn-router-2 vpn-subnet-2</span><br><span class="line">neutron CLI is deprecated and will be removed in the future. Use openstack CLI instead.</span><br><span class="line">Added interface b0d7d178-00d1-44b2-87f9-322a1f5d9a6a to router vpn-router-2.</span><br><span class="line">stack@vpn-test2:~/devstack$ neutron router-gateway-set vpn-router-2 public</span><br><span class="line">neutron CLI is deprecated and will be removed in the future. Use openstack CLI instead.</span><br><span class="line">Set gateway for router vpn-router-2</span><br><span class="line">stack@vpn-test2:~/devstack$</span><br></pre></td></tr></table></figure><ol start="3"><li><p>创建2个虚拟机实例</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><span class="line">stack@vpn-test2:~/devstack$ openstack network list</span><br><span class="line">+--------------------------------------+---------------+----------------------------------------------------------------------------+</span><br><span class="line">| ID                                   | Name          | Subnets                                                                    |</span><br><span class="line">+--------------------------------------+---------------+----------------------------------------------------------------------------+</span><br><span class="line">| 137d45d3-820f-409c-aac7-12ef9be66cb2 | vpn-network-2 | 4a0b78a7-3d04-4b0e-8a43-350a482c4564                                       |</span><br><span class="line">| 4df92675-1843-4b4b-9436-4932856ed8fe | public        | 4d801dd9-da36-4832-ad10-0be3229fea9a, 4fafa6f9-2f43-475d-95b0-5392dc3164fb |</span><br><span class="line">| 8f71bd0e-d26e-405b-8e48-68148fef8ed1 | vpn-network-1 | 840b87e2-c78c-45cb-92e7-2272ef6e0821                                       |</span><br><span class="line">| e95e8eac-c523-4066-a6fd-9ba03f7a9b20 | private       | 20516105-08ab-407a-8c8f-a16f3d2f60c0, bab7c9d8-2065-4dfc-9ff7-1973ebb4b604 |</span><br><span class="line">+--------------------------------------+---------------+----------------------------------------------------------------------------+</span><br><span class="line">stack@vpn-test2:~/devstack$ openstack image list</span><br><span class="line">+--------------------------------------+--------------------------+--------+</span><br><span class="line">| ID                                   | Name                     | Status |</span><br><span class="line">+--------------------------------------+--------------------------+--------+</span><br><span class="line">| 695cf39a-6e94-46ed-9332-158da52361fc | cirros-0.3.5-x86_64-disk | active |</span><br><span class="line">+--------------------------------------+--------------------------+--------+</span><br><span class="line">stack@vpn-test2:~/devstack$ nova boot --flavor 1 --image 695cf39a-6e94-46ed-9332-158da52361fc --nic net-id=8f71bd0e-d26e-405b-8e48-68148fef8ed1 vpn-vm-1</span><br><span class="line">+--------------------------------------+-----------------------------------------------------------------+</span><br><span class="line">| Property                             | Value                                                           |</span><br><span class="line">+--------------------------------------+-----------------------------------------------------------------+</span><br><span class="line">| OS-DCF:diskConfig                    | MANUAL                                                          |</span><br><span class="line">| OS-EXT-AZ:availability_zone          |                                                                 |</span><br><span class="line">| OS-EXT-SRV-ATTR:host                 | -                                                               |</span><br><span class="line">| OS-EXT-SRV-ATTR:hostname             | vpn-vm-1                                                        |</span><br><span class="line">| OS-EXT-SRV-ATTR:hypervisor_hostname  | -                                                               |</span><br><span class="line">| OS-EXT-SRV-ATTR:instance_name        |                                                                 |</span><br><span class="line">| OS-EXT-SRV-ATTR:kernel_id            |                                                                 |</span><br><span class="line">| OS-EXT-SRV-ATTR:launch_index         | 0                                                               |</span><br><span class="line">| OS-EXT-SRV-ATTR:ramdisk_id           |                                                                 |</span><br><span class="line">| OS-EXT-SRV-ATTR:reservation_id       | r-6hmzgn8b                                                      |</span><br><span class="line">| OS-EXT-SRV-ATTR:root_device_name     | -                                                               |</span><br><span class="line">| OS-EXT-SRV-ATTR:user_data            | -                                                               |</span><br><span class="line">| OS-EXT-STS:power_state               | 0                                                               |</span><br><span class="line">| OS-EXT-STS:task_state                | scheduling                                                      |</span><br><span class="line">| OS-EXT-STS:vm_state                  | building                                                        |</span><br><span class="line">| OS-SRV-USG:launched_at               | -                                                               |</span><br><span class="line">| OS-SRV-USG:terminated_at             | -                                                               |</span><br><span class="line">| accessIPv4                           |                                                                 |</span><br><span class="line">| accessIPv6                           |                                                                 |</span><br><span class="line">| adminPass                            | C3eFwVpuG7Su                                                    |</span><br><span class="line">| config_drive                         |                                                                 |</span><br><span class="line">| created                              | 2018-07-04T09:22:12Z                                            |</span><br><span class="line">| description                          | -                                                               |</span><br><span class="line">| flavor:disk                          | 1                                                               |</span><br><span class="line">| flavor:ephemeral                     | 0                                                               |</span><br><span class="line">| flavor:extra_specs                   | &#123;&#125;                                                              |</span><br><span class="line">| flavor:original_name                 | m1.tiny                                                         |</span><br><span class="line">| flavor:ram                           | 512                                                             |</span><br><span class="line">| flavor:swap                          | 0                                                               |</span><br><span class="line">| flavor:vcpus                         | 1                                                               |</span><br><span class="line">| hostId                               |                                                                 |</span><br><span class="line">| host_status                          |                                                                 |</span><br><span class="line">| id                                   | 70b959d7-3bc6-485a-b51c-07711b67757e                            |</span><br><span class="line">| image                                | cirros-0.3.5-x86_64-disk (695cf39a-6e94-46ed-9332-158da52361fc) |</span><br><span class="line">| key_name                             | -                                                               |</span><br><span class="line">| locked                               | False                                                           |</span><br><span class="line">| metadata                             | &#123;&#125;                                                              |</span><br><span class="line">| name                                 | vpn-vm-1                                                        |</span><br><span class="line">| os-extended-volumes:volumes_attached | []                                                              |</span><br><span class="line">| progress                             | 0                                                               |</span><br><span class="line">| security_groups                      | default                                                         |</span><br><span class="line">| status                               | BUILD                                                           |</span><br><span class="line">| tags                                 | []                                                              |</span><br><span class="line">| tenant_id                            | da717c389f494c3e8e6d32f46142d610                                |</span><br><span class="line">| updated                              | 2018-07-04T09:22:12Z                                            |</span><br><span class="line">| user_id                              | bde32ad388334927b25a5c2ff259c78d                                |</span><br><span class="line">+--------------------------------------+-----------------------------------------------------------------+</span><br><span class="line">stack@vpn-test2:~/devstack$ nova boot --flavor 1 --image 695cf39a-6e94-46ed-9332-158da52361fc --nic net-id=137d45d3-820f-409c-aac7-12ef9be66cb2 vpn-vm-2</span><br><span class="line">+--------------------------------------+-----------------------------------------------------------------+</span><br><span class="line">| Property                             | Value                                                           |</span><br><span class="line">+--------------------------------------+-----------------------------------------------------------------+</span><br><span class="line">| OS-DCF:diskConfig                    | MANUAL                                                          |</span><br><span class="line">| OS-EXT-AZ:availability_zone          |                                                                 |</span><br><span class="line">| OS-EXT-SRV-ATTR:host                 | -                                                               |</span><br><span class="line">| OS-EXT-SRV-ATTR:hostname             | vpn-vm-2                                                        |</span><br><span class="line">| OS-EXT-SRV-ATTR:hypervisor_hostname  | -                                                               |</span><br><span class="line">| OS-EXT-SRV-ATTR:instance_name        |                                                                 |</span><br><span class="line">| OS-EXT-SRV-ATTR:kernel_id            |                                                                 |</span><br><span class="line">| OS-EXT-SRV-ATTR:launch_index         | 0                                                               |</span><br><span class="line">| OS-EXT-SRV-ATTR:ramdisk_id           |                                                                 |</span><br><span class="line">| OS-EXT-SRV-ATTR:reservation_id       | r-4geqbiv7                                                      |</span><br><span class="line">| OS-EXT-SRV-ATTR:root_device_name     | -                                                               |</span><br><span class="line">| OS-EXT-SRV-ATTR:user_data            | -                                                               |</span><br><span class="line">| OS-EXT-STS:power_state               | 0                                                               |</span><br><span class="line">| OS-EXT-STS:task_state                | scheduling                                                      |</span><br><span class="line">| OS-EXT-STS:vm_state                  | building                                                        |</span><br><span class="line">| OS-SRV-USG:launched_at               | -                                                               |</span><br><span class="line">| OS-SRV-USG:terminated_at             | -                                                               |</span><br><span class="line">| accessIPv4                           |                                                                 |</span><br><span class="line">| accessIPv6                           |                                                                 |</span><br><span class="line">| adminPass                            | BtUSoUTa375w                                                    |</span><br><span class="line">| config_drive                         |                                                                 |</span><br><span class="line">| created                              | 2018-07-04T09:24:04Z                                            |</span><br><span class="line">| description                          | -                                                               |</span><br><span class="line">| flavor:disk                          | 1                                                               |</span><br><span class="line">| flavor:ephemeral                     | 0                                                               |</span><br><span class="line">| flavor:extra_specs                   | &#123;&#125;                                                              |</span><br><span class="line">| flavor:original_name                 | m1.tiny                                                         |</span><br><span class="line">| flavor:ram                           | 512                                                             |</span><br><span class="line">| flavor:swap                          | 0                                                               |</span><br><span class="line">| flavor:vcpus                         | 1                                                               |</span><br><span class="line">| hostId                               |                                                                 |</span><br><span class="line">| host_status                          |                                                                 |</span><br><span class="line">| id                                   | e8e150dd-4a98-40df-ab35-28b3a791c1be                            |</span><br><span class="line">| image                                | cirros-0.3.5-x86_64-disk (695cf39a-6e94-46ed-9332-158da52361fc) |</span><br><span class="line">| key_name                             | -                                                               |</span><br><span class="line">| locked                               | False                                                           |</span><br><span class="line">| metadata                             | &#123;&#125;                                                              |</span><br><span class="line">| name                                 | vpn-vm-2                                                        |</span><br><span class="line">| os-extended-volumes:volumes_attached | []                                                              |</span><br><span class="line">| progress                             | 0                                                               |</span><br><span class="line">| security_groups                      | default                                                         |</span><br><span class="line">| status                               | BUILD                                                           |</span><br><span class="line">| tags                                 | []                                                              |</span><br><span class="line">| tenant_id                            | da717c389f494c3e8e6d32f46142d610                                |</span><br><span class="line">| updated                              | 2018-07-04T09:24:04Z                                            |</span><br><span class="line">| user_id                              | bde32ad388334927b25a5c2ff259c78d                                |</span><br><span class="line">+--------------------------------------+-----------------------------------------------------------------+</span><br></pre></td></tr></table></figure></li><li><p>创建ikepolicy和ipsecpolicy</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">stack@vpn-test2:~/devstack$ neutron vpn-ikepolicy-create ikepolicy</span><br><span class="line">neutron CLI is deprecated and will be removed in the future. Use openstack CLI instead.</span><br><span class="line">Created a new ikepolicy:</span><br><span class="line">+-------------------------+--------------------------------------+</span><br><span class="line">| Field                   | Value                                |</span><br><span class="line">+-------------------------+--------------------------------------+</span><br><span class="line">| auth_algorithm          | sha1                                 |</span><br><span class="line">| description             |                                      |</span><br><span class="line">| encryption_algorithm    | aes-128                              |</span><br><span class="line">| id                      | 3e5ae910-757f-46d2-b2c2-cb75df0abc39 |</span><br><span class="line">| ike_version             | v1                                   |</span><br><span class="line">| lifetime                | &#123;&quot;units&quot;: &quot;seconds&quot;, &quot;value&quot;: 3600&#125;  |</span><br><span class="line">| name                    | ikepolicy                            |</span><br><span class="line">| pfs                     | group5                               |</span><br><span class="line">| phase1_negotiation_mode | main                                 |</span><br><span class="line">| project_id              | da717c389f494c3e8e6d32f46142d610     |</span><br><span class="line">| tenant_id               | da717c389f494c3e8e6d32f46142d610     |</span><br><span class="line">+-------------------------+--------------------------------------+</span><br><span class="line">stack@vpn-test2:~/devstack$ neutron vpn-ipsecpolicy-create ipsecpolicy</span><br><span class="line">neutron CLI is deprecated and will be removed in the future. Use openstack CLI instead.</span><br><span class="line">Created a new ipsecpolicy:</span><br><span class="line">+----------------------+--------------------------------------+</span><br><span class="line">| Field                | Value                                |</span><br><span class="line">+----------------------+--------------------------------------+</span><br><span class="line">| auth_algorithm       | sha1                                 |</span><br><span class="line">| description          |                                      |</span><br><span class="line">| encapsulation_mode   | tunnel                               |</span><br><span class="line">| encryption_algorithm | aes-128                              |</span><br><span class="line">| id                   | f7c16fe2-a0cb-4494-bcf3-a430d5699c4c |</span><br><span class="line">| lifetime             | &#123;&quot;units&quot;: &quot;seconds&quot;, &quot;value&quot;: 3600&#125;  |</span><br><span class="line">| name                 | ipsecpolicy                          |</span><br><span class="line">| pfs                  | group5                               |</span><br><span class="line">| project_id           | da717c389f494c3e8e6d32f46142d610     |</span><br><span class="line">| tenant_id            | da717c389f494c3e8e6d32f46142d610     |</span><br><span class="line">| transform_protocol   | esp                                  |</span><br><span class="line">+----------------------+--------------------------------------+</span><br></pre></td></tr></table></figure></li><li><p>创建vpn-sercvice，其将用来后面建立site-to-site的连接</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">stack@vpn-test2:~/devstack$ neutron vpn-service-create --name VPNA --description &quot;VPN service A&quot; vpn-router-1 vpn-subnet-1</span><br><span class="line">neutron CLI is deprecated and will be removed in the future. Use openstack CLI instead.</span><br><span class="line">Created a new vpnservice:</span><br><span class="line">+----------------+--------------------------------------+</span><br><span class="line">| Field          | Value                                |</span><br><span class="line">+----------------+--------------------------------------+</span><br><span class="line">| admin_state_up | True                                 |</span><br><span class="line">| description    | VPN service A                        |</span><br><span class="line">| external_v4_ip | 172.24.4.18                          |</span><br><span class="line">| external_v6_ip | 2001:db8::b                          |</span><br><span class="line">| flavor_id      |                                      |</span><br><span class="line">| id             | 6725564d-a056-4c62-8ea8-3dff47a8e563 |</span><br><span class="line">| name           | VPNA                                 |</span><br><span class="line">| project_id     | da717c389f494c3e8e6d32f46142d610     |</span><br><span class="line">| router_id      | f0906c65-e9b2-447c-ad25-73fecb7fd093 |</span><br><span class="line">| status         | PENDING_CREATE                       |</span><br><span class="line">| subnet_id      | 840b87e2-c78c-45cb-92e7-2272ef6e0821 |</span><br><span class="line">| tenant_id      | da717c389f494c3e8e6d32f46142d610     |</span><br><span class="line">+----------------+--------------------------------------+</span><br><span class="line">stack@vpn-test2:~/devstack$ neutron vpn-service-create --name VPNB --description &quot;VPN service B&quot; vpn-router-2 vpn-subnet-2</span><br><span class="line">neutron CLI is deprecated and will be removed in the future. Use openstack CLI instead.</span><br><span class="line">Created a new vpnservice:</span><br><span class="line">+----------------+--------------------------------------+</span><br><span class="line">| Field          | Value                                |</span><br><span class="line">+----------------+--------------------------------------+</span><br><span class="line">| admin_state_up | True                                 |</span><br><span class="line">| description    | VPN service B                        |</span><br><span class="line">| external_v4_ip | 172.24.4.19                          |</span><br><span class="line">| external_v6_ip | 2001:db8::5                          |</span><br><span class="line">| flavor_id      |                                      |</span><br><span class="line">| id             | 4f7e2da2-92eb-4e30-aa7e-94ec66928d69 |</span><br><span class="line">| name           | VPNB                                 |</span><br><span class="line">| project_id     | da717c389f494c3e8e6d32f46142d610     |</span><br><span class="line">| router_id      | faf5fb10-8662-4862-bcb4-b3cee3c603be |</span><br><span class="line">| status         | PENDING_CREATE                       |</span><br><span class="line">| subnet_id      | 4a0b78a7-3d04-4b0e-8a43-350a482c4564 |</span><br><span class="line">| tenant_id      | da717c389f494c3e8e6d32f46142d610     |</span><br><span class="line">+----------------+--------------------------------------+</span><br></pre></td></tr></table></figure></li><li><p>创建ipsec-site-connection</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line">stack@vpn-test2:~/devstack$ neutron vpn-service-list</span><br><span class="line">neutron CLI is deprecated and will be removed in the future. Use openstack CLI instead.</span><br><span class="line">+--------------------------------------+------+----------------------------------+--------------------------------------+----------------+</span><br><span class="line">| id                                   | name | tenant_id                        | router_id                            | status         |</span><br><span class="line">+--------------------------------------+------+----------------------------------+--------------------------------------+----------------+</span><br><span class="line">| 4f7e2da2-92eb-4e30-aa7e-94ec66928d69 | VPNB | da717c389f494c3e8e6d32f46142d610 | faf5fb10-8662-4862-bcb4-b3cee3c603be | PENDING_CREATE |</span><br><span class="line">| 6725564d-a056-4c62-8ea8-3dff47a8e563 | VPNA | da717c389f494c3e8e6d32f46142d610 | f0906c65-e9b2-447c-ad25-73fecb7fd093 | PENDING_CREATE |</span><br><span class="line">+--------------------------------------+------+----------------------------------+--------------------------------------+----------------+</span><br><span class="line">stack@vpn-test2:~/devstack$ neutron vpn-ikepolicy-list</span><br><span class="line">neutron CLI is deprecated and will be removed in the future. Use openstack CLI instead.</span><br><span class="line">+--------------------------------------+-----------+----------------------------------+----------------+----------------------+-------------+--------+</span><br><span class="line">| id                                   | name      | tenant_id                        | auth_algorithm | encryption_algorithm | ike_version | pfs    |</span><br><span class="line">+--------------------------------------+-----------+----------------------------------+----------------+----------------------+-------------+--------+</span><br><span class="line">| 3e5ae910-757f-46d2-b2c2-cb75df0abc39 | ikepolicy | da717c389f494c3e8e6d32f46142d610 | sha1           | aes-128              | v1          | group5 |</span><br><span class="line">+--------------------------------------+-----------+----------------------------------+----------------+----------------------+-------------+--------+</span><br><span class="line">stack@vpn-test2:~/devstack$ neutron vpn-ipsecpolicy-list</span><br><span class="line">neutron CLI is deprecated and will be removed in the future. Use openstack CLI instead.</span><br><span class="line">+--------------------------------------+-------------+----------------------------------+----------------+----------------------+--------+</span><br><span class="line">| id                                   | name        | tenant_id                        | auth_algorithm | encryption_algorithm | pfs    |</span><br><span class="line">+--------------------------------------+-------------+----------------------------------+----------------+----------------------+--------+</span><br><span class="line">| f7c16fe2-a0cb-4494-bcf3-a430d5699c4c | ipsecpolicy | da717c389f494c3e8e6d32f46142d610 | sha1           | aes-128              | group5 |</span><br><span class="line">+--------------------------------------+-------------+----------------------------------+----------------+----------------------+--------+</span><br><span class="line">stack@vpn-test2:~/devstack$ neutron ipsec-site-connection-create --name VPNConnectionA --vpnservice-id 6725564d-a056-4c62-8ea8-3dff47a8e563 --ikepolicy-id 3e5ae910-757f-46d2-b2c2-cb75df0abc39 --ipsecpolicy-id f7c16fe2-a0cb-4494-bcf3-a430d5699c4c --peer-address 172.24.4.19 --peer-id 172.24.4.19 --peer-cidr 10.2.0.0/24 --psk lizenghui</span><br><span class="line">neutron CLI is deprecated and will be removed in the future. Use openstack CLI instead.</span><br><span class="line">Created a new ipsec_site_connection:</span><br><span class="line">+-------------------+----------------------------------------------------+</span><br><span class="line">| Field             | Value                                              |</span><br><span class="line">+-------------------+----------------------------------------------------+</span><br><span class="line">| admin_state_up    | True                                               |</span><br><span class="line">| auth_mode         | psk                                                |</span><br><span class="line">| description       |                                                    |</span><br><span class="line">| dpd               | &#123;&quot;action&quot;: &quot;hold&quot;, &quot;interval&quot;: 30, &quot;timeout&quot;: 120&#125; |</span><br><span class="line">| id                | ce29fb78-6b5c-4e2c-8fa8-6c7a8662a14c               |</span><br><span class="line">| ikepolicy_id      | 3e5ae910-757f-46d2-b2c2-cb75df0abc39               |</span><br><span class="line">| initiator         | bi-directional                                     |</span><br><span class="line">| ipsecpolicy_id    | f7c16fe2-a0cb-4494-bcf3-a430d5699c4c               |</span><br><span class="line">| local_ep_group_id |                                                    |</span><br><span class="line">| local_id          |                                                    |</span><br><span class="line">| mtu               | 1500                                               |</span><br><span class="line">| name              | VPNConnectionA                                     |</span><br><span class="line">| peer_address      | 172.24.4.19                                        |</span><br><span class="line">| peer_cidrs        | 10.2.0.0/24                                        |</span><br><span class="line">| peer_ep_group_id  |                                                    |</span><br><span class="line">| peer_id           | 172.24.4.19                                        |</span><br><span class="line">| project_id        | da717c389f494c3e8e6d32f46142d610                   |</span><br><span class="line">| psk               | lizenghui                                          |</span><br><span class="line">| route_mode        | static                                             |</span><br><span class="line">| status            | PENDING_CREATE                                     |</span><br><span class="line">| tenant_id         | da717c389f494c3e8e6d32f46142d610                   |</span><br><span class="line">| vpnservice_id     | 6725564d-a056-4c62-8ea8-3dff47a8e563               |</span><br><span class="line">+-------------------+----------------------------------------------------+</span><br><span class="line">stack@vpn-test2:~/devstack$ neutron ipsec-site-connection-create --name VPNConnectionB --vpnservice-id 4f7e2da2-92eb-4e30-aa7e-94ec66928d69 --ikepolicy-id 3e5ae910-757f-46d2-b2c2-cb75df0abc39 --ipsecpolicy-id f7c16fe2-a0cb-4494-bcf3-a430d5699c4c --peer-address 172.24.4.18 --peer-id 172.24.4.18 --peer-cidr 10.1.0.0/24 --psk lizenghui</span><br><span class="line">neutron CLI is deprecated and will be removed in the future. Use openstack CLI instead.</span><br><span class="line">Created a new ipsec_site_connection:</span><br><span class="line">+-------------------+----------------------------------------------------+</span><br><span class="line">| Field             | Value                                              |</span><br><span class="line">+-------------------+----------------------------------------------------+</span><br><span class="line">| admin_state_up    | True                                               |</span><br><span class="line">| auth_mode         | psk                                                |</span><br><span class="line">| description       |                                                    |</span><br><span class="line">| dpd               | &#123;&quot;action&quot;: &quot;hold&quot;, &quot;interval&quot;: 30, &quot;timeout&quot;: 120&#125; |</span><br><span class="line">| id                | 033a5fe4-7505-474c-bb83-4f4f78b63e7a               |</span><br><span class="line">| ikepolicy_id      | 3e5ae910-757f-46d2-b2c2-cb75df0abc39               |</span><br><span class="line">| initiator         | bi-directional                                     |</span><br><span class="line">| ipsecpolicy_id    | f7c16fe2-a0cb-4494-bcf3-a430d5699c4c               |</span><br><span class="line">| local_ep_group_id |                                                    |</span><br><span class="line">| local_id          |                                                    |</span><br><span class="line">| mtu               | 1500                                               |</span><br><span class="line">| name              | VPNConnectionB                                     |</span><br><span class="line">| peer_address      | 172.24.4.18                                        |</span><br><span class="line">| peer_cidrs        | 10.1.0.0/24                                        |</span><br><span class="line">| peer_ep_group_id  |                                                    |</span><br><span class="line">| peer_id           | 172.24.4.18                                        |</span><br><span class="line">| project_id        | da717c389f494c3e8e6d32f46142d610                   |</span><br><span class="line">| psk               | lizenghui                                          |</span><br><span class="line">| route_mode        | static                                             |</span><br><span class="line">| status            | PENDING_CREATE                                     |</span><br><span class="line">| tenant_id         | da717c389f494c3e8e6d32f46142d610                   |</span><br><span class="line">| vpnservice_id     | 4f7e2da2-92eb-4e30-aa7e-94ec66928d69               |</span><br><span class="line">+-------------------+----------------------------------------------------+</span><br></pre></td></tr></table></figure></li><li><p>查看连接状态，如果立即查看status为PENDING_CREATE，则等待30~50秒后再次查看，即可看到状态变为ACTIVE。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">stack@vpn-test2:~/devstack$ neutron ipsec-site-connection-list</span><br><span class="line">neutron CLI is deprecated and will be removed in the future. Use openstack CLI instead.</span><br><span class="line">+--------------------------------------+----------------+----------------------------------+--------------+-----------+----------------+</span><br><span class="line">| id                                   | name           | tenant_id                        | peer_address | auth_mode | status         |</span><br><span class="line">+--------------------------------------+----------------+----------------------------------+--------------+-----------+----------------+</span><br><span class="line">| 033a5fe4-7505-474c-bb83-4f4f78b63e7a | VPNConnectionB | da717c389f494c3e8e6d32f46142d610 | 172.24.4.18  | psk       | PENDING_CREATE |</span><br><span class="line">| ce29fb78-6b5c-4e2c-8fa8-6c7a8662a14c | VPNConnectionA | da717c389f494c3e8e6d32f46142d610 | 172.24.4.19  | psk       | PENDING_CREATE |</span><br><span class="line">+--------------------------------------+----------------+----------------------------------+--------------+-----------+----------------+</span><br><span class="line">stack@vpn-test2:~/devstack$ neutron ipsec-site-connection-list</span><br><span class="line">neutron CLI is deprecated and will be removed in the future. Use openstack CLI instead.</span><br><span class="line">+--------------------------------------+----------------+----------------------------------+--------------+-----------+--------+</span><br><span class="line">| id                                   | name           | tenant_id                        | peer_address | auth_mode | status |</span><br><span class="line">+--------------------------------------+----------------+----------------------------------+--------------+-----------+--------+</span><br><span class="line">| 033a5fe4-7505-474c-bb83-4f4f78b63e7a | VPNConnectionB | da717c389f494c3e8e6d32f46142d610 | 172.24.4.18  | psk       | ACTIVE |</span><br><span class="line">| ce29fb78-6b5c-4e2c-8fa8-6c7a8662a14c | VPNConnectionA | da717c389f494c3e8e6d32f46142d610 | 172.24.4.19  | psk       | ACTIVE |</span><br><span class="line">+--------------------------------------+----------------+----------------------------------+--------------+-----------+--------+</span><br></pre></td></tr></table></figure></li><li><p>从vpn-router-2所在的namespace，看看是否能够ping通vm-1，同样查看在vpn-router-1所在namespace是否可以ping通vm-2,发现可以相互ping通。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">stack@vpn-test2:~/devstack$ nova list</span><br><span class="line">+--------------------------------------+----------+--------+------------+-------------+-------------------------+</span><br><span class="line">| ID                                   | Name     | Status | Task State | Power State | Networks                |</span><br><span class="line">+--------------------------------------+----------+--------+------------+-------------+-------------------------+</span><br><span class="line">| 70b959d7-3bc6-485a-b51c-07711b67757e | vpn-vm-1 | ACTIVE | -          | Running     | vpn-network-1=10.1.0.12 |</span><br><span class="line">| e8e150dd-4a98-40df-ab35-28b3a791c1be | vpn-vm-2 | ACTIVE | -          | Running     | vpn-network-2=10.2.0.3  |</span><br><span class="line">+--------------------------------------+----------+--------+------------+-------------+-------------------------+</span><br><span class="line">stack@vpn-test2:~/devstack$ openstack router list</span><br><span class="line">+--------------------------------------+--------------+--------+-------+-------------+-------+----------------------------------+</span><br><span class="line">| ID                                   | Name         | Status | State | Distributed | HA    | Project                          |</span><br><span class="line">+--------------------------------------+--------------+--------+-------+-------------+-------+----------------------------------+</span><br><span class="line">| bdcb18cf-4b83-47df-b0d5-b424eaeda1a6 | router1      | ACTIVE | UP    | False       | False | 9885c5369b824e81b01d0e5444f379f7 |</span><br><span class="line">| f0906c65-e9b2-447c-ad25-73fecb7fd093 | vpn-router-1 | ACTIVE | UP    | False       | False | da717c389f494c3e8e6d32f46142d610 |</span><br><span class="line">| faf5fb10-8662-4862-bcb4-b3cee3c603be | vpn-router-2 | ACTIVE | UP    | False       | False | da717c389f494c3e8e6d32f46142d610 |</span><br><span class="line">+--------------------------------------+--------------+--------+-------+-------------+-------+----------------------------------+</span><br><span class="line">sudo ip netns exec qrouter-faf5fb10-8662-4862-bcb4-b3cee3c603be ip a</span><br><span class="line">1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1</span><br><span class="line">    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00</span><br><span class="line">    inet 127.0.0.1/8 scope host lo</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 ::1/128 scope host</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">17: qr-b0d7d178-00: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1450 qdisc noqueue state UNKNOWN group default qlen 1</span><br><span class="line">    link/ether fa:16:3e:a5:29:f9 brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    inet 10.2.0.1/24 brd 10.2.0.255 scope global qr-b0d7d178-00</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 fe80::f816:3eff:fea5:29f9/64 scope link</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">18: qg-16b32471-b8: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc noqueue state UNKNOWN group default qlen 1</span><br><span class="line">    link/ether fa:16:3e:bd:3e:f1 brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    inet 172.24.4.19/24 brd 172.24.4.255 scope global qg-16b32471-b8</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 2001:db8::5/64 scope global</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 fe80::f816:3eff:febd:3ef1/64 scope link</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">stack@vpn-test2:~/devstack$ sudo ip netns exec qrouter-faf5fb10-8662-4862-bcb4-b3cee3c603be  ping 10.1.0.12</span><br><span class="line">PING 10.1.0.12 (10.1.0.12) 56(84) bytes of data.</span><br><span class="line">64 bytes from 10.1.0.12: icmp_seq=1 ttl=63 time=3.20 ms</span><br><span class="line">64 bytes from 10.1.0.12: icmp_seq=2 ttl=63 time=0.812 ms</span><br><span class="line">64 bytes from 10.1.0.12: icmp_seq=3 ttl=63 time=0.648 ms</span><br><span class="line">64 bytes from 10.1.0.12: icmp_seq=4 ttl=63 time=0.722 ms</span><br><span class="line">64 bytes from 10.1.0.12: icmp_seq=5 ttl=63 time=0.801 ms</span><br><span class="line">64 bytes from 10.1.0.12: icmp_seq=6 ttl=63 time=0.657 ms</span><br><span class="line">64 bytes from 10.1.0.12: icmp_seq=7 ttl=63 time=0.760 ms</span><br><span class="line">64 bytes from 10.1.0.12: icmp_seq=8 ttl=63 time=0.633 ms</span><br><span class="line">64 bytes from 10.1.0.12: icmp_seq=9 ttl=63 time=0.612 ms</span><br><span class="line">64 bytes from 10.1.0.12: icmp_seq=10 ttl=63 time=0.635 ms</span><br><span class="line">64 bytes from 10.1.0.12: icmp_seq=11 ttl=63 time=0.697 ms</span><br><span class="line">stack@vpn-test2:~$ sudo ip netns exec qrouter-f0906c65-e9b2-447c-ad25-73fecb7fd093 ping 10.2.0.3</span><br><span class="line">PING 10.2.0.3 (10.2.0.3) 56(84) bytes of data.</span><br><span class="line">64 bytes from 10.2.0.3: icmp_seq=1 ttl=63 time=5.14 ms</span><br><span class="line">64 bytes from 10.2.0.3: icmp_seq=2 ttl=63 time=0.875 ms</span><br><span class="line">64 bytes from 10.2.0.3: icmp_seq=3 ttl=63 time=0.973 ms</span><br><span class="line">64 bytes from 10.2.0.3: icmp_seq=4 ttl=63 time=0.819 ms</span><br><span class="line">64 bytes from 10.2.0.3: icmp_seq=5 ttl=63 time=0.630 ms</span><br><span class="line">64 bytes from 10.2.0.3: icmp_seq=6 ttl=63 time=0.755 ms</span><br><span class="line">64 bytes from 10.2.0.3: icmp_seq=7 ttl=63 time=0.643 ms</span><br><span class="line">64 bytes from 10.2.0.3: icmp_seq=8 ttl=63 time=0.563 ms</span><br><span class="line">64 bytes from 10.2.0.3: icmp_seq=9 ttl=63 time=0.623 ms</span><br><span class="line">64 bytes from 10.2.0.3: icmp_seq=10 ttl=63 time=0.745 ms</span><br></pre></td></tr></table></figure></li><li><p>能够Ping通，说明vpn连接已经建立，在qr，qg口抓包，确认ipsec流量，可以看到ESP加密包，下面是在路由器vpn-router-2上的qg口上的数据包</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">stack@vpn-test2:~/devstack$ sudo ip netns exec qrouter-faf5fb10-8662-4862-bcb4-b3cee3c603be tcpdump -i qg-16b32471-b8 -v</span><br><span class="line">tcpdump: listening on qg-16b32471-b8, link-type EN10MB (Ethernet), capture size 262144 bytes</span><br><span class="line">19:48:00.826393 IP (tos 0x0, ttl 64, id 59316, offset 0, flags [DF], proto ESP (50), length 152)</span><br><span class="line">    172.24.4.19 &gt; 172.24.4.18: ESP(spi=0xc3330682,seq=0x120), length 132</span><br><span class="line">19:48:00.827128 IP (tos 0x0, ttl 64, id 18957, offset 0, flags [DF], proto UDP (17), length 70)</span><br><span class="line">    172.24.4.19.59831 &gt; host-192-168-1-4.openstacklocal.domain: 65426+ PTR? 18.4.24.172.in-addr.arpa. (42)</span><br><span class="line">19:48:00.828650 IP (tos 0x0, ttl 63, id 26517, offset 0, flags [DF], proto UDP (17), length 70)</span><br><span class="line">    host-192-168-1-4.openstacklocal.domain &gt; 172.24.4.19.59831: 65426 NXDomain 0/0/0 (42)</span><br><span class="line">19:48:00.828854 IP (tos 0x0, ttl 64, id 18958, offset 0, flags [DF], proto UDP (17), length 70)</span><br><span class="line">    172.24.4.19.44962 &gt; host-192-168-1-4.openstacklocal.domain: 9844+ PTR? 19.4.24.172.in-addr.arpa. (42)</span><br><span class="line">19:48:00.828902 IP (tos 0x0, ttl 64, id 27632, offset 0, flags [none], proto ESP (50), length 152)</span><br><span class="line">    172.24.4.18 &gt; 172.24.4.19: ESP(spi=0xc2eca09d,seq=0x120), length 132</span><br><span class="line">19:48:00.828902 IP (tos 0x0, ttl 63, id 9967, offset 0, flags [none], proto ICMP (1), length 84)</span><br><span class="line">    10.1.0.12 &gt; 10.2.0.1: ICMP echo reply, id 8568, seq 1, length 64</span><br><span class="line">19:48:00.829140 IP (tos 0x0, ttl 63, id 26518, offset 0, flags [DF], proto UDP (17), length 70)</span><br><span class="line">    host-192-168-1-4.openstacklocal.domain &gt; 172.24.4.19.44962: 9844 NXDomain 0/0/0 (42)</span><br><span class="line">19:48:00.829341 IP (tos 0x0, ttl 64, id 18959, offset 0, flags [DF], proto UDP (17), length 70)</span><br><span class="line">    172.24.4.19.59801 &gt; host-192-168-1-4.openstacklocal.domain: 17454+ PTR? 4.1.168.192.in-addr.arpa. (42)</span><br><span class="line">19:48:00.829841 IP (tos 0x0, ttl 64, id 18960, offset 0, flags [DF], proto UDP (17), length 67)</span><br><span class="line">    172.24.4.19.48978 &gt; host-192-168-1-4.openstacklocal.domain: 40542+ PTR? 1.0.2.10.in-addr.arpa. (39)</span><br><span class="line">19:48:00.830112 IP (tos 0x0, ttl 63, id 26520, offset 0, flags [DF], proto UDP (17), length 67)</span><br><span class="line">    host-192-168-1-4.openstacklocal.domain &gt; 172.24.4.19.48978: 40542 NXDomain 0/0/0 (39)</span><br><span class="line">19:48:00.830320 IP (tos 0x0, ttl 64, id 18961, offset 0, flags [DF], proto UDP (17), length 68)</span><br><span class="line">    172.24.4.19.51925 &gt; host-192-168-1-4.openstacklocal.domain: 56871+ PTR? 12.0.1.10.in-addr.arpa. (40)</span><br><span class="line">19:48:00.857281 IP (tos 0x0, ttl 63, id 26542, offset 0, flags [DF], proto UDP (17), length 103)</span><br><span class="line">    host-192-168-1-4.openstacklocal.domain &gt; 172.24.4.19.51925: 56871 NXDomain* 0/1/0 (75)</span><br><span class="line">19:48:01.828091 IP (tos 0x0, ttl 64, id 59451, offset 0, flags [DF], proto ESP (50), length 152)</span><br><span class="line">    172.24.4.19 &gt; 172.24.4.18: ESP(spi=0xc3330682,seq=0x121), length 132</span><br><span class="line">19:48:01.828958 IP (tos 0x0, ttl 64, id 27729, offset 0, flags [none], proto ESP (50), length 152)</span><br><span class="line">    172.24.4.18 &gt; 172.24.4.19: ESP(spi=0xc2eca09d,seq=0x121), length 132</span><br><span class="line">19:48:01.828958 IP (tos 0x0, ttl 63, id 10013, offset 0, flags [none], proto ICMP (1), length 84)</span><br><span class="line">    10.1.0.12 &gt; 10.2.0.1: ICMP echo reply, id 8568, seq 2, length 64</span><br><span class="line">19:48:02.829143 IP (tos 0x0, ttl 64, id 59462, offset 0, flags [DF], proto ESP (50), length 152)</span><br><span class="line">    172.24.4.19 &gt; 172.24.4.18: ESP(spi=0xc3330682,seq=0x122), length 132</span><br><span class="line">19:48:02.829728 IP (tos 0x0, ttl 64, id 27978, offset 0, flags [none], proto ESP (50), length 152)</span><br><span class="line">    172.24.4.18 &gt; 172.24.4.19: ESP(spi=0xc2eca09d,seq=0x122), length 132</span><br><span class="line">19:48:02.829728 IP (tos 0x0, ttl 63, id 10207, offset 0, flags [none], proto ICMP (1), length 84)</span><br><span class="line">    10.1.0.12 &gt; 10.2.0.1: ICMP echo reply, id 8568, seq 3, length 64</span><br><span class="line">19:48:03.829327 IP (tos 0x0, ttl 64, id 59603, offset 0, flags [DF], proto ESP (50), length 152)</span><br><span class="line">    172.24.4.19 &gt; 172.24.4.18: ESP(spi=0xc3330682,seq=0x123), length 132</span><br><span class="line">19:48:03.830344 IP (tos 0x0, ttl 64, id 28220, offset 0, flags [none], proto ESP (50), length 152)</span><br><span class="line">    172.24.4.18 &gt; 172.24.4.19: ESP(spi=0xc2eca09d,seq=0x123), length 132</span><br><span class="line">19:48:03.830344 IP (tos 0x0, ttl 63, id 10261, offset 0, flags [none], proto ICMP (1), length 84)</span><br><span class="line">    10.1.0.12 &gt; 10.2.0.1: ICMP echo reply, id 8568, seq 4, length 64</span><br><span class="line">19:48:04.830575 IP (tos 0x0, ttl 64, id 59761, offset 0, flags [DF], proto ESP (50), length 152)</span><br><span class="line">    172.24.4.19 &gt; 172.24.4.18: ESP(spi=0xc3330682,seq=0x124), length 132</span><br><span class="line">19:48:04.831213 IP (tos 0x0, ttl 64, id 28233, offset 0, flags [none], proto ESP (50), length 152)</span><br><span class="line">    172.24.4.18 &gt; 172.24.4.19: ESP(spi=0xc2eca09d,seq=0x124), length 132</span><br><span class="line">19:48:04.831213 IP (tos 0x0, ttl 63, id 10436, offset 0, flags [none], proto ICMP (1), length 84)</span><br><span class="line">    10.1.0.12 &gt; 10.2.0.1: ICMP echo reply, id 8568, seq 5, length 64</span><br><span class="line">19:48:05.829216 ARP, Ethernet (len 6), IPv4 (len 4), Request who-has 172.24.4.10 tell 172.24.4.19, length 28</span><br><span class="line">19:48:05.829479 ARP, Ethernet (len 6), IPv4 (len 4), Request who-has 172.24.4.19 tell 172.24.4.10, length 28</span><br><span class="line">19:48:05.829492 ARP, Ethernet (len 6), IPv4 (len 4), Reply 172.24.4.19 is-at fa:16:3e:bd:3e:f1 (oui Unknown), length 28</span><br><span class="line">19:48:05.829495 IP (tos 0x0, ttl 64, id 19157, offset 0, flags [DF], proto UDP (17), length 70)</span><br><span class="line">    172.24.4.19.36595 &gt; host-192-168-1-4.openstacklocal.domain: 39747+ PTR? 10.4.24.172.in-addr.arpa. (42)</span><br><span class="line">19:48:05.829570 ARP, Ethernet (len 6), IPv4 (len 4), Reply 172.24.4.10 is-at 26:8b:2c:c4:4f:48 (oui Unknown), length 28</span><br><span class="line">19:48:05.829618 IP (tos 0x0, ttl 64, id 60003, offset 0, flags [DF], proto ESP (50), length 152)</span><br><span class="line">    172.24.4.19 &gt; 172.24.4.18: ESP(spi=0xc3330682,seq=0x125), length 132</span><br></pre></td></tr></table></figure></li><li><p>查看两个路由器的路由表信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">stack@vpn-test2:~$ sudo ip netns exec qrouter-f0906c65-e9b2-447c-ad25-73fecb7fd093 ip route list</span><br><span class="line">default via 172.24.4.10 dev qg-472d97a3-80</span><br><span class="line">10.1.0.0/24 dev qr-0fbd2cfa-9e  proto kernel  scope link  src 10.1.0.1</span><br><span class="line">172.24.4.0/24 dev qg-472d97a3-80  proto kernel  scope link  src 172.24.4.18</span><br><span class="line">stack@vpn-test2:~$ sudo ip netns exec qrouter-faf5fb10-8662-4862-bcb4-b3cee3c603be ip route list</span><br><span class="line">default via 172.24.4.10 dev qg-16b32471-b8</span><br><span class="line">10.2.0.0/24 dev qr-b0d7d178-00  proto kernel  scope link  src 10.2.0.1</span><br><span class="line">172.24.4.0/24 dev qg-16b32471-b8  proto kernel  scope link  src 172.24.4.19</span><br></pre></td></tr></table></figure></li><li><p>删掉vpn服务连接实例后，看看路由表变动情况以及还能否ping通，发现不能ping通了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">stack@vpn-test2:~$ neutron vpn-service-list</span><br><span class="line">neutron CLI is deprecated and will be removed in the future. Use openstack CLI instead.</span><br><span class="line">+--------------------------------------+------+----------------------------------+--------------------------------------+--------+</span><br><span class="line">| id                                   | name | tenant_id                        | router_id                            | status |</span><br><span class="line">+--------------------------------------+------+----------------------------------+--------------------------------------+--------+</span><br><span class="line">| 4f7e2da2-92eb-4e30-aa7e-94ec66928d69 | VPNB | da717c389f494c3e8e6d32f46142d610 | faf5fb10-8662-4862-bcb4-b3cee3c603be | ACTIVE |</span><br><span class="line">| 6725564d-a056-4c62-8ea8-3dff47a8e563 | VPNA | da717c389f494c3e8e6d32f46142d610 | f0906c65-e9b2-447c-ad25-73fecb7fd093 | ACTIVE |</span><br><span class="line">+--------------------------------------+------+----------------------------------+--------------------------------------+--------+</span><br><span class="line">stack@vpn-test2:~$ neutron ipsec-site-connection-list</span><br><span class="line">neutron CLI is deprecated and will be removed in the future. Use openstack CLI instead.</span><br><span class="line">+--------------------------------------+----------------+----------------------------------+--------------+-----------+--------+</span><br><span class="line">| id                                   | name           | tenant_id                        | peer_address | auth_mode | status |</span><br><span class="line">+--------------------------------------+----------------+----------------------------------+--------------+-----------+--------+</span><br><span class="line">| 033a5fe4-7505-474c-bb83-4f4f78b63e7a | VPNConnectionB | da717c389f494c3e8e6d32f46142d610 | 172.24.4.18  | psk       | ACTIVE |</span><br><span class="line">| ce29fb78-6b5c-4e2c-8fa8-6c7a8662a14c | VPNConnectionA | da717c389f494c3e8e6d32f46142d610 | 172.24.4.19  | psk       | ACTIVE |</span><br><span class="line">+--------------------------------------+----------------+----------------------------------+--------------+-----------+--------+</span><br><span class="line">stack@vpn-test2:~$ neutron ipsec-site-connection-delete ce29fb78-6b5c-4e2c-8fa8-6c7a8662a14c</span><br><span class="line">neutron CLI is deprecated and will be removed in the future. Use openstack CLI instead.</span><br><span class="line">Deleted ipsec_site_connection(s): ce29fb78-6b5c-4e2c-8fa8-6c7a8662a14c</span><br><span class="line">stack@vpn-test2:~$ sudo ip netns exec qrouter-f0906c65-e9b2-447c-ad25-73fecb7fd093 ping 10.2.0.3</span><br><span class="line">PING 10.2.0.3 (10.2.0.3) 56(84) bytes of data.</span><br><span class="line">^C</span><br><span class="line">--- 10.2.0.3 ping statistics ---</span><br><span class="line">376 packets transmitted, 0 received, 100% packet loss, time 375175ms</span><br><span class="line">stack@vpn-test2:~$ sudo ip netns exec qrouter-faf5fb10-8662-4862-bcb4-b3cee3c603be  ping 10.1.0.12</span><br><span class="line">PING 10.1.0.12 (10.1.0.12) 56(84) bytes of data.</span><br><span class="line">^C</span><br><span class="line">--- 10.1.0.12 ping statistics ---</span><br><span class="line">15 packets transmitted, 0 received, 100% packet loss, time 14077ms</span><br><span class="line">stack@vpn-test2:~$ sudo ip netns exec qrouter-faf5fb10-8662-4862-bcb4-b3cee3c603be ip route list</span><br><span class="line">default via 172.24.4.10 dev qg-16b32471-b8</span><br><span class="line">10.2.0.0/24 dev qr-b0d7d178-00  proto kernel  scope link  src 10.2.0.1</span><br><span class="line">172.24.4.0/24 dev qg-16b32471-b8  proto kernel  scope link  src 172.24.4.19</span><br><span class="line">stack@vpn-test2:~$ sudo ip netns exec qrouter-f0906c65-e9b2-447c-ad25-73fecb7fd093 ip route list</span><br><span class="line">default via 172.24.4.10 dev qg-472d97a3-80</span><br><span class="line">10.1.0.0/24 dev qr-0fbd2cfa-9e  proto kernel  scope link  src 10.1.0.1</span><br><span class="line">172.24.4.0/24 dev qg-472d97a3-80  proto kernel  scope link  src 172.24.4.18</span><br></pre></td></tr></table></figure></li></ol><p>至此，vpnaas的基本功能验证完成。</p><h5 id="Endpoint-group功能测试"><a href="#Endpoint-group功能测试" class="headerlink" title="*! Endpoint group功能测试"></a>*! Endpoint group功能测试</h5><h6 id="测试方案-2"><a href="#测试方案-2" class="headerlink" title="测试方案"></a>测试方案</h6><p>环境还是ALL-IN-ONE单节点Openstack，四不同的vm（vm1~vm2），vm1,vm2属于network-1下的不同子网，vm3，vm4属于network-2下面的不同子网。各自连接的路由器上创建VPN服务，分别创建endpoint-group，需要将两个router的出口网关设为同一网段。</p><p>具体步骤：</p><ol><li>为四个vm创建对应的network和所在子网</li><li>创建router，并设置出口网关在同一段external网络，即”public”</li><li>各自network下创建vm，固定v4-ip，分别属于不同子网下面，并创建ikepolicy，ipsecpolicy，和vpn-service和endpoint group</li><li>创建和删除ipsec-site-connection后，测试四个vm之间的连通性</li></ol><p>网络拓扑:<br><img src="https://raw.githubusercontent.com/Sirius21c/sirius21c.github.io/master/images/Neutron-VPNaaS/endpoint_group%E6%B5%8B%E8%AF%95%E6%8B%93%E6%89%91.png" alt="endpoint_group测试拓扑"></p><h6 id="测试步骤"><a href="#测试步骤" class="headerlink" title="测试步骤"></a>测试步骤</h6><ol><li><p>创建用于测试endpoint group的network和子网</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">stack@vpn-test2:~$ neutron net-create eg-network-1</span><br><span class="line">stack@vpn-test2:~$ neutron net-create eg-network-2</span><br><span class="line">stack@vpn-test2:~$ neutron subnet-create --name eg-subnet-1 eg-network-1 10.3.0.0/24</span><br><span class="line">stack@vpn-test2:~$ neutron subnet-create --name eg-subnet-2 eg-network-1 10.4.0.0/24</span><br><span class="line">stack@vpn-test2:~$ neutron subnet-create --name eg-subnet-3 eg-network-2 10.5.0.0/24</span><br><span class="line">stack@vpn-test2:~$ neutron subnet-create --name eg-subnet-4 eg-network-2 10.6.0.0/24</span><br><span class="line">stack@vpn-test2:~$ openstack network list</span><br><span class="line">+--------------------------------------+---------------+----------------------------------------------------------------------------+</span><br><span class="line">| ID                                   | Name          | Subnets                                                                    |</span><br><span class="line">+--------------------------------------+---------------+----------------------------------------------------------------------------+</span><br><span class="line">| 137d45d3-820f-409c-aac7-12ef9be66cb2 | vpn-network-2 | 4a0b78a7-3d04-4b0e-8a43-350a482c4564                                       |</span><br><span class="line">| 274a1424-ccce-47c6-ad32-a092c51574a6 | eg-network-2  | 2a6799f1-2436-43f0-8dae-3b838bbb5167, 792a2075-fcf0-4622-a509-620f708bc316 |</span><br><span class="line">| 307b1ddf-36bc-4ace-a055-0bfe97f0da9d | eg-network-1  | 111c98b0-effc-4760-a270-f4003ca98ad2, 9584d7e3-8a93-49fb-8f8f-73d44c94d19d |</span><br><span class="line">| 4df92675-1843-4b4b-9436-4932856ed8fe | public        | 4d801dd9-da36-4832-ad10-0be3229fea9a, 4fafa6f9-2f43-475d-95b0-5392dc3164fb |</span><br><span class="line">| 8f71bd0e-d26e-405b-8e48-68148fef8ed1 | vpn-network-1 | 840b87e2-c78c-45cb-92e7-2272ef6e0821                                       |</span><br><span class="line">| e95e8eac-c523-4066-a6fd-9ba03f7a9b20 | private       | 20516105-08ab-407a-8c8f-a16f3d2f60c0, bab7c9d8-2065-4dfc-9ff7-1973ebb4b604 |</span><br><span class="line">+--------------------------------------+---------------+----------------------------------------------------------------------------+</span><br><span class="line">stack@vpn-test2:~$ openstack subnet list</span><br><span class="line">+--------------------------------------+---------------------+--------------------------------------+---------------------+</span><br><span class="line">| ID                                   | Name                | Network                              | Subnet              |</span><br><span class="line">+--------------------------------------+---------------------+--------------------------------------+---------------------+</span><br><span class="line">| 111c98b0-effc-4760-a270-f4003ca98ad2 | eg-subnet-1         | 307b1ddf-36bc-4ace-a055-0bfe97f0da9d | 10.3.0.0/24         |</span><br><span class="line">| 20516105-08ab-407a-8c8f-a16f3d2f60c0 | ipv6-private-subnet | e95e8eac-c523-4066-a6fd-9ba03f7a9b20 | fd60:9aee:5b2f::/64 |</span><br><span class="line">| 2a6799f1-2436-43f0-8dae-3b838bbb5167 | eg-subnet-3         | 274a1424-ccce-47c6-ad32-a092c51574a6 | 10.5.0.0/24         |</span><br><span class="line">| 4a0b78a7-3d04-4b0e-8a43-350a482c4564 | vpn-subnet-2        | 137d45d3-820f-409c-aac7-12ef9be66cb2 | 10.2.0.0/24         |</span><br><span class="line">| 4d801dd9-da36-4832-ad10-0be3229fea9a | ipv6-public-subnet  | 4df92675-1843-4b4b-9436-4932856ed8fe | 2001:db8::/64       |</span><br><span class="line">| 4fafa6f9-2f43-475d-95b0-5392dc3164fb | public-subnet       | 4df92675-1843-4b4b-9436-4932856ed8fe | 172.24.4.0/24       |</span><br><span class="line">| 792a2075-fcf0-4622-a509-620f708bc316 | eg-subnet-4         | 274a1424-ccce-47c6-ad32-a092c51574a6 | 10.6.0.0/24         |</span><br><span class="line">| 840b87e2-c78c-45cb-92e7-2272ef6e0821 | vpn-subnet-1        | 8f71bd0e-d26e-405b-8e48-68148fef8ed1 | 10.1.0.0/24         |</span><br><span class="line">| 9584d7e3-8a93-49fb-8f8f-73d44c94d19d | eg-subnet-2         | 307b1ddf-36bc-4ace-a055-0bfe97f0da9d | 10.4.0.0/24         |</span><br><span class="line">| bab7c9d8-2065-4dfc-9ff7-1973ebb4b604 | privateA            | e95e8eac-c523-4066-a6fd-9ba03f7a9b20 | 10.0.0.0/26         |</span><br><span class="line">+--------------------------------------+---------------------+--------------------------------------+---------------------+</span><br></pre></td></tr></table></figure></li><li><p>创建两个eg-router，并连接对应子网，设置对外网关</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">stack@vpn-test2:~$ neutron router-create eg-router-1</span><br><span class="line">stack@vpn-test2:~$ neutron router-create eg-router-2</span><br><span class="line">stack@vpn-test2:~$ neutron router-interface-add eg-router-1 eg-subnet-1</span><br><span class="line">stack@vpn-test2:~$ neutron router-interface-add eg-router-1 eg-subnet-2</span><br><span class="line">stack@vpn-test2:~$ neutron router-interface-add eg-router-2 eg-subnet-3</span><br><span class="line">stack@vpn-test2:~$ neutron router-interface-add eg-router-2 eg-subnet-4</span><br><span class="line">stack@vpn-test2:~$ neutron router-gateway-set eg-router-1 public</span><br><span class="line">Set gateway for router eg-router-1</span><br><span class="line">stack@vpn-test2:~$ neutron router-gateway-set eg-router-2 public</span><br><span class="line">Set gateway for router eg-router-2</span><br></pre></td></tr></table></figure></li><li><p>创建虚机eg-vm-1~eg-vm-4</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">stack@vpn-test2:~$ nova boot --flavor 1 --image cirros-0.3.5-x86_64-disk --nic net-id=307b1ddf-36bc-4ace-a055-0bfe97f0da9d,v4-fixed-ip=10.3.0.3 eg-vm-1</span><br><span class="line">stack@vpn-test2:~$ nova boot --flavor 1 --image cirros-0.3.5-x86_64-disk --nic net-id=307b1ddf-36bc-4ace-a055-0bfe97f0da9d,v4-fixed-ip=10.4.0.4 eg-vm-2</span><br><span class="line">stack@vpn-test2:~$ nova boot --flavor 1 --image cirros-0.3.5-x86_64-disk --nic net-id=274a1424-ccce-47c6-ad32-a092c51574a6,v4-fixed-ip=10.5.0.5 eg-vm-3</span><br><span class="line">stack@vpn-test2:~$ nova boot --flavor 1 --image cirros-0.3.5-x86_64-disk --nic net-id=274a1424-ccce-47c6-ad32-a092c51574a6,v4-fixed-ip=10.6.0.6 eg-vm-4</span><br><span class="line">stack@vpn-test2:~$ nova list</span><br><span class="line">+--------------------------------------+----------+--------+------------+-------------+-------------------------+</span><br><span class="line">| ID                                   | Name     | Status | Task State | Power State | Networks                |</span><br><span class="line">+--------------------------------------+----------+--------+------------+-------------+-------------------------+</span><br><span class="line">| c6c3a388-fe16-424a-8a68-0899b7578977 | eg-vm-1  | ACTIVE | -          | Running     | eg-network-1=10.3.0.3   |</span><br><span class="line">| 2dd3e32c-49f5-4db9-9271-a880eb7c6806 | eg-vm-2  | ACTIVE | -          | Running     | eg-network-1=10.4.0.4   |</span><br><span class="line">| f5040c29-2904-4318-879f-05ce51940c37 | eg-vm-3  | ACTIVE | -          | Running     | eg-network-2=10.5.0.5   |</span><br><span class="line">| 384c7696-a673-4039-b2aa-363199327c92 | eg-vm-4  | ACTIVE | -          | Running     | eg-network-2=10.6.0.6   |</span><br><span class="line">| 70b959d7-3bc6-485a-b51c-07711b67757e | vpn-vm-1 | ACTIVE | -          | Running     | vpn-network-1=10.1.0.12 |</span><br><span class="line">| e8e150dd-4a98-40df-ab35-28b3a791c1be | vpn-vm-2 | ACTIVE | -          | Running     | vpn-network-2=10.2.0.3  |</span><br><span class="line">+--------------------------------------+----------+--------+------------+-------------+-------------------------+</span><br></pre></td></tr></table></figure></li><li><p>创建用于测试endpoint group的ikepolicy，ipsecpolicy</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">stack@vpn-test2:~$ neutron vpn-ikepolicy-create eg-ikepolicy</span><br><span class="line">stack@vpn-test2:~$ neutron vpn-ipsecpolicy-create eg-ipsecpolicy</span><br><span class="line">stack@vpn-test2:~$ neutron vpn-ikepolicy-list</span><br><span class="line">neutron CLI is deprecated and will be removed in the future. Use openstack CLI instead.</span><br><span class="line">+--------------------------------------+--------------+----------------------------------+----------------+----------------------+-------------+--------+</span><br><span class="line">| id                                   | name         | tenant_id                        | auth_algorithm | encryption_algorithm | ike_version | pfs    |</span><br><span class="line">+--------------------------------------+--------------+----------------------------------+----------------+----------------------+-------------+--------+</span><br><span class="line">| 74796b9d-3695-4759-a0bc-bd0c6bdb8c9f | ikepolicy    | da717c389f494c3e8e6d32f46142d610 | sha1           | aes-128              | v1          | group5 |</span><br><span class="line">| 85c27997-ab43-4782-815b-b4de285ae74a | eg-ikepolicy | da717c389f494c3e8e6d32f46142d610 | sha1           | aes-128              | v1          | group5 |</span><br><span class="line">+--------------------------------------+--------------+----------------------------------+----------------+----------------------+-------------+--------+</span><br><span class="line">stack@vpn-test2:~$ neutron vpn-ipsecpolicy-list</span><br><span class="line">neutron CLI is deprecated and will be removed in the future. Use openstack CLI instead.</span><br><span class="line">+--------------------------------------+----------------+----------------------------------+----------------+----------------------+--------+</span><br><span class="line">| id                                   | name           | tenant_id                        | auth_algorithm | encryption_algorithm | pfs    |</span><br><span class="line">+--------------------------------------+----------------+----------------------------------+----------------+----------------------+--------+</span><br><span class="line">| 35305802-8e52-4983-adab-946a58e44c91 | eg-ipsecpolicy | da717c389f494c3e8e6d32f46142d610 | sha1           | aes-128              | group5 |</span><br><span class="line">| f7c16fe2-a0cb-4494-bcf3-a430d5699c4c | ipsecpolicy    | da717c389f494c3e8e6d32f46142d610 | sha1           | aes-128              | group5 |</span><br><span class="line">+--------------------------------------+----------------+----------------------------------+----------------+----------------------+--------+</span><br></pre></td></tr></table></figure></li><li><p>创建vpn-service和endpoint-group。<br><strong><em>注意：</em></strong>此时创建vpn-service时，不指定子网，只指定路由器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line">neutron vpn-service-create --name eg-VPNA eg-router-1</span><br><span class="line">stack@vpn-test2:~$ neutron vpn-endpoint-group-create --name eg-locals --type subnet --value eg-subnet-1 --value eg-subnet-2</span><br><span class="line">neutron CLI is deprecated and will be removed in the future. Use openstack CLI instead.</span><br><span class="line">Created a new endpoint_group:</span><br><span class="line">+-------------+--------------------------------------+</span><br><span class="line">| Field       | Value                                |</span><br><span class="line">+-------------+--------------------------------------+</span><br><span class="line">| description |                                      |</span><br><span class="line">| endpoints   | 111c98b0-effc-4760-a270-f4003ca98ad2 |</span><br><span class="line">|             | 9584d7e3-8a93-49fb-8f8f-73d44c94d19d |</span><br><span class="line">| id          | 9827c31e-4255-41de-91e7-eeefa73db311 |</span><br><span class="line">| name        | eg-locals                            |</span><br><span class="line">| project_id  | da717c389f494c3e8e6d32f46142d610     |</span><br><span class="line">| tenant_id   | da717c389f494c3e8e6d32f46142d610     |</span><br><span class="line">| type        | subnet                               |</span><br><span class="line">+-------------+--------------------------------------+</span><br><span class="line">stack@vpn-test2:~$ neutron vpn-endpoint-group-create --name eg-peers --type cidr --value 10.5.0.0/24 --value 10.6.0.0/24</span><br><span class="line">neutron CLI is deprecated and will be removed in the future. Use openstack CLI instead.</span><br><span class="line">Created a new endpoint_group:</span><br><span class="line">+-------------+--------------------------------------+</span><br><span class="line">| Field       | Value                                |</span><br><span class="line">+-------------+--------------------------------------+</span><br><span class="line">| description |                                      |</span><br><span class="line">| endpoints   | 10.5.0.0/24                          |</span><br><span class="line">|             | 10.6.0.0/24                          |</span><br><span class="line">| id          | df0e8f64-5e03-49c8-ae5a-1ec9f62cf563 |</span><br><span class="line">| name        | eg-peers                             |</span><br><span class="line">| project_id  | da717c389f494c3e8e6d32f46142d610     |</span><br><span class="line">| tenant_id   | da717c389f494c3e8e6d32f46142d610     |</span><br><span class="line">| type        | cidr                                 |</span><br><span class="line">+-------------+--------------------------------------+</span><br><span class="line">stack@vpn-test2:~$ neutron vpn-service-create --name eg-VPNB eg-router-2</span><br><span class="line">stack@vpn-test2:~$ neutron vpn-endpoint-group-create --name eg-locals-2 --type subnet --value eg-subnet-3 --value eg-subnet-4</span><br><span class="line">neutron CLI is deprecated and will be removed in the future. Use openstack CLI instead.</span><br><span class="line">Created a new endpoint_group:</span><br><span class="line">+-------------+--------------------------------------+</span><br><span class="line">| Field       | Value                                |</span><br><span class="line">+-------------+--------------------------------------+</span><br><span class="line">| description |                                      |</span><br><span class="line">| endpoints   | 2a6799f1-2436-43f0-8dae-3b838bbb5167 |</span><br><span class="line">|             | 792a2075-fcf0-4622-a509-620f708bc316 |</span><br><span class="line">| id          | 0fd07dbc-bf75-4b55-88a1-56cc072e437d |</span><br><span class="line">| name        | eg-locals-2                          |</span><br><span class="line">| project_id  | da717c389f494c3e8e6d32f46142d610     |</span><br><span class="line">| tenant_id   | da717c389f494c3e8e6d32f46142d610     |</span><br><span class="line">| type        | subnet                               |</span><br><span class="line">+-------------+--------------------------------------+</span><br><span class="line">stack@vpn-test2:~$ neutron vpn-endpoint-group-create --name eg-peers-2 --type cidr --value 10.3.0.0/24 --value 10.4.0.0/24</span><br><span class="line">neutron CLI is deprecated and will be removed in the future. Use openstack CLI instead.</span><br><span class="line">Created a new endpoint_group:</span><br><span class="line">+-------------+--------------------------------------+</span><br><span class="line">| Field       | Value                                |</span><br><span class="line">+-------------+--------------------------------------+</span><br><span class="line">| description |                                      |</span><br><span class="line">| endpoints   | 10.3.0.0/24                          |</span><br><span class="line">|             | 10.4.0.0/24                          |</span><br><span class="line">| id          | b6448c42-a274-4475-b335-4987cddfdba5 |</span><br><span class="line">| name        | eg-peers-2                           |</span><br><span class="line">| project_id  | da717c389f494c3e8e6d32f46142d610     |</span><br><span class="line">| tenant_id   | da717c389f494c3e8e6d32f46142d610     |</span><br><span class="line">| type        | cidr                                 |</span><br><span class="line">+-------------+--------------------------------------+</span><br><span class="line">stack@vpn-test2:~$ neutron vpn-endpoint-group-list</span><br><span class="line">neutron CLI is deprecated and will be removed in the future. Use openstack CLI instead.</span><br><span class="line">+--------------------------------------+-------------+----------------------------------+--------+------------------------------------------------------------------------------------+</span><br><span class="line">| id                                   | name        | tenant_id                        | type   | endpoints                                                                          |</span><br><span class="line">+--------------------------------------+-------------+----------------------------------+--------+------------------------------------------------------------------------------------+</span><br><span class="line">| 0fd07dbc-bf75-4b55-88a1-56cc072e437d | eg-locals-2 | da717c389f494c3e8e6d32f46142d610 | subnet | [u&apos;2a6799f1-2436-43f0-8dae-3b838bbb5167&apos;, u&apos;792a2075-fcf0-4622-a509-620f708bc316&apos;] |</span><br><span class="line">| 9827c31e-4255-41de-91e7-eeefa73db311 | eg-locals   | da717c389f494c3e8e6d32f46142d610 | subnet | [u&apos;111c98b0-effc-4760-a270-f4003ca98ad2&apos;, u&apos;9584d7e3-8a93-49fb-8f8f-73d44c94d19d&apos;] |</span><br><span class="line">| b6448c42-a274-4475-b335-4987cddfdba5 | eg-peers-2  | da717c389f494c3e8e6d32f46142d610 | cidr   | [u&apos;10.3.0.0/24&apos;, u&apos;10.4.0.0/24&apos;]                                                   |</span><br><span class="line">| df0e8f64-5e03-49c8-ae5a-1ec9f62cf563 | eg-peers    | da717c389f494c3e8e6d32f46142d610 | cidr   | [u&apos;10.5.0.0/24&apos;, u&apos;10.6.0.0/24&apos;]                                                   |</span><br><span class="line">+--------------------------------------+-------------+----------------------------------+--------+------------------------------------------------------------------------------------+</span><br></pre></td></tr></table></figure></li><li><p>创建ipsec-site-connection，等待30到50秒后查看vpn-service和ipsec-site-connection的状态，状态为ACTIVE，说明功能正常。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line">stack@vpn-test2:~$ neutron ipsec-site-connection-create --name eg-vpnconnection1 --vpnservice-id e64a8cac-3b3e-46c0-9154-69b42b162d36 --ikepolicy-id 85c27997-ab43-4782-815b-b4de285ae74a --ipsecpolicy-id 35305802-8e52-4983-adab-946a58e44c91 --peer-address 172.24.4.17 --peer-id 172.24.4.17 --local-ep-group eg-locals --peer-ep-group eg-peers --psk lizenghui</span><br><span class="line">neutron CLI is deprecated and will be removed in the future. Use openstack CLI instead.</span><br><span class="line">Created a new ipsec_site_connection:</span><br><span class="line">+-------------------+----------------------------------------------------+</span><br><span class="line">| Field             | Value                                              |</span><br><span class="line">+-------------------+----------------------------------------------------+</span><br><span class="line">| admin_state_up    | True                                               |</span><br><span class="line">| auth_mode         | psk                                                |</span><br><span class="line">| description       |                                                    |</span><br><span class="line">| dpd               | &#123;&quot;action&quot;: &quot;hold&quot;, &quot;interval&quot;: 30, &quot;timeout&quot;: 120&#125; |</span><br><span class="line">| id                | 34fd710c-c989-453c-ab30-43e35300ec76               |</span><br><span class="line">| ikepolicy_id      | 85c27997-ab43-4782-815b-b4de285ae74a               |</span><br><span class="line">| initiator         | bi-directional                                     |</span><br><span class="line">| ipsecpolicy_id    | 35305802-8e52-4983-adab-946a58e44c91               |</span><br><span class="line">| local_ep_group_id | 9827c31e-4255-41de-91e7-eeefa73db311               |</span><br><span class="line">| local_id          |                                                    |</span><br><span class="line">| mtu               | 1500                                               |</span><br><span class="line">| name              | eg-vpnconnection1                                  |</span><br><span class="line">| peer_address      | 172.24.4.17                                        |</span><br><span class="line">| peer_cidrs        |                                                    |</span><br><span class="line">| peer_ep_group_id  | df0e8f64-5e03-49c8-ae5a-1ec9f62cf563               |</span><br><span class="line">| peer_id           | 172.24.4.17                                        |</span><br><span class="line">| project_id        | da717c389f494c3e8e6d32f46142d610                   |</span><br><span class="line">| psk               | lizenghui                                          |</span><br><span class="line">| route_mode        | static                                             |</span><br><span class="line">| status            | PENDING_CREATE                                     |</span><br><span class="line">| tenant_id         | da717c389f494c3e8e6d32f46142d610                   |</span><br><span class="line">| vpnservice_id     | e64a8cac-3b3e-46c0-9154-69b42b162d36               |</span><br><span class="line">+-------------------+----------------------------------------------------+</span><br><span class="line">stack@vpn-test2:~$ neutron ipsec-site-connection-create --name eg-vpnconnection2 --vpnservice-id f883f3f5-66be-414a-b90f-32f84aa77655 --ikepolicy-id 85c27997-ab43-4782-815b-b4de285ae74a --ipsecpolicy-id 35305802-8e52-4983-adab-946a58e44c91 --peer-address 172.24.4.15 --peer-id 172.24.4.15 --local-ep-group eg-locals-2 --peer-ep-group eg-peers-2 --psk lizenghui</span><br><span class="line">neutron CLI is deprecated and will be removed in the future. Use openstack CLI instead.</span><br><span class="line">Created a new ipsec_site_connection:</span><br><span class="line">+-------------------+----------------------------------------------------+</span><br><span class="line">| Field             | Value                                              |</span><br><span class="line">+-------------------+----------------------------------------------------+</span><br><span class="line">| admin_state_up    | True                                               |</span><br><span class="line">| auth_mode         | psk                                                |</span><br><span class="line">| description       |                                                    |</span><br><span class="line">| dpd               | &#123;&quot;action&quot;: &quot;hold&quot;, &quot;interval&quot;: 30, &quot;timeout&quot;: 120&#125; |</span><br><span class="line">| id                | 429e0919-6e80-457e-a8d7-6f28f2d0df77               |</span><br><span class="line">| ikepolicy_id      | 85c27997-ab43-4782-815b-b4de285ae74a               |</span><br><span class="line">| initiator         | bi-directional                                     |</span><br><span class="line">| ipsecpolicy_id    | 35305802-8e52-4983-adab-946a58e44c91               |</span><br><span class="line">| local_ep_group_id | 0fd07dbc-bf75-4b55-88a1-56cc072e437d               |</span><br><span class="line">| local_id          |                                                    |</span><br><span class="line">| mtu               | 1500                                               |</span><br><span class="line">| name              | eg-vpnconnection2                                  |</span><br><span class="line">| peer_address      | 172.24.4.15                                        |</span><br><span class="line">| peer_cidrs        |                                                    |</span><br><span class="line">| peer_ep_group_id  | b6448c42-a274-4475-b335-4987cddfdba5               |</span><br><span class="line">| peer_id           | 172.24.4.15                                        |</span><br><span class="line">| project_id        | da717c389f494c3e8e6d32f46142d610                   |</span><br><span class="line">| psk               | lizenghui                                          |</span><br><span class="line">| route_mode        | static                                             |</span><br><span class="line">| status            | PENDING_CREATE                                     |</span><br><span class="line">| tenant_id         | da717c389f494c3e8e6d32f46142d610                   |</span><br><span class="line">| vpnservice_id     | f883f3f5-66be-414a-b90f-32f84aa77655               |</span><br><span class="line">+-------------------+----------------------------------------------------+</span><br><span class="line">stack@vpn-test2:~$ neutron vpn-service-list</span><br><span class="line">neutron CLI is deprecated and will be removed in the future. Use openstack CLI instead.</span><br><span class="line">+--------------------------------------+---------+----------------------------------+--------------------------------------+----------------+</span><br><span class="line">| id                                   | name    | tenant_id                        | router_id                            | status         |</span><br><span class="line">+--------------------------------------+---------+----------------------------------+--------------------------------------+----------------+</span><br><span class="line">| 4f7e2da2-92eb-4e30-aa7e-94ec66928d69 | VPNB    | da717c389f494c3e8e6d32f46142d610 | faf5fb10-8662-4862-bcb4-b3cee3c603be | ACTIVE         |</span><br><span class="line">| aff9287d-22dd-43d9-b707-afd6257ac70e | VPNA    | da717c389f494c3e8e6d32f46142d610 | f0906c65-e9b2-447c-ad25-73fecb7fd093 | PENDING_CREATE |</span><br><span class="line">| e64a8cac-3b3e-46c0-9154-69b42b162d36 | eg-VPNA | da717c389f494c3e8e6d32f46142d610 | 704fcac7-57d3-4fca-a21e-1b838a440f2d | ACTIVE         |</span><br><span class="line">| f883f3f5-66be-414a-b90f-32f84aa77655 | eg-VPNB | da717c389f494c3e8e6d32f46142d610 | d8a62641-a84f-4d3d-a48f-ead48d85e701 | ACTIVE         |</span><br><span class="line">+--------------------------------------+---------+----------------------------------+--------------------------------------+----------------+</span><br><span class="line">stack@vpn-test2:~$ neutron ipsec-site-connection-list</span><br><span class="line">neutron CLI is deprecated and will be removed in the future. Use openstack CLI instead.</span><br><span class="line">+--------------------------------------+-------------------+----------------------------------+--------------+-----------+--------+</span><br><span class="line">| id                                   | name              | tenant_id                        | peer_address | auth_mode | status |</span><br><span class="line">+--------------------------------------+-------------------+----------------------------------+--------------+-----------+--------+</span><br><span class="line">| 34fd710c-c989-453c-ab30-43e35300ec76 | eg-vpnconnection1 | da717c389f494c3e8e6d32f46142d610 | 172.24.4.17  | psk       | ACTIVE |</span><br><span class="line">| 429e0919-6e80-457e-a8d7-6f28f2d0df77 | eg-vpnconnection2 | da717c389f494c3e8e6d32f46142d610 | 172.24.4.15  | psk       | ACTIVE |</span><br><span class="line">+--------------------------------------+-------------------+----------------------------------+--------------+-----------+--------+</span><br></pre></td></tr></table></figure></li><li><p>登陆到创建的vm，验证vm1，vm2，vm3，vm4之间的连通性，发现它们之间是互相通的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line">stack@vpn-test2:~$ nova list</span><br><span class="line">+--------------------------------------+----------+--------+------------+-------------+-------------------------+</span><br><span class="line">| ID                                   | Name     | Status | Task State | Power State | Networks                |</span><br><span class="line">+--------------------------------------+----------+--------+------------+-------------+-------------------------+</span><br><span class="line">| c6c3a388-fe16-424a-8a68-0899b7578977 | eg-vm-1  | ACTIVE | -          | Running     | eg-network-1=10.3.0.3   |</span><br><span class="line">| 2dd3e32c-49f5-4db9-9271-a880eb7c6806 | eg-vm-2  | ACTIVE | -          | Running     | eg-network-1=10.4.0.4   |</span><br><span class="line">| f5040c29-2904-4318-879f-05ce51940c37 | eg-vm-3  | ACTIVE | -          | Running     | eg-network-2=10.5.0.5   |</span><br><span class="line">| 384c7696-a673-4039-b2aa-363199327c92 | eg-vm-4  | ACTIVE | -          | Running     | eg-network-2=10.6.0.6   |</span><br><span class="line">| 70b959d7-3bc6-485a-b51c-07711b67757e | vpn-vm-1 | ACTIVE | -          | Running     | vpn-network-1=10.1.0.12 |</span><br><span class="line">| e8e150dd-4a98-40df-ab35-28b3a791c1be | vpn-vm-2 | ACTIVE | -          | Running     | vpn-network-2=10.2.0.3  |</span><br><span class="line">+--------------------------------------+----------+--------+------------+-------------+-------------------------+</span><br><span class="line">stack@vpn-test2:~$ openstack router list</span><br><span class="line">+--------------------------------------+--------------+--------+-------+-------------+-------+----------------------------------+</span><br><span class="line">| ID                                   | Name         | Status | State | Distributed | HA    | Project                          |</span><br><span class="line">+--------------------------------------+--------------+--------+-------+-------------+-------+----------------------------------+</span><br><span class="line">| 704fcac7-57d3-4fca-a21e-1b838a440f2d | eg-router-1  | ACTIVE | UP    | False       | False | da717c389f494c3e8e6d32f46142d610 |</span><br><span class="line">| bdcb18cf-4b83-47df-b0d5-b424eaeda1a6 | router1      | ACTIVE | UP    | False       | False | 9885c5369b824e81b01d0e5444f379f7 |</span><br><span class="line">| d8a62641-a84f-4d3d-a48f-ead48d85e701 | eg-router-2  | ACTIVE | UP    | False       | False | da717c389f494c3e8e6d32f46142d610 |</span><br><span class="line">| f0906c65-e9b2-447c-ad25-73fecb7fd093 | vpn-router-1 | ACTIVE | UP    | False       | False | da717c389f494c3e8e6d32f46142d610 |</span><br><span class="line">| faf5fb10-8662-4862-bcb4-b3cee3c603be | vpn-router-2 | ACTIVE | UP    | False       | False | da717c389f494c3e8e6d32f46142d610 |</span><br><span class="line">+--------------------------------------+--------------+--------+-------+-------------+-------+----------------------------------+</span><br><span class="line">stack@vpn-test2:~$ sudo ip netns exec qrouter-704fcac7-57d3-4fca-a21e-1b838a440f2d ssh cirros@10.3.0.3</span><br><span class="line">cirros@10.3.0.3&apos;s password:</span><br><span class="line">Permission denied, please try again.</span><br><span class="line">cirros@10.3.0.3&apos;s password:</span><br><span class="line">$ ip a</span><br><span class="line">1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 16436 qdisc noqueue</span><br><span class="line">    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00</span><br><span class="line">    inet 127.0.0.1/8 scope host lo</span><br><span class="line">    inet6 ::1/128 scope host</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">2: eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1450 qdisc pfifo_fast qlen 1000</span><br><span class="line">    link/ether fa:16:3e:9a:10:1c brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    inet 10.3.0.3/24 brd 10.3.0.255 scope global eth0</span><br><span class="line">    inet6 fe80::f816:3eff:fe9a:101c/64 scope link</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">$ ping 10.5.0.5</span><br><span class="line">PING 10.5.0.5 (10.5.0.5): 56 data bytes</span><br><span class="line">64 bytes from 10.5.0.5: seq=0 ttl=62 time=5.781 ms</span><br><span class="line">64 bytes from 10.5.0.5: seq=1 ttl=62 time=1.803 ms</span><br><span class="line">64 bytes from 10.5.0.5: seq=2 ttl=62 time=1.809 ms</span><br><span class="line">64 bytes from 10.5.0.5: seq=3 ttl=62 time=1.707 ms</span><br><span class="line">64 bytes from 10.5.0.5: seq=4 ttl=62 time=1.300 ms</span><br><span class="line">64 bytes from 10.5.0.5: seq=5 ttl=62 time=1.342 ms</span><br><span class="line">64 bytes from 10.5.0.5: seq=6 ttl=62 time=1.263 ms</span><br><span class="line">64 bytes from 10.5.0.5: seq=7 ttl=62 time=1.409 ms</span><br><span class="line">64 bytes from 10.5.0.5: seq=8 ttl=62 time=1.356 ms</span><br><span class="line">^C</span><br><span class="line">--- 10.5.0.5 ping statistics ---</span><br><span class="line">9 packets transmitted, 9 packets received, 0% packet loss</span><br><span class="line">round-trip min/avg/max = 1.263/1.974/5.781 ms</span><br><span class="line">$ ping 10.6.0.6</span><br><span class="line">PING 10.6.0.6 (10.6.0.6): 56 data bytes</span><br><span class="line">64 bytes from 10.6.0.6: seq=0 ttl=62 time=6.258 ms</span><br><span class="line">64 bytes from 10.6.0.6: seq=1 ttl=62 time=2.096 ms</span><br><span class="line">64 bytes from 10.6.0.6: seq=2 ttl=62 time=1.644 ms</span><br><span class="line">64 bytes from 10.6.0.6: seq=3 ttl=62 time=1.441 ms</span><br><span class="line">64 bytes from 10.6.0.6: seq=4 ttl=62 time=1.516 ms</span><br><span class="line">64 bytes from 10.6.0.6: seq=5 ttl=62 time=1.546 ms</span><br><span class="line">64 bytes from 10.6.0.6: seq=6 ttl=62 time=2.268 ms</span><br><span class="line">64 bytes from 10.6.0.6: seq=7 ttl=62 time=2.222 ms</span><br><span class="line">^C</span><br><span class="line">--- 10.6.0.6 ping statistics ---</span><br><span class="line">8 packets transmitted, 8 packets received, 0% packet loss</span><br><span class="line">round-trip min/avg/max = 1.441/2.373/6.258 ms</span><br><span class="line">$ ping 10.4.0.4</span><br><span class="line">PING 10.4.0.4 (10.4.0.4): 56 data bytes</span><br><span class="line">64 bytes from 10.4.0.4: seq=0 ttl=63 time=10.127 ms</span><br><span class="line">64 bytes from 10.4.0.4: seq=1 ttl=63 time=1.999 ms</span><br><span class="line">64 bytes from 10.4.0.4: seq=2 ttl=63 time=1.438 ms</span><br><span class="line">64 bytes from 10.4.0.4: seq=3 ttl=63 time=1.125 ms</span><br><span class="line">64 bytes from 10.4.0.4: seq=4 ttl=63 time=1.217 ms</span><br><span class="line">64 bytes from 10.4.0.4: seq=5 ttl=63 time=1.245 ms</span><br><span class="line">64 bytes from 10.4.0.4: seq=6 ttl=63 time=1.202 ms</span><br><span class="line">64 bytes from 10.4.0.4: seq=7 ttl=63 time=1.120 ms</span><br><span class="line">^C</span><br><span class="line">--- 10.4.0.4 ping statistics ---</span><br><span class="line">8 packets transmitted, 8 packets received, 0% packet loss</span><br><span class="line">round-trip min/avg/max = 1.120/2.434/10.127 ms</span><br></pre></td></tr></table></figure></li><li><p>删除ipsec-site-connection连接，另一个ipsec-site-connection连接down掉。再测试连通性，发现vm1与eg-network-2下面的vm3、vm4已无法ping通，而与vm2能ping通。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">stack@vpn-test2:~$ neutron ipsec-site-connection-list</span><br><span class="line">neutron CLI is deprecated and will be removed in the future. Use openstack CLI instead.</span><br><span class="line">+--------------------------------------+-------------------+----------------------------------+--------------+-----------+--------+</span><br><span class="line">| id                                   | name              | tenant_id                        | peer_address | auth_mode | status |</span><br><span class="line">+--------------------------------------+-------------------+----------------------------------+--------------+-----------+--------+</span><br><span class="line">| 34fd710c-c989-453c-ab30-43e35300ec76 | eg-vpnconnection1 | da717c389f494c3e8e6d32f46142d610 | 172.24.4.17  | psk       | ACTIVE |</span><br><span class="line">| 429e0919-6e80-457e-a8d7-6f28f2d0df77 | eg-vpnconnection2 | da717c389f494c3e8e6d32f46142d610 | 172.24.4.15  | psk       | ACTIVE |</span><br><span class="line">+--------------------------------------+-------------------+----------------------------------+--------------+-----------+--------+</span><br><span class="line">stack@vpn-test2:~$ neutron ipsec-site-connection-delete 34fd710c-c989-453c-ab30-43e35300ec76</span><br><span class="line">neutron CLI is deprecated and will be removed in the future. Use openstack CLI instead.</span><br><span class="line">Deleted ipsec_site_connection(s): 34fd710c-c989-453c-ab30-43e35300ec76</span><br><span class="line">stack@vpn-test2:~$ neutron ipsec-site-connection-list</span><br><span class="line">neutron CLI is deprecated and will be removed in the future. Use openstack CLI instead.</span><br><span class="line">+--------------------------------------+-------------------+----------------------------------+--------------+-----------+--------+</span><br><span class="line">| id                                   | name              | tenant_id                        | peer_address | auth_mode | status |</span><br><span class="line">+--------------------------------------+-------------------+----------------------------------+--------------+-----------+--------+</span><br><span class="line">| 429e0919-6e80-457e-a8d7-6f28f2d0df77 | eg-vpnconnection2 | da717c389f494c3e8e6d32f46142d610 | 172.24.4.15  | psk       | DOWN   |</span><br><span class="line">+--------------------------------------+-------------------+----------------------------------+--------------+-----------+--------+</span><br><span class="line">stack@vpn-test2:~$ sudo ip netns exec qrouter-704fcac7-57d3-4fca-a21e-1b838a440f2d ssh cirros@10.3.0.3</span><br><span class="line">cirros@10.3.0.3&apos;s password:</span><br><span class="line">$ ping 10.5.0.5</span><br><span class="line">PING 10.5.0.5 (10.5.0.5): 56 data bytes</span><br><span class="line">^C</span><br><span class="line">--- 10.5.0.5 ping statistics ---</span><br><span class="line">10 packets transmitted, 0 packets received, 100% packet loss</span><br><span class="line">$ ping 10.6.0.6</span><br><span class="line">PING 10.6.0.6 (10.6.0.6): 56 data bytes</span><br><span class="line">^C</span><br><span class="line">--- 10.6.0.6 ping statistics ---</span><br><span class="line">6 packets transmitted, 0 packets received, 100% packet loss</span><br><span class="line">$ ping 10.4.0.4</span><br><span class="line">PING 10.4.0.4 (10.4.0.4): 56 data bytes</span><br><span class="line">64 bytes from 10.4.0.4: seq=0 ttl=63 time=4.499 ms</span><br><span class="line">64 bytes from 10.4.0.4: seq=1 ttl=63 time=1.958 ms</span><br><span class="line">64 bytes from 10.4.0.4: seq=2 ttl=63 time=1.169 ms</span><br><span class="line">64 bytes from 10.4.0.4: seq=3 ttl=63 time=1.189 ms</span><br><span class="line">64 bytes from 10.4.0.4: seq=4 ttl=63 time=1.290 ms</span><br><span class="line">64 bytes from 10.4.0.4: seq=5 ttl=63 time=1.231 ms</span><br><span class="line">^C</span><br><span class="line">--- 10.4.0.4 ping statistics ---</span><br><span class="line">6 packets transmitted, 6 packets received, 0% packet loss</span><br><span class="line">round-trip min/avg/max = 1.169/1.889/4.499 ms</span><br></pre></td></tr></table></figure></li></ol><h5 id="结果与分析"><a href="#结果与分析" class="headerlink" title="结果与分析"></a>结果与分析</h5><ul><li><p>查看agent，没有单独的neutron-vpn-agent，说明现在L3 agent起了vpn agent的作用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">stack@vpn-test2:~$ neutron agent-list</span><br><span class="line">neutron CLI is deprecated and will be removed in the future. Use openstack CLI instead.</span><br><span class="line">+--------------------------------------+--------------------+-----------+-------------------+-------+----------------+---------------------------+</span><br><span class="line">| id                                   | agent_type         | host      | availability_zone | alive | admin_state_up | binary                    |</span><br><span class="line">+--------------------------------------+--------------------+-----------+-------------------+-------+----------------+---------------------------+</span><br><span class="line">| 4aaf04b5-a843-4af1-9c75-c5169d9c24a9 | Metadata agent     | vpn-test2 |                   | :-)   | True           | neutron-metadata-agent    |</span><br><span class="line">| 79de8e88-b5e2-458d-9fd1-f94b19b91524 | DHCP agent         | vpn-test2 | nova              | :-)   | True           | neutron-dhcp-agent        |</span><br><span class="line">| be88d7e9-44d9-41b3-8da2-29943df76fa6 | Open vSwitch agent | vpn-test2 |                   | :-)   | True           | neutron-openvswitch-agent |</span><br><span class="line">| dc1ee8b1-2a0c-4da7-b096-c54f7b0e071a | L3 agent           | vpn-test2 | nova              | :-)   | True           | neutron-l3-agent          |</span><br><span class="line">+--------------------------------------+--------------------+-----------+-------------------+-------+----------------+---------------------------+</span><br></pre></td></tr></table></figure></li><li><p>查看ipsec driver，dvr和ha都未启用，支持VPN功能实现的ipsec_driver为strongswan。关于HA router对VPNaaS功能的影响还有待进一步测试。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">stack@vpn-test2:~$ neutron service-provider-list</span><br><span class="line">neutron CLI is deprecated and will be removed in the future. Use openstack CLI instead.</span><br><span class="line">+---------------+-------------+---------+</span><br><span class="line">| service_type  | name        | default |</span><br><span class="line">+---------------+-------------+---------+</span><br><span class="line">| L3_ROUTER_NAT | single_node | False   |</span><br><span class="line">| L3_ROUTER_NAT | ha          | False   |</span><br><span class="line">| L3_ROUTER_NAT | dvrha       | False   |</span><br><span class="line">| VPN           | strongswan  | True    |</span><br><span class="line">| L3_ROUTER_NAT | dvr         | False   |</span><br><span class="line">| VPN           | strongswan  | True    |</span><br><span class="line">+---------------+-------------+---------+</span><br></pre></td></tr></table></figure></li><li><p>当前版本支持传统的指定子网CIDR的vpn连接方式，也支持建立endpoint group的多个本地子网的方式，并且后者是现在和以后推荐使用的。</p></li><li>Ubuntu系统支持strongswan类型的ipsec_driver，CentOS系统不支持。</li><li><p>当ipsec-site-connection一旦建立起来后，其连接所有用到的资源（ikepolicy，ipsecpolicy，subnet，endpoint group等）都不能被删除或更新。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">stack@vpn-test2:~$ neutron vpn-ikepolicy-delete 85c27997-ab43-4782-815b-b4de285ae74a</span><br><span class="line">neutron CLI is deprecated and will be removed in the future. Use openstack CLI instead.</span><br><span class="line">IKEPolicy 85c27997-ab43-4782-815b-b4de285ae74a is in use by existing IPsecSiteConnection and can&apos;t be updated or deleted</span><br><span class="line">Neutron server returns request_ids: [&apos;req-afe0c4a0-0775-452a-a4dd-535274456373&apos;]</span><br></pre></td></tr></table></figure></li><li><p>建立endpoint group时指定type时，后面的value必须一致，要么都为subnet，要么都为cidr。</p></li><li>建立ipsec-site-connection连接时双方psk值必须一致匹配。</li></ul>]]></content>
      
      
      <categories>
          
          <category> technology </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openstack </tag>
            
            <tag> neutron </tag>
            
            <tag> VPNaaS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Octavia调研</title>
      <link href="/2018/07/03/Octavia%E8%B0%83%E7%A0%94/"/>
      <url>/2018/07/03/Octavia%E8%B0%83%E7%A0%94/</url>
      
        <content type="html"><![CDATA[<h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>Octavia 是一款开放源码的运营商级负载平衡解决方案，旨在与 OpenStack 配合使用。<br>Octavia 之前由 Neutron LBaaS 项目承担，影响了Neutron LBaaS项目的转型，Neutron LBaaS 从版本1转为版本2。从OpenStack的Liberty发行版开始，Octavia 成为Neutron LBaaS第2版的参考实现。从 Pike 版本开始，Octavia 就可以作为独立的Keystone服务而不再是 Neutron 的一个 service plugin，同时，CLI 命令也作为 openstack 命令行的一部分，而不是通过 neutron 调用。<br>Octavia通过管理一组虚拟机，容器或裸机（通常称为amphora）来完成其负载均衡服务的交付。 这种按需、横向扩展特性将Octavia与其他负载平衡解决方案区分开来，从而使Octavia真正适合“云”。<br>说白了，就是将用户的API请求经过逻辑处理，转换成haproxy和keepalived的配置参数，下发到amphorae虚拟机中。</p><h3 id="命令行使用流程"><a href="#命令行使用流程" class="headerlink" title="命令行使用流程"></a>命令行使用流程</h3><p>如下几个命令创建一个 loadbalancer，一个 listener 一个 pool，同时添加两个 member。</p><ul><li><p>neutron CLI</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">neutron lbaas-loadbalancer-create --name lb1 private-subnet</span><br><span class="line">neutron lbaas-listener-create --loadbalancer lb1 --protocol HTTP --protocol-port 80 --name listener1</span><br><span class="line">neutron lbaas-pool-create --lb-algorithm ROUND_ROBIN --listener listener1 --protocol HTTP --name pool1</span><br><span class="line">neutron lbaas-member-create  --subnet private-subnet --address $&#123;IP1&#125; --protocol-port 80 pool1</span><br><span class="line">neutron lbaas-member-create  --subnet private-subnet --address $&#123;IP2&#125; --protocol-port 80 pool1</span><br></pre></td></tr></table></figure></li><li><p>openstack CLI</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">openstack loadbalancer create --name test_1 --vip-subnet-id f2492f6d-abe8-4600-9620-ea0b30e0f04c</span><br><span class="line">openstack loadbalancer listener create --name test_1 --protocol HTTP --protocol-port 80 a32dfcac-3f65-454d-acb1-fc038434b0ed</span><br><span class="line">openstack loadbalancer pool create --name test_pool_1 --protocol HTTP --listener 7a14d263-d19f-49c6-b7ac-35dc74f95e7e --lb-algorithm ROUND_ROBIN</span><br><span class="line">openstack loadbalancer member create --name member_1 --address 10.0.0.14 --subnet-id f2492f6d-abe8-4600-9620-ea0b30e0f04c --protocol-port 80 1922e4a8-3538-43ff-9489-7cb3b35e6bb0</span><br></pre></td></tr></table></figure></li></ul><h3 id="涉及资源及概念"><a href="#涉及资源及概念" class="headerlink" title="涉及资源及概念"></a>涉及资源及概念</h3><h4 id="loadbalancer"><a href="#loadbalancer" class="headerlink" title="loadbalancer"></a>loadbalancer</h4><p>octavia 的实现就是由 amphora 镜像起来的虚拟机实例，即创建 loadbalancer 就是创建 amphora 虚机。</p><p><strong>目前支持 single 和 active-standby 两种模式，社区正在开发 active-active 模式，（Queens）暂不支持。active-standby 模式如果配置enable_anti_affinity，则会针对这个 lb 先在Nova创建ServerGroup（这个ServerGroup的ID会记录在DB中），两个虚拟机就会创建在不同的host上。</strong></p><p><strong><em> 实现功能的 haproxy 和 keepalived 是在虚机的 amphora namespace 中。网络拓扑实现并没有使用 Linux bridge 或者 OVS 实现，而是由 namespace 独占一个网卡资源（一般是 eth1，用于 vrrp ，eth1:0 用于 vip），即 eth0 属于虚拟机主体，映射 neutron 中管理 lb 网络（lb-mgmt-net）的 port ，而 namespace 直接映射租户 vip 需求的 subnet。</em></strong></p><h4 id="listener"><a href="#listener" class="headerlink" title="listener"></a>listener</h4><p>监听器即一个不断在端口上检查连接请求的进程，一旦发现客户端的连接请求，则会按照你设定的规则将连接请求转发给后端的服务器池。一个监听器关联一个端口，如：HTTP(80)、HTTPS（443），当使用HTTPS，则需要上传用于https 加密和解密的证书到监听器中。</p><p>即虚拟机里面的一个 haproxy 进程，frontend 配置。</p><p>*<em>支持 L7 Policy</em></p><h4 id="pool"><a href="#pool" class="headerlink" title="pool"></a>pool</h4><p>服务器池即后端一组提供服务的实例，每个成员都是一个IP地址+4层的端口。<br>octavia 实现为 haproxy 配置中的一个 backend。</p><h4 id="member"><a href="#member" class="headerlink" title="member"></a>member</h4><p>backend 配置中的一个 member，即真正承载内容的后端服务器。</p><h4 id="health-monitor"><a href="#health-monitor" class="headerlink" title="health-monitor"></a>health-monitor</h4><p>健康检测的机制是指是负载均衡器通过定期的心跳信号检测服务器池中的服务器运行状态，从而排除掉后端故障的主机，保证服务整体正常。</p><p>支持的健康检测方式包括 ICMP、TCP、HTTP几种。</p><ul><li>ICMP是最简单的，通过ping 和echo的方式，看根据服务器是否响应。只要服务器操作系统TCP/IP协议栈运行正常，网卡不出问题，服务器到负载均衡之间的网络正常，ICMP的方式都起到良好的作用，但以上情况都不能代表服务器上面运行的应用是正常的。</li><li>TCP是4层的检测方式，相比ICMP、TCP会请求主机的特定端口，看特定的端口能否正常响应。</li><li>HTTP的方式则更进一筹，会通过get特定的页面，根据HTTP的返回代码来判断应用是否正常。</li></ul><p>健康监测的指标越精确，越能反映服务的实际响应情况，如果是web服务，最好是使用HTTP的方式，这样检测结果更可信。</p><h4 id="health-manager"><a href="#health-manager" class="headerlink" title="health-manager"></a>health-manager</h4><p>检查虚拟机状态，和虚拟机中的octavia agent通信，来更新各个组件的状态。<br><strong><em>注意和 health-monitor 监控对象的不同。</em></strong></p><h4 id="amphora-agent"><a href="#amphora-agent" class="headerlink" title="amphora-agent"></a>amphora-agent</h4><p>位于虚拟机内部，对下是接受指令操作下层的 haproxy 软件，对上是和 health-manager 通信汇报各种情况。</p><h3 id="amphora-镜像制作"><a href="#amphora-镜像制作" class="headerlink" title="amphora 镜像制作"></a>amphora 镜像制作</h3><p>在 部署完 octavia 真正运行服务之前，最重要的一个工作就是准备镜像。这个镜像是用来创建 amphorae service 虚拟机。<br>octavia repo 中提供了创建 haproxy 镜像的脚本可以直接使用：</p><blockquote><p>$ ./diskimage-create/diskimage-create.sh</p></blockquote><p>目前直接使用 octavia 的代码来制作镜像会出现问题，另外因为在 centos 上以 ubuntu 为 base 制作镜像会出现包验证和权限的问题，所以将 base 改为 centos。<br>需要以下修改，涉及两方面的代码： <strong><em> dib  octavia </em></strong></p><h4 id="dib"><a href="#dib" class="headerlink" title="dib"></a>dib</h4><p>octv ia 需要使用 pypi（element）更换 pip 源，因此需要将 pypi 指的源变更为国内源</p><ul><li>(方式一)  export DIB_PYPI_MIRROR_URL (测试时未生效)</li><li>(方式二)  pre-install.d/00-configure-pypi-mirror:46: indices.append(‘<a href="https://pypi.python.org/simple&#39;" target="_blank" rel="noopener">https://pypi.python.org/simple&#39;</a>)</li></ul><h4 id="octavia"><a href="#octavia" class="headerlink" title="octavia"></a>octavia</h4><ul><li>首先需要引入 pypi，可以使用 export DIB_LOCAL_ELEMENTS</li><li>接着将默认 base 改为 centos，或者使用 octvia 脚本中预留的 -i 参数</li><li>最后修改一处代码：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">@@ -12,9 +12,9 @@ AMP_VENV=/opt/amphora-agent-venv</span><br><span class="line"># Create a virtual environment to contain the amphora agent</span><br><span class="line">$&#123;DIB_PYTHON&#125; -m virtualenv $AMP_VENV</span><br><span class="line"></span><br><span class="line">+$AMP_VENV/bin/pip install --upgrade pbr</span><br><span class="line"></span><br><span class="line"># Link the amphora-agent out to /usr/local/bin where the startup scripts look</span><br><span class="line">ln -s $AMP_VENV/bin/amphora-agent /usr/local/bin/amphora-agent || true</span><br></pre></td></tr></table></figure><h3 id="Octavia与Neutron的关系"><a href="#Octavia与Neutron的关系" class="headerlink" title="Octavia与Neutron的关系"></a>Octavia与Neutron的关系</h3><ul><li><p>Before Pike</p><blockquote><p>lbaas v1: This is the original Neutron LBaaS, and what you see in Horizon or in the neutron CLI as “lb-*”. It has an haproxy backend, and a few vendors supporting it. Feature-wise, it’s basically a byte pump.</p></blockquote><blockquote><p>lbaas v2: This is the “new” Neutron LBaaS, and is in the neutron CLI as “lbaas-*” (it’s not yet in Horizon.) It first shipped in Kilo. It re-organizes the objects, and adds TLS termination support, and has L7 plus other new goodies planned in Liberty. It similarly has an haproxy reference backend with a few vendors supporting it.</p></blockquote><blockquote><p>octavia: Think of this as a service vm framework that is specific to lbaas, to implement lbaas via nova VMs instead of “lbaas agents”. It is expected to be the reference backend implementation for neutron lbaasv2 in liberty. It could also be used as its own front-end, and/or given drivers to be a load balancing framework completely outside neutron/nova, though that is not the present direction of development.</p></blockquote></li><li><p>After Pike<br>从 Pike 版本开始，octavia 可以作为一个独立服务部署而不依赖于 neutron，neutron 对于 octavia 开说只是下层的一个服务而已。所以，也就不会有两份数据库记录，不用担心数据不一致的问题。</p></li></ul><h3 id="逻辑架构图"><a href="#逻辑架构图" class="headerlink" title="逻辑架构图"></a>逻辑架构图</h3><p><img src="/images/Octavia调研/逻辑架构图.png" alt="逻辑架构图"></p><h3 id="参考连接"><a href="#参考连接" class="headerlink" title="参考连接"></a>参考连接</h3><p><a href="https://docs.openstack.org/octavia/latest/" target="_blank" rel="noopener">https://docs.openstack.org/octavia/latest/</a><br><a href="https://lingxiankong.github.io/2017-09-13-octavia.html" target="_blank" rel="noopener">https://lingxiankong.github.io/2017-09-13-octavia.html</a><br><a href="https://www.cnblogs.com/pmyewei/p/7376921.html" target="_blank" rel="noopener">https://www.cnblogs.com/pmyewei/p/7376921.html</a><br><a href="http://www.cnblogs.com/sammyliu/p/4656176.html" target="_blank" rel="noopener">http://www.cnblogs.com/sammyliu/p/4656176.html</a></p>]]></content>
      
      
      <categories>
          
          <category> technology </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openstack </tag>
            
            <tag> neutron </tag>
            
            <tag> octavia </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Service Function Chaining</title>
      <link href="/2018/06/14/ServiceFunctionChaining/"/>
      <url>/2018/06/14/ServiceFunctionChaining/</url>
      
        <content type="html"><![CDATA[<h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>Neutron的SFC (Service Function Chaining, SFC, 业务链)是由华为主导并开发的一个neutron下的服务框架。<br>其目的是动态建立服务链使不同租户的流量可以按照不同顺序导向不同的服务功能模块。其概念类似于策略路由, 即SFC使网络报文流量走特定的路径,而不是通过IP目的地址来查看路由表得最终目的地。</p><blockquote><p>Service function chain (SFC) essentially refers to the software-defined networking (SDN) version of policy-based routing (PBR).</p></blockquote><p><strong><em>需要说明的是，虽然将 SFC 解释为软件定义实现的 PBR ，但其技术实现并不涉及路由行为，是在二层上根据流量特征将流量导向另外一个 port 。</em></strong></p><h3 id="架构"><a href="#架构" class="headerlink" title="架构"></a>架构</h3><p><img src="/images/ServiceFunctionChaining/port-chain-architecture-diagram.png" alt="port-chain-architecture-diagram.png"><br><img src="/images/ServiceFunctionChaining/port-chain-diagram.png" alt="port-chain-diagram.png"></p><p>OpenStack网络服务和OpenStack计算实例通过端口连接到一个虚拟网络，使得仅使用端口创建服务链的流量转向模型成为可能。 将这些端口包括在端口链中使得能够通过提供服务功能的一个或多个实例来引导流量。</p><p>端口链包含：</p><ul><li>定义服务功能顺序的一组端口。</li><li>一组流分类器，用于指定进入链中的分类流量。</li></ul><p>如果一个业务功能涉及一对端口，则第一个端口作为业务功能的入端口，第二个端口作为出端口。如果两个端口使用相同的值，则它们作为单个虚拟双向端口。</p><p><strong>端口链</strong>是一个单向的服务链。第一个端口作为服务功能链的头部，第二个端口作为服务功能链的尾部。双向服务功能链由两个单向端口链组成。</p><p><strong>流分类器</strong>只能属于一个端口链，以防止流中的哪个链应该处理分组的歧义。但是，可以将多个流分类器与端口链关联，因为多个流可以请求相同的服务功能路径。</p><p>目前，SFC缺乏对多项目服务功能的支持。</p><p>端口链插件支持后台服务提供商，包括OVS驱动程序和各种SDN控制器驱动程序。通用驱动程序API使不同的驱动程序能够为服务链路径呈现提供不同的实现。</p><h3 id="涉及资源"><a href="#涉及资源" class="headerlink" title="涉及资源"></a>涉及资源</h3><p>（资源指SFC功能中需要定义的一些虚拟组件。）</p><h4 id="Port-pair"><a href="#Port-pair" class="headerlink" title="Port pair"></a>Port pair</h4><p>端口对表示包括入口（ingress port）和出口（egress port）端口的服务功能实例。 包含双向端口的服务功能使用相同的入口和出口端口。</p><p>“service_function_parameters”属性包括一个或多个服务功能的参数。 目前，它仅支持确定分组与链的关联的相关参数。 对于缺少对相关性（如NSH）的支持的传统服务功能，此参数默认为“none”。 如果设置为无，数据面板实现必须提供服务功能代理功能。</p><h4 id="Port-pair-group"><a href="#Port-pair-group" class="headerlink" title="Port pair group"></a>Port pair group</h4><p>端口对组可能包含一个或多个端口对。</p><p>多个端口对通过一组功能相当的服务功能实现负载平衡/分配。</p><h4 id="Flow-classifier"><a href="#Flow-classifier" class="headerlink" title="Flow classifier"></a>Flow classifier</h4><p>流分类器是比较重要的部分，定义了哪些对应的流量需要处理，因此详细讲解一些其配置参数。</p><ul><li>id - 流分类器的IP</li><li>project_id - 流分类器所属项目的ID</li><li>name - 可视化名称</li><li>description - 可视化描述</li><li>ethertype - 以太网协议类型 (IPv4/IPv6)</li><li>protocol - IP 协议类型</li><li>source_port_range_min - 协议（TCP/UDP）最小源端口号</li><li>source_port_range_max - 协议（TCP/UDP）最大源端口号</li><li>destination_port_range_min - 协议（TCP/UDP）最小目的端口号</li><li>destination_port_range_max - 协议（TCP/UDP）最大目的端口号</li><li>source_ip_prefix - 具体源IP地址或子网</li><li>destination_ip_prefix - 具体目的IP地址或子网</li><li>logical_source_port - neutron中的port id 或 port name。driver为ovs 时，此项为必填项。</li><li>logical_destination_port - neutron中的port id 或 port name。</li><li>l7_parameters - 7层协议的参数字典。</li></ul><p>源属性的组合定义了流的来源。 目的地属性的组合定义了流的目的地。</p><p>“l7_parameters”属性是一个占位符，可用于支持使用第7层字段（如URL）进行流分类。 如果未指定，则logical_source_port和logical_destination_port属性默认为none。</p><p>ethertype属性默认为IPv4，所有其他属性默认为通配符值。</p><h4 id="Port-chain"><a href="#Port-chain" class="headerlink" title="Port chain"></a>Port chain</h4><p>实际生效配置，比较重要的三个参数为：</p><ul><li>port_pair_groups - 端口对组列表</li><li>flow_classifiers - 流分类器列表</li><li>chain_parameters - 链属性字典</li></ul><p>一个端口链由一系列端口对组组成。每个端口对组都是端口链路中的一跳。 一组端口对代表提供等同功能的服务功能。 例如，一组防火墙服务功能。</p><p>一个端口链可以包含多个流分类器。 省略流分类器可以有效地防止通过端口链的流量转向。</p><p>“chain_parameters”属性包含一个或多个端口链参数。 目前，它仅支持默认为mpls的关联参数，以便与Open vSwitch（OVS）功能保持一致。 相关参数的未来值可以包括网络服务报头（NSH）。</p><h3 id="原理分析"><a href="#原理分析" class="headerlink" title="原理分析"></a>原理分析</h3><h4 id="逻辑实现"><a href="#逻辑实现" class="headerlink" title="逻辑实现"></a>逻辑实现</h4><p>SFC 分为两大模块: 流分类( flow classifier )和 sfc (业务链) ，2大模块各自可以配置独立的驱动， 目前都只是通过 ovs 实现。按照官方想法，以后流分类( sg、fw,、qos、sfc 等模块均包含流分类)这个功能会抽象出来统一维护。</p><p>示例如下，创建业务链串联 sf1, sf2, sf3 三台虚拟机, 并从VM1处发包进入业务链:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">         +------+     +------+        +------+</span><br><span class="line">         | SF1  |     | SF2  |        | SF3  |</span><br><span class="line">         +------+     +------+        +------+</span><br><span class="line">         p1|   |p2    p3|   |p4       p5|   |p6</span><br><span class="line">           |   |        |   |           |   |</span><br><span class="line">VM 1--&gt;----+   +--------+   +-----------+   +----&gt;</span><br></pre></td></tr></table></figure></p><ul><li><p>流分类<br>根据流量特征（详见上文 Flowclassifier）定义需要进行引流的流量，与 port chain 的关系为 n:1。</p></li><li><p>业务链<br>如上图示例所示，每个 SF 拥有一对定义了 ingress 和 egress 的 port pair （可以是同一个端口），它们在二层上依次串联起来。</p></li></ul><h4 id="底层实现"><a href="#底层实现" class="headerlink" title="底层实现"></a>底层实现</h4><p>通过在 ovs 上复写 mac 实现引流，具体报文封装和解封装过程如下：</p><p><em>同上文逻辑实现中的示例不一样，上文全是 service function 形成的一条业务链，这里只有 VM4 为 service function ，M2、M3、M5 为宿主机，M1、M6 分别为流量的源、目的虚机。</em></p><p><img src="/images/ServiceFunctionChaining/SFC封装和解封装过程.png" alt="SFC封装和解封装过程.png"></p><p>附：<br>br-int flow 参考信息<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">每一跳入口的sfc flow匹配和负载均衡, 在table:0中实现:</span><br><span class="line">table=0, priority=30,ip,in_port=997 ,nw_src=1.0.0.0/24 actions=group:1【匹配p1端口和流分类规则, 转发到group:1，做第1跳的出口负载均衡,并转发给第1个NFV虚拟机】</span><br><span class="line">table=0, priority=30,ip,in_port=998 ,nw_src=1.0.0.0/24 actions=group:2【匹配p2端口和流分类规则, 转发到group:2，做第2跳的出口负载均衡,并转发给第2个NFV虚拟机】</span><br><span class="line">table=0, priority=30,ip,in_port=1000 ,nw_src=1.0.0.0/24 actions=group:3【匹配p4端口和流分类规则, 转发到group:2，做第3跳的出口负载均衡,并转发给第3个NFV虚拟机】</span><br><span class="line">table=0, priority=30,ip,in_port=1002 ,nw_src=1.0.0.0/24 actions=NORMAL 【匹配p6(即业务链出端口), 然后走正常转发流程】</span><br><span class="line"></span><br><span class="line">每一跳出口的sfc报头封装, 在table:5中实现:</span><br><span class="line">table=5, priority=0,ip,dl_dst=fa:16:3e:4d:10:37 actions=push_mpls:0x8847,set_field:511-&gt;mpls_label,set_mpls_ttl(255),push_vlan:0x8100,set_field:4150-&gt;vlan_vid,resubmit(,10) 【匹配发往p1 tap的报文,封装sfc头(这里是mpls),并打上本地vlan, 发往远端计算节点或发给本地table:10】</span><br><span class="line">table=5, priority=0,ip,dl_dst=fa:16:3e:b5:64:7e actions=push_mpls:0x8847,set_field:510-&gt;mpls_label,set_mpls_ttl(254),push_vlan:0x8100,set_field:4128-&gt;vlan_vid,resubmit(,10) 【匹配发往p3 tap的报文,封装sfc头(这里是mpls),并打上本地vlan, 发往远端计算节点或发给本地table:10】</span><br><span class="line">table=5, priority=0,ip,dl_dst=fa:16:3e:51:39:b6 actions=push_mpls:0x8847,set_field:509-&gt;mpls_label,set_mpls_ttl(253),push_vlan:0x8100,set_field:4169-&gt;vlan_vid,resubmit(,10) 【匹配发往p5 tap的报文,封装sfc头(这里是mpls),并打上本地vlan, 发往远端计算节点或发给本地table:10】</span><br><span class="line"></span><br><span class="line">本地sfc报头解封装,并发往nfv虚拟机, 在table:10中实现:</span><br><span class="line">table=10, priority=1,mpls,dl_vlan=54,dl_dst=fa:16:3e:4d:10:37,mpls_label=511 actions=pop_vlan,pop_mpls:0x0800,output:997【p1在本地, 匹配目的mac为p1的业务链1报文, mpls解封装, 并发送p1】</span><br><span class="line">table=10, priority=1,mpls,dl_vlan=32,dl_dst=fa:16:3e:b5:64:7e,mpls_label=510 actions=pop_vlan,pop_mpls:0x0800,output:999【p3在本地, 匹配目的mac为p1的业务链1报文, mpls解封装, 并发送p3】</span><br><span class="line">table=10, priority=1,mpls,dl_vlan=73,dl_dst=fa:16:3e:51:39:b6,mpls_label=509 actions=pop_vlan,pop_mpls:0x0800,output:1001【p5在本地, 匹配目的mac为p5的业务链1报文, mpls解封装, 并发送p5】</span><br></pre></td></tr></table></figure></p><p>br-int group 参考信息, 这里主要是用来在每个sf出口处做负载均衡的:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">group_id=1,type=select,bucket=actions=set_field:fa:16:3e:4d:10:37-&gt;eth_dst,resubmit(,5)【修改目的mac为p1 tap口，并转发到table 5】</span><br><span class="line">group_id=2,type=select,bucket=actions=set_field:fa:16:3e:b5:64:7e-&gt;eth_dst,resubmit(,5)【修改目的mac为p3 tap口，并转发到table 5】</span><br><span class="line">group_id=3,type=select,bucket=actions=set_field:fa:16:3e:51:39:b6-&gt;eth_dst,resubmit(,5)【修改目的mac为p5 tap口，并转发到table 5】</span><br></pre></td></tr></table></figure></p><h3 id="限制"><a href="#限制" class="headerlink" title="限制"></a>限制</h3><ul><li>driver 选择为 ovs 时，logical-source-port 为必选项</li><li>二层引流，业务链的起始口必须和 logical-source-port 在一个子网中, 两个 service function 相连的 port 也必须在同一个子网中</li></ul><h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h3><p><a href="https://docs.openstack.org/neutron/queens/admin/config-sfc.html" target="_blank" rel="noopener">https://docs.openstack.org/neutron/queens/admin/config-sfc.html</a><br><a href="https://wiki.openstack.org/wiki/Neutron/ServiceInsertionAndChaining" target="_blank" rel="noopener">https://wiki.openstack.org/wiki/Neutron/ServiceInsertionAndChaining</a><br><a href="https://blog.csdn.net/bc_vnetwork/article/details/65630475" target="_blank" rel="noopener">https://blog.csdn.net/bc_vnetwork/article/details/65630475</a></p>]]></content>
      
      
      <categories>
          
          <category> technology </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openstack </tag>
            
            <tag> neutron </tag>
            
            <tag> sfc </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>devstack网络实现简述</title>
      <link href="/2018/05/26/devstack%E7%BD%91%E7%BB%9C%E5%AE%9E%E7%8E%B0%E7%AE%80%E8%BF%B0/"/>
      <url>/2018/05/26/devstack%E7%BD%91%E7%BB%9C%E5%AE%9E%E7%8E%B0%E7%AE%80%E8%BF%B0/</url>
      
        <content type="html"><![CDATA[<p>刚接触devstack，可能第一步发愁的就是写 local.conf 了吧。<br>反正我是在部署前为了让网络的连通性得到保障，根据实际环境在网络规划面前做了考虑。下面是网络方面的部分配置：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">HOST_IP=192.168.100.15  #宿主机接口IP地址</span><br><span class="line">FLOATING_RANGE=&quot;192.168.100.0/24&quot;  #provide网络CIDR</span><br><span class="line">PUBLIC_NETWORK_GATEWAY=&quot;192.168.100.1&quot;  #provide网络网关</span><br><span class="line">FIXED_RANGE=&quot;192.168.10.0/24&quot;  #self-service网络CIDR</span><br><span class="line">NETWORK_GATEWAY=&quot;192.168.10.1&quot;  #self-service网络网关</span><br></pre></td></tr></table></figure></p><p>当时我为了建立的虚机可以访问外网，特意将 FLOATING_RANGE 设置为和物理机所在网络同一网段。后来证明我是 too young too simple，但是我的这个方案除了后续需要手动修改，比较麻烦，但是也有优势所在，比如分配的 fip 可以被外部主动访问，所以姑且来谈一谈吧。</p><p>照这样部署完成后，确实生成了一个 CIDR 为 192.168.100.0/24 的 public 网络，作为 provide 提供外部网络连通。<br>但仔细观察，网关设置在了 br-ex 这个 port 上，这显然是不合理的，该网络为 provide 网络，和宿主机所在网络同处于一个广播域，该网络网关应该位于 underlay 网络的三层设备上。<br>因此，为了使 public 可以正常使用，做了以下操作：</p><ol><li>去掉物理机 eth0 上的IP地址（注意会断掉 ssh 连接）</li><li>将 eth0 绑定至 br-ex 桥上，成为 br-ex 桥上的一个 port</li><li>给 br-ex 桥上的 br-ex 这个 port 配上原先物理接口上的IP，配置文件如下：</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"># 编辑 /etc/sysconfig/network-scripts/ifcfg-br-ex</span><br><span class="line"># 将原先宿主机接口的 ip 填写在对应区域</span><br><span class="line"></span><br><span class="line">DEVICE=br-ex</span><br><span class="line">ONBOOT=yes</span><br><span class="line">HOTPLUG=no</span><br><span class="line">NM_CONTROLLED=no</span><br><span class="line">PEERDNS=no</span><br><span class="line">DEVICETYPE=ovs</span><br><span class="line">TYPE=OVSBridge</span><br><span class="line">BOOTPROTO=static</span><br><span class="line">IPADDR=                  # 原先宿主机接口网络的地址</span><br><span class="line">NETMASK=                 # 原先宿主机接口网络的掩码</span><br><span class="line">GATEWAY=                 # 原先宿主机接口的网关</span><br><span class="line"></span><br><span class="line"># 对应的物理网卡配置，例如 eth0 为 external 网桥的物理网卡。编辑 /etc/sysconfig/network-scripts/ifcfg-eth0</span><br><span class="line"># (其实这一步是使用配置文件将把宿主机的 eth0 接口添加至 br-ex 网桥的这个操作固化，以免重启导致 port 掉了)</span><br><span class="line"></span><br><span class="line">DEVICE=eth0</span><br><span class="line">ONBOOT=yes</span><br><span class="line">HOTPLUG=no</span><br><span class="line">NM_CONTROLLED=no</span><br><span class="line">PEERDNS=no</span><br><span class="line">DEVICETYPE=ovs</span><br><span class="line">TYPE=OVSPort</span><br><span class="line">OVS_BRIDGE=br-ex</span><br><span class="line">BOOTPROTO=none</span><br><span class="line"></span><br><span class="line"># 如果部署环境使用 bond，就需要创建 bond-port</span><br><span class="line"># 例如 eth1，eth2 为此 bond port。编辑 /etc/sysconfig/network-scripts/ifcfg-bond1</span><br><span class="line"></span><br><span class="line"> DEVICE=bond1</span><br><span class="line"> ONBOOT=yes</span><br><span class="line"> HOTPLUG=no</span><br><span class="line"> NM_CONTROLLED=no</span><br><span class="line"> PEERDNS=no</span><br><span class="line"> DEVICETYPE=ovs</span><br><span class="line"> TYPE=OVSPort</span><br><span class="line"> OVS_BRIDGE=br-ex             # ovs 桥的名字</span><br><span class="line"> DEVICETYPE=ovs</span><br><span class="line"> TYPE=OVSBond</span><br><span class="line"> BOND_IFACES=&quot;eth1 eth2&quot;          # bond 的物理网卡</span><br><span class="line"> OVS_OPTIONS=&quot;lacp=active bond_mode=balance-slb&quot;        # bond 的类型</span><br><span class="line"></span><br><span class="line"> # 对应的物理网卡 eth1 的配置，编辑 /etc/sysconfig/network-scripts/ifcfg-eth1</span><br><span class="line"></span><br><span class="line"> DEVICE=eth1</span><br><span class="line"> ONBOOT=yes</span><br><span class="line"> HOTPLUG=no</span><br><span class="line"> NM_CONTROLLED=no</span><br><span class="line"> PEERDNS=no</span><br><span class="line"> BOOTPROTO=none</span><br><span class="line"></span><br><span class="line"># 对应的物理网卡 eth2 的配置，编辑 /etc/sysconfig/network-scripts/ifcfg-eth2</span><br><span class="line"></span><br><span class="line"> DEVICE=eth2</span><br><span class="line"> ONBOOT=yes</span><br><span class="line"> HOTPLUG=no</span><br><span class="line"> NM_CONTROLLED=no</span><br><span class="line"> PEERDNS=no</span><br><span class="line"> BOOTPROTO=none</span><br></pre></td></tr></table></figure><ol start="4"><li>禁用其他没有使用到的网卡，并重启网络服务是配置生效</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># vim /etc/sysconfig/network-scripts/ifcfg-enoX</span><br><span class="line"></span><br><span class="line">BOOTPROTO=&quot;none&quot;</span><br><span class="line">ONBOOT=&quot;no&quot;</span><br><span class="line"></span><br><span class="line"># systemctl restart network</span><br></pre></td></tr></table></figure><p>至此，使 qrouter 关联该网络后，虚机的南北流量就可以经过 qrouter 路由并进行 snat 后找到该物理网络的正确网关，实现对外网的访问。<br>需要注意的是，建议使用真实物理机搭建 devstack 环境，而若使用 openstack 环境虚机，再在里面搭建 devstack 环境，还需要一些另外处理。<br>比如，上文中移动 IP 导致 mac 地址变化，宿主机也需要转发数据，则需要关闭该 port 的安全组和端口安全；此时获取的 fip 是外层 openstack 的 self-service 网络的ip，需要避免冲突和再次进行外层的 fip 映射。</p><hr><p>之后不久排查问题，偶然发现在 iptables 的 nat 表里存在这样一条规则：</p><p><img src="https://sirius21c-1256566528.cos.ap-beijing.myqcloud.com/openstack/devstack/devstack%E7%9A%84%E8%87%AA%E5%AE%9A%E4%B9%89public%E7%BD%91%E7%BB%9C%E5%88%A9%E7%94%A8snat%E5%92%8C%E5%A4%96%E9%83%A8%E8%BF%9E%E9%80%9A.png" alt="devstack的自定义public网络利用snat和外部连通"></p><p>原来 devstack 中的用来连接外部网络的 public 网络是可以自定义的，无需考虑实际环境，之后通过 snat 将原地址转换宿主机物理接口的 ip 与外部网络通信。即虚机的包经过了 qrouter 的 snat ，又再次经过宿主机上的一次 snat 。<br>显而易见，这样的方案， fip 的作用在 devstack 节点外是不生效的。</p><p>另外需要注意的是，filter 表有一条规则会将这样的数据 drop，细节记不太清了，需要把这条规则删除，内部虚机才能正常主动访问外网。</p>]]></content>
      
      
      <categories>
          
          <category> technology </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openstack </tag>
            
            <tag> neutron </tag>
            
            <tag> devstack </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ovs默认安全组流表分析</title>
      <link href="/2018/05/21/ovs%E9%BB%98%E8%AE%A4%E5%AE%89%E5%85%A8%E7%BB%84%E6%B5%81%E8%A1%A8%E5%88%86%E6%9E%90/"/>
      <url>/2018/05/21/ovs%E9%BB%98%E8%AE%A4%E5%AE%89%E5%85%A8%E7%BB%84%E6%B5%81%E8%A1%A8%E5%88%86%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<p>今天老大说openstack的默认安全组会使ovs产生大量流表，需要优化。So，开始分析一波吧 —- 基于 Q 版 qs。</p><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>由于 Open vSwitch 无法直接与 Linux iptables 进行交互，因此为了实现安全组，之前采用了在 br-int 与实例之间增加一个 Linux 网桥来实现基于 iptables 的安全组功能。通常情况下，实例与基础物理网络之间的附加组件越多，性能与可扩展性越低。为了缓解这一问题，Neutron OpenvSwitch Agent 中实现了基于 OVS 流表的安全组驱动，当然这个驱动是可选的。</p><h3 id="使用条件"><a href="#使用条件" class="headerlink" title="使用条件"></a>使用条件</h3><p>OVS 原生防火前要求 Linux 内核与用户控件支持 conntrack，OVS 版本要求 &gt;= 2.5.0，内核满足如下要求之一即可：</p><ul><li>内核版本大于等于 4.3，支持 conntrack；或：</li><li>内核版本 大于等于 3.3，小于 4.3 ，不支持 conntrack， 需要构建 OVS 模块</li></ul><h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><p>刚推好的干净环境，1<em>compute+1</em>control，查看 control 上 br-int 和 br-ex 的流表</p><ul><li>br-int<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># ovs-ofctl dump-flows br-int</span><br><span class="line">cookie=0x99088c4baff699c5, duration=16812.012s, table=0, n_packets=100745, n_bytes=5440626, priority=2,in_port=&quot;int-br-ex&quot; actions=drop</span><br><span class="line">cookie=0x99088c4baff699c5, duration=16812.591s, table=0, n_packets=0, n_bytes=0, priority=0 actions=resubmit(,60)</span><br><span class="line">cookie=0x99088c4baff699c5, duration=16812.599s, table=23, n_packets=0, n_bytes=0, priority=0 actions=drop</span><br><span class="line">cookie=0x99088c4baff699c5, duration=16812.575s, table=24, n_packets=0, n_bytes=0, priority=0 actions=drop</span><br><span class="line">cookie=0x99088c4baff699c5, duration=16812.581s, table=60, n_packets=0, n_bytes=0, priority=3 actions=NORMAL</span><br></pre></td></tr></table></figure></li></ul><p>关于正常的二层自学习、转发和一些异常包的 drop 处理。0.0 为什么从 “int-br-ex” 进来的包全部drop，还没有建立会产生相关流量的网络环境？！待跟进……</p><ul><li>br-ex<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># ovs-ofctl dump-flows br-ex</span><br><span class="line">cookie=0x1d4bdcc47e84eff4, duration=18576.503s, table=0, n_packets=0, n_bytes=0, priority=2,in_port=&quot;phy-br-ex&quot; actions=drop</span><br><span class="line">cookie=0x1d4bdcc47e84eff4, duration=18576.548s, table=0, n_packets=302732, n_bytes=39256436, priority=0 actions=NORMAL</span><br></pre></td></tr></table></figure></li></ul><p>同样一些基本的处理，和疑问。</p><ul><li>br-tun<br>顺便看看，暂不讨论<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># ovs-ofctl dump-flows br-tun</span><br><span class="line"> cookie=0xafcd0599d35d5ef8, duration=19329.565s, table=0, n_packets=0, n_bytes=0, priority=1,in_port=&quot;patch-int&quot; actions=resubmit(,2)</span><br><span class="line"> cookie=0xafcd0599d35d5ef8, duration=19319.066s, table=0, n_packets=0, n_bytes=0, priority=1,in_port=&quot;vxlan-ac10000a&quot; actions=resubmit(,4)</span><br><span class="line"> cookie=0xafcd0599d35d5ef8, duration=19329.562s, table=0, n_packets=0, n_bytes=0, priority=0 actions=drop</span><br><span class="line"> cookie=0xafcd0599d35d5ef8, duration=19329.559s, table=2, n_packets=0, n_bytes=0, priority=0,dl_dst=00:00:00:00:00:00/01:00:00:00:00:00 actions=resubmit(,20)</span><br><span class="line"> cookie=0xafcd0599d35d5ef8, duration=19329.553s, table=2, n_packets=0, n_bytes=0, priority=0,dl_dst=01:00:00:00:00:00/01:00:00:00:00:00 actions=resubmit(,22)</span><br><span class="line"> cookie=0xafcd0599d35d5ef8, duration=19329.550s, table=3, n_packets=0, n_bytes=0, priority=0 actions=drop</span><br><span class="line"> cookie=0xafcd0599d35d5ef8, duration=19329.547s, table=4, n_packets=0, n_bytes=0, priority=0 actions=drop</span><br><span class="line"> cookie=0xafcd0599d35d5ef8, duration=19329.545s, table=6, n_packets=0, n_bytes=0, priority=0 actions=drop</span><br><span class="line"> cookie=0xafcd0599d35d5ef8, duration=19329.541s, table=10, n_packets=0, n_bytes=0, priority=1 actions=learn(table=20,hard_timeout=300,priority=1,cookie=0xafcd0599d35d5ef8,NXM_OF_VLAN_TCI[0..11],NXM_OF_ETH_DST[]=NXM_OF_ETH_SRC[],load:0-&gt;NXM_OF_VLAN_TCI[],load:NXM_NX_TUN_ID[]-&gt;NXM_NX_TUN_ID[],output:OXM_OF_IN_PORT[]),output:&quot;patch-int&quot;</span><br><span class="line"> cookie=0xafcd0599d35d5ef8, duration=19329.534s, table=20, n_packets=0, n_bytes=0, priority=0 actions=resubmit(,22)</span><br><span class="line"> cookie=0xafcd0599d35d5ef8, duration=19329.531s, table=22, n_packets=0, n_bytes=0, priority=0 actions=drop</span><br></pre></td></tr></table></figure></li></ul><p>下图的逻辑基本全了<br><img src="https://sirius21c-1256566528.cos.ap-beijing.myqcloud.com/OVS/ovs_br-tun_flow.jpg" alt="ovs_br-tun_flow"></p><p>next, nova boot 一个虚机：</p><p><font face="微软雅黑" size="2">（应该使用devstack，自动完成初始化）</font></p><ol><li>上传 cirros 镜像<br><code># wget -P http://download.cirros-cloud.net/0.3.5/cirros-0.3.5-x86_64-disk.img</code><br><code># openstack image create &quot;cirros&quot; --file cirros --disk-format qcow2 --container-format bare --public</code></li><li>创建 flavor 和 network<br><code># openstack flavor create --vcpu 1 --disk 30 --ram 1024 small</code><br><code># neutron net-create ... &amp;&amp; neutron subnet-create ...</code></li><li>启动虚机<br><code># nova boot --flavor small --image cirros --nic net-name=private1 client1</code></li></ol><p>OK…我应该在compute上作对比的…br-ex没有改变，以下是启动虚机后br-int的流表：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">cookie=0xa5efb0c04a407ee7, duration=1387.488s, table=0, n_packets=0, n_bytes=0, priority=10,icmp6,in_port=&quot;qvof6079278-43&quot;,icmp_type=136 actions=resubmit(,24)</span><br><span class="line">cookie=0xa5efb0c04a407ee7, duration=1387.474s, table=0, n_packets=81, n_bytes=3402, priority=10,arp,in_port=&quot;qvof6079278-43&quot; actions=resubmit(,24)</span><br><span class="line">cookie=0xa5efb0c04a407ee7, duration=24153.973s, table=0, n_packets=144749, n_bytes=8299518, priority=2,in_port=&quot;int-br-ex&quot; actions=drop</span><br><span class="line">cookie=0xa5efb0c04a407ee7, duration=1387.504s, table=0, n_packets=8, n_bytes=1144, priority=9,in_port=&quot;qvof6079278-43&quot; actions=resubmit(,25)</span><br><span class="line">cookie=0xa5efb0c04a407ee7, duration=24245.788s, table=0, n_packets=2, n_bytes=727, priority=0 actions=resubmit(,60)</span><br><span class="line">cookie=0xa5efb0c04a407ee7, duration=24245.792s, table=23, n_packets=0, n_bytes=0, priority=0 actions=drop</span><br><span class="line">cookie=0xa5efb0c04a407ee7, duration=1387.498s, table=24, n_packets=0, n_bytes=0, priority=2,icmp6,in_port=&quot;qvof6079278-43&quot;,icmp_type=136,nd_target=fe80::f816:3eff:fe14:a50c actions=resubmit(,60)</span><br><span class="line">cookie=0xa5efb0c04a407ee7, duration=1387.481s, table=24, n_packets=81, n_bytes=3402, priority=2,arp,in_port=&quot;qvof6079278-43&quot;,arp_spa=192.168.1.10 actions=resubmit(,25)</span><br><span class="line">cookie=0xa5efb0c04a407ee7, duration=24245.778s, table=24, n_packets=0, n_bytes=0, priority=0 actions=drop</span><br><span class="line">cookie=0xa5efb0c04a407ee7, duration=1387.515s, table=25, n_packets=89, n_bytes=4546, priority=2,in_port=&quot;qvof6079278-43&quot;,dl_src=fa:16:3e:14:a5:0c actions=resubmit(,60)</span><br><span class="line">cookie=0xa5efb0c04a407ee7, duration=24245.783s, table=60, n_packets=91, n_bytes=5273, priority=3 actions=NORMAL</span><br></pre></td></tr></table></figure></p><p>看见了”qvoxxxxx”，这就说明还是启用了 linux bridge 做 security group,接着看一下果然存在一个linux bridge。<br>嗯…现在需要修改配置文件，使ovs去实现安全组。</p><ol><li>在 /etc/neutron/plugins/ml2 目录下修改 openvswitch_agent.ini 和 ml2_conf.ini 文件<blockquote><p>[securitygroup]<br>firewall_driver = openvswitch</p></blockquote></li><li>重启agent<br><code># systemctl status neutron-openvswitch-agent</code></li><li>再次启动一个虚机<br><code># nova boot --flavor small --image cirros --nic net-name=private1 client2</code></li></ol><p>结果还是没有实现ovs接替安全组的功能，排查发现Q版默认使用docker管理服务，修改 /var/lib/config-data/puppet-generated/neutron/etc/neutron/plugins/ml2/openvswitch_agent.ini 文件，重启ovs-agent容器,验证发现顺利启用native ovs firewall driver。<br>启动虚机，查看br-int流表变化情况(以下为增加的流)：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">+table=60 priority=100,in_port=10 actions=load:0xa-&gt;NXM_NX_REG5[],load:0x3-&gt;NXM_NX_REG6[],resubmit(,71)</span><br><span class="line">+table=60 priority=90,dl_vlan=3,dl_dst=fa:16:3e:61:ac:5e actions=load:0xa-&gt;NXM_NX_REG5[],load:0x3-&gt;NXM_NX_REG6[],pop_vlan,resubmit(,81)</span><br><span class="line">+table=71 priority=95,icmp6,reg5=0xa,in_port=10,icmp_type=130 actions=resubmit(,91)</span><br><span class="line">+table=71 priority=95,icmp6,reg5=0xa,in_port=10,icmp_type=133 actions=resubmit(,91)</span><br><span class="line">+table=71 priority=95,icmp6,reg5=0xa,in_port=10,icmp_type=135 actions=resubmit(,91)</span><br><span class="line">+table=71 priority=95,icmp6,reg5=0xa,in_port=10,icmp_type=136 actions=resubmit(,91)</span><br><span class="line">+table=71 priority=70,icmp6,reg5=0xa,in_port=10,icmp_type=134 actions=resubmit(,93)</span><br><span class="line">+table=71 priority=95,arp,reg5=0xa,in_port=10,dl_src=fa:16:3e:61:ac:5e,arp_spa=192.168.1.6 actions=resubmit(,91)</span><br><span class="line">+table=71 priority=80,udp,reg5=0xa,in_port=10,tp_src=68,tp_dst=67 actions=resubmit(,73)</span><br><span class="line">+table=71 priority=80,udp6,reg5=0xa,in_port=10,tp_src=546,tp_dst=547 actions=resubmit(,73)</span><br><span class="line">+table=71 priority=70,udp,reg5=0xa,in_port=10,tp_src=67,tp_dst=68 actions=resubmit(,93)</span><br><span class="line">+table=71 priority=70,udp6,reg5=0xa,in_port=10,tp_src=547,tp_dst=546 actions=resubmit(,93)</span><br><span class="line">+table=71 priority=65,ct_state=-trk,ip,reg5=0xa,in_port=10,dl_src=fa:16:3e:61:ac:5e,nw_src=192.168.1.6 actions=ct(table=72,zone=NXM_NX_REG6[0..15])</span><br><span class="line">+table=71 priority=65,ct_state=-trk,ipv6,reg5=0xa,in_port=10,dl_src=fa:16:3e:61:ac:5e,ipv6_src=fe80::f816:3eff:fe61:ac5e actions=ct(table=72,zone=NXM_NX_REG6[0..15])</span><br><span class="line">+table=71 priority=10,ct_state=-trk,reg5=0xa,in_port=10 actions=resubmit(,93)</span><br><span class="line">+table=72 priority=74,ct_state=+est-rel-rpl,ipv6,reg5=0xa actions=resubmit(,73)</span><br><span class="line">+table=72 priority=74,ct_state=+est-rel-rpl,ip,reg5=0xa actions=resubmit(,73)</span><br><span class="line">+table=72 priority=74,ct_state=+new-est,ipv6,reg5=0xa actions=resubmit(,73)</span><br><span class="line">+table=72 priority=74,ct_state=+new-est,ip,reg5=0xa actions=resubmit(,73)</span><br><span class="line">+table=72 priority=50,ct_mark=0x1,reg5=0xa actions=resubmit(,93)</span><br><span class="line">+table=72 priority=50,ct_state=+est-rel+rpl,ct_zone=3,ct_mark=0,reg5=0xa actions=resubmit(,91)</span><br><span class="line">+table=72 priority=50,ct_state=-new-est+rel-inv,ct_zone=3,ct_mark=0,reg5=0xa actions=resubmit(,91)</span><br><span class="line">+table=72 priority=40,ct_state=-est,reg5=0xa actions=resubmit(,93)</span><br><span class="line">+table=72 priority=40,ct_state=+est,ip,reg5=0xa actions=ct(commit,zone=NXM_NX_REG6[0..15],exec(load:0x1-&gt;NXM_NX_CT_MARK[]))</span><br><span class="line">+table=72 priority=40,ct_state=+est,ipv6,reg5=0xa actions=ct(commit,zone=NXM_NX_REG6[0..15],exec(load:0x1-&gt;NXM_NX_CT_MARK[]))</span><br><span class="line">+table=73 priority=100,reg6=0x3,dl_dst=fa:16:3e:61:ac:5e actions=load:0xa-&gt;NXM_NX_REG5[],resubmit(,81)</span><br><span class="line">+table=73 priority=90,ct_state=+new-est,ip,reg5=0xa actions=ct(commit,zone=NXM_NX_REG6[0..15]),resubmit(,91)</span><br><span class="line">+table=73 priority=90,ct_state=+new-est,ipv6,reg5=0xa actions=ct(commit,zone=NXM_NX_REG6[0..15]),resubmit(,91)</span><br><span class="line">+table=73 priority=80,reg5=0xa actions=resubmit(,91)</span><br><span class="line">+table=81 priority=100,arp,reg5=0xa actions=output:10,resubmit(,92)</span><br><span class="line">+table=81 priority=100,icmp6,reg5=0xa,icmp_type=130 actions=output:10,resubmit(,92)</span><br><span class="line">+table=81 priority=100,icmp6,reg5=0xa,icmp_type=135 actions=output:10,resubmit(,92)</span><br><span class="line">+table=81 priority=100,icmp6,reg5=0xa,icmp_type=136 actions=output:10,resubmit(,92)</span><br><span class="line">+table=81 priority=95,udp,reg5=0xa,tp_src=67,tp_dst=68 actions=output:10,resubmit(,92)</span><br><span class="line">+table=81 priority=95,udp6,reg5=0xa,tp_src=547,tp_dst=546 actions=output:10,resubmit(,92)</span><br><span class="line">+table=81 priority=90,ct_state=-trk,ip,reg5=0xa actions=ct(table=82,zone=NXM_NX_REG6[0..15])</span><br><span class="line">+table=81 priority=90,ct_state=-trk,ipv6,reg5=0xa actions=ct(table=82,zone=NXM_NX_REG6[0..15])</span><br><span class="line">+table=81 priority=80,ct_state=+trk,reg5=0xa actions=resubmit(,82)</span><br><span class="line">+table=82 priority=70,ct_state=+est-rel-rpl,ip,reg6=0x3,nw_src=192.168.1.6 actions=conjunction(8,1/2)</span><br><span class="line">+table=82 priority=70,ct_state=+new-est,ip,reg6=0x3,nw_src=192.168.1.6 actions=conjunction(9,1/2)</span><br><span class="line">+table=82 priority=70,ct_state=+est-rel-rpl,ipv6,reg5=0xa actions=conjunction(16,2/2)</span><br><span class="line">+table=82 priority=70,ct_state=+est-rel-rpl,ip,reg5=0xa actions=conjunction(8,2/2)</span><br><span class="line">+table=82 priority=70,ct_state=+new-est,ipv6,reg5=0xa actions=conjunction(17,2/2)</span><br><span class="line">+table=82 priority=70,ct_state=+new-est,ip,reg5=0xa actions=conjunction(9,2/2)</span><br><span class="line">+table=82 priority=70,conj_id=16,ct_state=+est-rel-rpl,ipv6,reg5=0xa actions=load:0x10-&gt;NXM_NX_REG7[],output:10,resubmit(,92)</span><br><span class="line">+table=82 priority=70,conj_id=8,ct_state=+est-rel-rpl,ip,reg5=0xa actions=load:0x8-&gt;NXM_NX_REG7[],output:10,resubmit(,92)</span><br><span class="line">+table=82 priority=70,conj_id=17,ct_state=+new-est,ipv6,reg5=0xa actions=load:0x11-&gt;NXM_NX_REG7[],ct(commit,zone=NXM_NX_REG6[0..15]),output:10,resubmit(,92)</span><br><span class="line">+table=82 priority=70,conj_id=9,ct_state=+new-est,ip,reg5=0xa actions=load:0x9-&gt;NXM_NX_REG7[],ct(commit,zone=NXM_NX_REG6[0..15]),output:10,resubmit(,92)</span><br><span class="line">+table=82 priority=50,ct_mark=0x1,reg5=0xa actions=resubmit(,93)</span><br><span class="line">+table=82 priority=50,ct_state=+est-rel+rpl,ct_zone=3,ct_mark=0,reg5=0xa actions=output:10,resubmit(,92)</span><br><span class="line">+table=82 priority=50,ct_state=-new-est+rel-inv,ct_zone=3,ct_mark=0,reg5=0xa actions=output:10,resubmit(,92)</span><br><span class="line">+table=82 priority=40,ct_state=-est,reg5=0xa actions=resubmit(,93)</span><br><span class="line">+table=82 priority=40,ct_state=+est,ip,reg5=0xa actions=ct(commit,zone=NXM_NX_REG6[0..15],exec(load:0x1-&gt;NXM_NX_CT_MARK[]))</span><br><span class="line">+table=82 priority=40,ct_state=+est,ipv6,reg5=0xa actions=ct(commit,zone=NXM_NX_REG6[0..15],exec(load:0x1-&gt;NXM_NX_CT_MARK[]))</span><br></pre></td></tr></table></figure></p><p>再启动一个虚机，看看流表增加了什么：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">+table=60 priority=100,in_port=12 actions=load:0xc-&gt;NXM_NX_REG5[],load:0x5-&gt;NXM_NX_REG6[],resubmit(,71)</span><br><span class="line">+table=60 priority=90,dl_vlan=5,dl_dst=fa:16:3e:9a:3f:5f actions=load:0xc-&gt;NXM_NX_REG5[],load:0x5-&gt;NXM_NX_REG6[],pop_vlan,resubmit(,81)</span><br><span class="line">+table=71 priority=95,icmp6,reg5=0xc,in_port=12,icmp_type=130 actions=resubmit(,91)</span><br><span class="line">+table=71 priority=95,icmp6,reg5=0xc,in_port=12,icmp_type=133 actions=resubmit(,91)</span><br><span class="line">+table=71 priority=95,icmp6,reg5=0xc,in_port=12,icmp_type=135 actions=resubmit(,91)</span><br><span class="line">+table=71 priority=95,icmp6,reg5=0xc,in_port=12,icmp_type=136 actions=resubmit(,91)</span><br><span class="line">+table=71 priority=70,icmp6,reg5=0xc,in_port=12,icmp_type=134 actions=resubmit(,93)</span><br><span class="line">+table=71 priority=95,arp,reg5=0xc,in_port=12,dl_src=fa:16:3e:9a:3f:5f,arp_spa=192.168.2.8 actions=resubmit(,91)</span><br><span class="line">+table=71 priority=80,udp,reg5=0xc,in_port=12,tp_src=68,tp_dst=67 actions=resubmit(,73)</span><br><span class="line">+table=71 priority=80,udp6,reg5=0xc,in_port=12,tp_src=546,tp_dst=547 actions=resubmit(,73)</span><br><span class="line">+table=71 priority=70,udp,reg5=0xc,in_port=12,tp_src=67,tp_dst=68 actions=resubmit(,93)</span><br><span class="line">+table=71 priority=70,udp6,reg5=0xc,in_port=12,tp_src=547,tp_dst=546 actions=resubmit(,93)</span><br><span class="line">+table=71 priority=65,ct_state=-trk,ip,reg5=0xc,in_port=12,dl_src=fa:16:3e:9a:3f:5f,nw_src=192.168.2.8 actions=ct(table=72,zone=NXM_NX_REG6[0..15])</span><br><span class="line">+table=71 priority=65,ct_state=-trk,ipv6,reg5=0xc,in_port=12,dl_src=fa:16:3e:9a:3f:5f,ipv6_src=fe80::f816:3eff:fe9a:3f5f actions=ct(table=72,zone=NXM_NX_REG6[0..15])</span><br><span class="line">+table=71 priority=10,ct_state=-trk,reg5=0xc,in_port=12 actions=resubmit(,93)</span><br><span class="line">+table=72 priority=74,ct_state=+est-rel-rpl,ipv6,reg5=0xc actions=resubmit(,73)</span><br><span class="line">+table=72 priority=74,ct_state=+est-rel-rpl,ip,reg5=0xc actions=resubmit(,73)</span><br><span class="line">+table=72 priority=74,ct_state=+new-est,ipv6,reg5=0xc actions=resubmit(,73)</span><br><span class="line">+table=72 priority=74,ct_state=+new-est,ip,reg5=0xc actions=resubmit(,73)</span><br><span class="line">+table=72 priority=50,ct_mark=0x1,reg5=0xc actions=resubmit(,93)</span><br><span class="line">+table=72 priority=50,ct_state=+est-rel+rpl,ct_zone=5,ct_mark=0,reg5=0xc actions=resubmit(,91)</span><br><span class="line">+table=72 priority=50,ct_state=-new-est+rel-inv,ct_zone=5,ct_mark=0,reg5=0xc actions=resubmit(,91)</span><br><span class="line">+table=72 priority=40,ct_state=-est,reg5=0xc actions=resubmit(,93)</span><br><span class="line">+table=72 priority=40,ct_state=+est,ip,reg5=0xc actions=ct(commit,zone=NXM_NX_REG6[0..15],exec(load:0x1-&gt;NXM_NX_CT_MARK[]))</span><br><span class="line">+table=72 priority=40,ct_state=+est,ipv6,reg5=0xc actions=ct(commit,zone=NXM_NX_REG6[0..15],exec(load:0x1-&gt;NXM_NX_CT_MARK[]))</span><br><span class="line">+table=73 priority=100,reg6=0x5,dl_dst=fa:16:3e:9a:3f:5f actions=load:0xc-&gt;NXM_NX_REG5[],resubmit(,81)</span><br><span class="line">+table=73 priority=90,ct_state=+new-est,ip,reg5=0xc actions=ct(commit,zone=NXM_NX_REG6[0..15]),resubmit(,91)</span><br><span class="line">+table=73 priority=90,ct_state=+new-est,ipv6,reg5=0xc actions=ct(commit,zone=NXM_NX_REG6[0..15]),resubmit(,91)</span><br><span class="line">+table=73 priority=80,reg5=0xc actions=resubmit(,91)</span><br><span class="line">+table=81 priority=100,arp,reg5=0xc actions=output:12,resubmit(,92)</span><br><span class="line">+table=81 priority=100,icmp6,reg5=0xc,icmp_type=130 actions=output:12,resubmit(,92)</span><br><span class="line">+table=81 priority=100,icmp6,reg5=0xc,icmp_type=135 actions=output:12,resubmit(,92)</span><br><span class="line">+table=81 priority=100,icmp6,reg5=0xc,icmp_type=136 actions=output:12,resubmit(,92)</span><br><span class="line">+table=81 priority=95,udp,reg5=0xc,tp_src=67,tp_dst=68 actions=output:12,resubmit(,92)</span><br><span class="line">+table=81 priority=95,udp6,reg5=0xc,tp_src=547,tp_dst=546 actions=output:12,resubmit(,92)</span><br><span class="line">+table=81 priority=90,ct_state=-trk,ip,reg5=0xc actions=ct(table=82,zone=NXM_NX_REG6[0..15])</span><br><span class="line">+table=81 priority=90,ct_state=-trk,ipv6,reg5=0xc actions=ct(table=82,zone=NXM_NX_REG6[0..15])</span><br><span class="line">+table=81 priority=80,ct_state=+trk,reg5=0xc actions=resubmit(,82)</span><br><span class="line">+table=82 priority=70,ct_state=+est-rel-rpl,ip,reg6=0x4,nw_src=192.168.2.8 actions=conjunction(16,1/2)</span><br><span class="line">+table=82 priority=70,ct_state=+est-rel-rpl,ip,reg6=0x5,nw_src=192.168.2.8 actions=conjunction(16,1/2)</span><br><span class="line">+table=82 priority=70,ct_state=+est-rel-rpl,ip,reg6=0x5,nw_src=192.168.1.11 actions=conjunction(16,1/2)</span><br><span class="line">+table=82 priority=70,ct_state=+new-est,ip,reg6=0x4,nw_src=192.168.2.8 actions=conjunction(17,1/2)</span><br><span class="line">+table=82 priority=70,ct_state=+new-est,ip,reg6=0x5,nw_src=192.168.2.8 actions=conjunction(17,1/2)</span><br><span class="line">+table=82 priority=70,ct_state=+new-est,ip,reg6=0x5,nw_src=192.168.1.11 actions=conjunction(17,1/2)</span><br><span class="line">+table=82 priority=70,ct_state=+est-rel-rpl,ipv6,reg5=0xc actions=conjunction(8,2/2)</span><br><span class="line">+table=82 priority=70,ct_state=+est-rel-rpl,ip,reg5=0xc actions=conjunction(16,2/2)</span><br><span class="line">+table=82 priority=70,ct_state=+new-est,ipv6,reg5=0xc actions=conjunction(9,2/2)</span><br><span class="line">+table=82 priority=70,ct_state=+new-est,ip,reg5=0xc actions=conjunction(17,2/2)</span><br><span class="line">+table=82 priority=70,conj_id=8,ct_state=+est-rel-rpl,ipv6,reg5=0xc actions=load:0x8-&gt;NXM_NX_REG7[],output:12,resubmit(,92)</span><br><span class="line">+table=82 priority=70,conj_id=16,ct_state=+est-rel-rpl,ip,reg5=0xc actions=load:0x10-&gt;NXM_NX_REG7[],output:12,resubmit(,92)</span><br><span class="line">+table=82 priority=70,conj_id=9,ct_state=+new-est,ipv6,reg5=0xc actions=load:0x9-&gt;NXM_NX_REG7[],ct(commit,zone=NXM_NX_REG6[0..15]),output:12,resubmit(,92)</span><br><span class="line">+table=82 priority=70,conj_id=17,ct_state=+new-est,ip,reg5=0xc actions=load:0x11-&gt;NXM_NX_REG7[],ct(commit,zone=NXM_NX_REG6[0..15]),output:12,resubmit(,92)</span><br><span class="line">+table=82 priority=50,ct_mark=0x1,reg5=0xc actions=resubmit(,93)</span><br><span class="line">+table=82 priority=50,ct_state=+est-rel+rpl,ct_zone=5,ct_mark=0,reg5=0xc actions=output:12,resubmit(,92)</span><br><span class="line">+table=82 priority=50,ct_state=-new-est+rel-inv,ct_zone=5,ct_mark=0,reg5=0xc actions=output:12,resubmit(,92)</span><br><span class="line">+table=82 priority=40,ct_state=-est,reg5=0xc actions=resubmit(,93)</span><br><span class="line">+table=82 priority=40,ct_state=+est,ip,reg5=0xc actions=ct(commit,zone=NXM_NX_REG6[0..15],exec(load:0x1-&gt;NXM_NX_CT_MARK[]))</span><br><span class="line">+table=82 priority=40,ct_state=+est,ipv6,reg5=0xc actions=ct(commit,zone=NXM_NX_REG6[0..15],exec(load:0x1-&gt;NXM_NX_CT_MARK[]))</span><br></pre></td></tr></table></figure></p><p>再跑一个N版的devstack继续进行研究。</p><p>以下为默认的流表情况(只关注br-int)：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">cookie=0x9730ef020b7d4f04, duration=63695.441s, table=0, n_packets=939, n_bytes=39690, priority=3,in_port=&quot;int-br-ex&quot;,vlan_tci=0x0000/0x1fff actions=mod_vlan_vid:2,NORMAL</span><br><span class="line"> cookie=0x9730ef020b7d4f04, duration=63701.394s, table=0, n_packets=7, n_bytes=738, priority=2,in_port=&quot;int-br-ex&quot; actions=drop</span><br><span class="line"> cookie=0x9730ef020b7d4f04, duration=63701.637s, table=0, n_packets=1148, n_bytes=130485, priority=0 actions=NORMAL</span><br><span class="line"> cookie=0x9730ef020b7d4f04, duration=63701.639s, table=23, n_packets=0, n_bytes=0, priority=0 actions=drop</span><br><span class="line"> cookie=0x9730ef020b7d4f04, duration=63701.635s, table=24, n_packets=0, n_bytes=0, priority=0 actions=drop</span><br><span class="line"> cookie=0x9730ef020b7d4f04, duration=63700.652s, table=71, n_packets=0, n_bytes=0, priority=0 actions=drop</span><br><span class="line"> cookie=0x9730ef020b7d4f04, duration=89.943s, table=72, n_packets=0, n_bytes=0, priority=50,ct_state=+inv+trk actions=drop</span><br><span class="line"> cookie=0x9730ef020b7d4f04, duration=63700.645s, table=72, n_packets=0, n_bytes=0, priority=0 actions=drop</span><br><span class="line"> cookie=0x9730ef020b7d4f04, duration=63700.638s, table=73, n_packets=0, n_bytes=0, priority=0 actions=drop</span><br><span class="line"> cookie=0x9730ef020b7d4f04, duration=63700.631s, table=81, n_packets=0, n_bytes=0, priority=0 actions=drop</span><br><span class="line"> cookie=0x9730ef020b7d4f04, duration=89.943s, table=82, n_packets=0, n_bytes=0, priority=50,ct_state=+inv+trk actions=drop</span><br><span class="line"> cookie=0x9730ef020b7d4f04, duration=63700.624s, table=82, n_packets=0, n_bytes=0, priority=0 actions=drop</span><br></pre></td></tr></table></figure></p><p>启动一台虚机,产生了大量流表：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">cookie=0x9730ef020b7d4f04, duration=64481.177s, table=0, n_packets=7, n_bytes=738, priority=2,in_port=&quot;int-br-ex&quot; actions=drop</span><br><span class="line"> cookie=0x9730ef020b7d4f04, duration=593.529s, table=0, n_packets=102, n_bytes=10111, priority=100,in_port=&quot;tapf27e3d10-13&quot; actions=load:0xb-&gt;NXM_NX_REG5[],load:0x1-&gt;NXM_NX_REG6[],resubmit(,71)</span><br><span class="line"> cookie=0x9730ef020b7d4f04, duration=593.529s, table=0, n_packets=66, n_bytes=7041, priority=90,dl_dst=fa:16:3e:33:99:6c actions=load:0xb-&gt;NXM_NX_REG5[],load:0x1-&gt;NXM_NX_REG6[],resubmit(,81)</span><br><span class="line"> cookie=0x9730ef020b7d4f04, duration=64475.224s, table=0, n_packets=939, n_bytes=39690, priority=3,in_port=&quot;int-br-ex&quot;,vlan_tci=0x0000/0x1fff actions=mod_vlan_vid:2,NORMAL</span><br><span class="line"> cookie=0x9730ef020b7d4f04, duration=64481.420s, table=0, n_packets=1167, n_bytes=132309, priority=0 actions=NORMAL</span><br><span class="line"> cookie=0x9730ef020b7d4f04, duration=64481.422s, table=23, n_packets=0, n_bytes=0, priority=0 actions=drop</span><br><span class="line"> cookie=0x9730ef020b7d4f04, duration=64481.418s, table=24, n_packets=0, n_bytes=0, priority=0 actions=drop</span><br><span class="line"> cookie=0x9730ef020b7d4f04, duration=593.528s, table=71, n_packets=0, n_bytes=0, priority=95,icmp6,reg5=0xb,in_port=&quot;tapf27e3d10-13&quot;,icmp_type=130 actions=NORMAL</span><br><span class="line"> cookie=0x9730ef020b7d4f04, duration=593.528s, table=71, n_packets=0, n_bytes=0, priority=95,icmp6,reg5=0xb,in_port=&quot;tapf27e3d10-13&quot;,icmp_type=134 actions=NORMAL</span><br><span class="line"> cookie=0x9730ef020b7d4f04, duration=593.528s, table=71, n_packets=2, n_bytes=156, priority=95,icmp6,reg5=0xb,in_port=&quot;tapf27e3d10-13&quot;,icmp_type=135 actions=NORMAL</span><br><span class="line"> cookie=0x9730ef020b7d4f04, duration=593.528s, table=71, n_packets=0, n_bytes=0, priority=95,icmp6,reg5=0xb,in_port=&quot;tapf27e3d10-13&quot;,icmp_type=136 actions=NORMAL</span><br><span class="line"> cookie=0x9730ef020b7d4f04, duration=593.527s, table=71, n_packets=0, n_bytes=0, priority=70,icmp6,reg5=0xb,in_port=&quot;tapf27e3d10-13&quot;,icmp_type=134 actions=drop</span><br><span class="line"> cookie=0x9730ef020b7d4f04, duration=593.528s, table=71, n_packets=3, n_bytes=126, priority=95,arp,reg5=0xb,in_port=&quot;tapf27e3d10-13&quot;,dl_src=fa:16:3e:33:99:6c,arp_spa=192.168.1.7 actions=NORMAL</span><br><span class="line"> cookie=0x9730ef020b7d4f04, duration=593.528s, table=71, n_packets=2, n_bytes=676, priority=80,udp,reg5=0xb,in_port=&quot;tapf27e3d10-13&quot;,tp_src=68,tp_dst=67 actions=resubmit(,73)</span><br><span class="line"> cookie=0x9730ef020b7d4f04, duration=593.527s, table=71, n_packets=0, n_bytes=0, priority=80,udp6,reg5=0xb,in_port=&quot;tapf27e3d10-13&quot;,tp_src=546,tp_dst=547 actions=resubmit(,73)</span><br><span class="line"> cookie=0x9730ef020b7d4f04, duration=593.527s, table=71, n_packets=0, n_bytes=0, priority=70,udp,reg5=0xb,in_port=&quot;tapf27e3d10-13&quot;,tp_src=67,tp_dst=68 actions=drop</span><br><span class="line"> cookie=0x9730ef020b7d4f04, duration=593.527s, table=71, n_packets=0, n_bytes=0, priority=70,udp6,reg5=0xb,in_port=&quot;tapf27e3d10-13&quot;,tp_src=547,tp_dst=546 actions=drop</span><br><span class="line"> cookie=0x9730ef020b7d4f04, duration=593.528s, table=71, n_packets=92, n_bytes=8903, priority=65,ct_state=-trk,ip,reg5=0xb,in_port=&quot;tapf27e3d10-13&quot;,dl_src=fa:16:3e:33:99:6c,nw_src=192.168.1.7 actions=ct(table=72,zone=NXM_NX_REG6[0..15])</span><br><span class="line"> cookie=0x9730ef020b7d4f04, duration=593.528s, table=71, n_packets=2, n_bytes=160, priority=65,ct_state=-trk,ipv6,reg5=0xb,in_port=&quot;tapf27e3d10-13&quot;,dl_src=fa:16:3e:33:99:6c,ipv6_src=fe80::f816:3eff:fe33:996c actions=ct(table=72,zone=NXM_NX_REG6[0..15])</span><br><span class="line"> cookie=0x9730ef020b7d4f04, duration=593.528s, table=71, n_packets=0, n_bytes=0, priority=65,ct_state=-trk,ipv6,reg5=0xb,in_port=&quot;tapf27e3d10-13&quot;,dl_src=fa:16:3e:33:99:6c,ipv6_src=fd7e:d8a3:64c9:0:f816:3eff:fe33:996c actions=ct(table=72,zone=NXM_NX_REG6[0..15])</span><br><span class="line"> cookie=0x9730ef020b7d4f04, duration=593.527s, table=71, n_packets=1, n_bytes=90, priority=10,ct_state=-trk,reg5=0xb,in_port=&quot;tapf27e3d10-13&quot; actions=drop</span><br><span class="line"> cookie=0x9730ef020b7d4f04, duration=64480.435s, table=71, n_packets=0, n_bytes=0, priority=0 actions=drop</span><br><span class="line"> cookie=0x9730ef020b7d4f04, duration=593.525s, table=72, n_packets=75, n_bytes=7610, priority=70,ct_state=+est-rel-rpl,ip,reg5=0xb,dl_src=fa:16:3e:33:99:6c actions=resubmit(,73)</span><br><span class="line"> cookie=0x9730ef020b7d4f04, duration=593.525s, table=72, n_packets=0, n_bytes=0, priority=70,ct_state=+est-rel-rpl,ipv6,reg5=0xb,dl_src=fa:16:3e:33:99:6c actions=resubmit(,73)</span><br><span class="line"> cookie=0x9730ef020b7d4f04, duration=593.525s, table=72, n_packets=17, n_bytes=1293, priority=70,ct_state=+new-est,ip,reg5=0xb,dl_src=fa:16:3e:33:99:6c actions=resubmit(,73)</span><br><span class="line"> cookie=0x9730ef020b7d4f04, duration=593.525s, table=72, n_packets=2, n_bytes=160, priority=70,ct_state=+new-est,ipv6,reg5=0xb,dl_src=fa:16:3e:33:99:6c actions=resubmit(,73)</span><br><span class="line"> cookie=0x9730ef020b7d4f04, duration=593.525s, table=72, n_packets=0, n_bytes=0, priority=50,ct_state=+inv+trk actions=drop</span><br><span class="line"> cookie=0x9730ef020b7d4f04, duration=593.525s, table=72, n_packets=0, n_bytes=0, priority=50,ct_mark=0x1,reg5=0xb actions=drop</span><br><span class="line"> cookie=0x9730ef020b7d4f04, duration=593.525s, table=72, n_packets=0, n_bytes=0, priority=50,ct_state=+est-rel+rpl,ct_zone=1,ct_mark=0,reg5=0xb actions=NORMAL</span><br><span class="line"> cookie=0x9730ef020b7d4f04, duration=593.525s, table=72, n_packets=0, n_bytes=0, priority=50,ct_state=-new-est+rel-inv,ct_zone=1,ct_mark=0,reg5=0xb actions=NORMAL</span><br><span class="line"> cookie=0x9730ef020b7d4f04, duration=593.525s, table=72, n_packets=0, n_bytes=0, priority=40,ct_state=-est,reg5=0xb actions=drop</span><br><span class="line"> cookie=0x9730ef020b7d4f04, duration=593.525s, table=72, n_packets=0, n_bytes=0, priority=40,ct_state=+est,ip,reg5=0xb actions=ct(commit,zone=NXM_NX_REG6[0..15],exec(load:0x1-&gt;NXM_NX_CT_MARK[]))</span><br><span class="line"> cookie=0x9730ef020b7d4f04, duration=593.525s, table=72, n_packets=0, n_bytes=0, priority=40,ct_state=+est,ipv6,reg5=0xb actions=ct(commit,zone=NXM_NX_REG6[0..15],exec(load:0x1-&gt;NXM_NX_CT_MARK[]))</span><br><span class="line"> cookie=0x9730ef020b7d4f04, duration=64480.428s, table=72, n_packets=0, n_bytes=0, priority=0 actions=drop</span><br><span class="line"> cookie=0x9730ef020b7d4f04, duration=593.527s, table=73, n_packets=0, n_bytes=0, priority=100,dl_dst=fa:16:3e:33:99:6c actions=load:0xb-&gt;NXM_NX_REG5[],resubmit(,81)</span><br><span class="line"> cookie=0x9730ef020b7d4f04, duration=593.527s, table=73, n_packets=17, n_bytes=1293, priority=90,ct_state=+new-est,ip,reg5=0xb actions=ct(commit,zone=NXM_NX_REG6[0..15]),NORMAL</span><br><span class="line"> cookie=0x9730ef020b7d4f04, duration=593.527s, table=73, n_packets=2, n_bytes=160, priority=90,ct_state=+new-est,ipv6,reg5=0xb actions=ct(commit,zone=NXM_NX_REG6[0..15]),NORMAL</span><br><span class="line"> cookie=0x9730ef020b7d4f04, duration=593.527s, table=73, n_packets=77, n_bytes=8286, priority=80,reg5=0xb actions=NORMAL</span><br><span class="line"> cookie=0x9730ef020b7d4f04, duration=64480.421s, table=73, n_packets=0, n_bytes=0, priority=0 actions=drop</span><br><span class="line"> cookie=0x9730ef020b7d4f04, duration=593.527s, table=81, n_packets=3, n_bytes=126, priority=100,arp,reg5=0xb,dl_dst=fa:16:3e:33:99:6c actions=strip_vlan,output:&quot;tapf27e3d10-13&quot;</span><br><span class="line"> cookie=0x9730ef020b7d4f04, duration=593.527s, table=81, n_packets=0, n_bytes=0, priority=100,icmp6,reg5=0xb,dl_dst=fa:16:3e:33:99:6c,icmp_type=130 actions=strip_vlan,output:&quot;tapf27e3d10-13&quot;</span><br><span class="line"> cookie=0x9730ef020b7d4f04, duration=593.527s, table=81, n_packets=0, n_bytes=0, priority=100,icmp6,reg5=0xb,dl_dst=fa:16:3e:33:99:6c,icmp_type=134 actions=strip_vlan,output:&quot;tapf27e3d10-13&quot;</span><br><span class="line"> cookie=0x9730ef020b7d4f04, duration=593.527s, table=81, n_packets=0, n_bytes=0, priority=100,icmp6,reg5=0xb,dl_dst=fa:16:3e:33:99:6c,icmp_type=135 actions=strip_vlan,output:&quot;tapf27e3d10-13&quot;</span><br><span class="line"> cookie=0x9730ef020b7d4f04, duration=593.526s, table=81, n_packets=0, n_bytes=0, priority=100,icmp6,reg5=0xb,dl_dst=fa:16:3e:33:99:6c,icmp_type=136 actions=strip_vlan,output:&quot;tapf27e3d10-13&quot;</span><br><span class="line"> cookie=0x9730ef020b7d4f04, duration=593.526s, table=81, n_packets=2, n_bytes=758, priority=95,udp,reg5=0xb,tp_src=67,tp_dst=68 actions=strip_vlan,output:&quot;tapf27e3d10-13&quot;</span><br><span class="line"> cookie=0x9730ef020b7d4f04, duration=593.526s, table=81, n_packets=0, n_bytes=0, priority=95,udp6,reg5=0xb,tp_src=547,tp_dst=546 actions=strip_vlan,output:&quot;tapf27e3d10-13&quot;</span><br><span class="line"> cookie=0x9730ef020b7d4f04, duration=593.526s, table=81, n_packets=61, n_bytes=6157, priority=90,ct_state=-trk,ip,reg5=0xb actions=ct(table=82,zone=NXM_NX_REG6[0..15])</span><br><span class="line"> cookie=0x9730ef020b7d4f04, duration=593.526s, table=81, n_packets=0, n_bytes=0, priority=90,ct_state=-trk,ipv6,reg5=0xb actions=ct(table=82,zone=NXM_NX_REG6[0..15])</span><br><span class="line"> cookie=0x9730ef020b7d4f04, duration=593.526s, table=81, n_packets=0, n_bytes=0, priority=80,ct_state=+trk,reg5=0xb,dl_dst=fa:16:3e:33:99:6c actions=resubmit(,82)</span><br><span class="line"> cookie=0x9730ef020b7d4f04, duration=64480.414s, table=81, n_packets=0, n_bytes=0, priority=0 actions=drop</span><br><span class="line"> cookie=0x9730ef020b7d4f04, duration=593.526s, table=82, n_packets=0, n_bytes=0, priority=50,ct_state=+inv+trk actions=drop</span><br><span class="line"> cookie=0x9730ef020b7d4f04, duration=593.526s, table=82, n_packets=0, n_bytes=0, priority=50,ct_mark=0x1,reg5=0xb actions=drop</span><br><span class="line"> cookie=0x9730ef020b7d4f04, duration=593.526s, table=82, n_packets=61, n_bytes=6157, priority=50,ct_state=+est-rel+rpl,ct_zone=1,ct_mark=0,reg5=0xb,dl_dst=fa:16:3e:33:99:6c actions=strip_vlan,output:&quot;tapf27e3d10-13&quot;</span><br><span class="line"> cookie=0x9730ef020b7d4f04, duration=593.526s, table=82, n_packets=0, n_bytes=0, priority=50,ct_state=-new-est+rel-inv,ct_zone=1,ct_mark=0,reg5=0xb,dl_dst=fa:16:3e:33:99:6c actions=strip_vlan,output:&quot;tapf27e3d10-13&quot;</span><br><span class="line"> cookie=0x9730ef020b7d4f04, duration=593.526s, table=82, n_packets=0, n_bytes=0, priority=40,ct_state=-est,reg5=0xb actions=drop</span><br><span class="line"> cookie=0x9730ef020b7d4f04, duration=593.526s, table=82, n_packets=0, n_bytes=0, priority=40,ct_state=+est,ip,reg5=0xb actions=ct(commit,zone=NXM_NX_REG6[0..15],exec(load:0x1-&gt;NXM_NX_CT_MARK[]))</span><br><span class="line"> cookie=0x9730ef020b7d4f04, duration=593.526s, table=82, n_packets=0, n_bytes=0, priority=40,ct_state=+est,ipv6,reg5=0xb actions=ct(commit,zone=NXM_NX_REG6[0..15],exec(load:0x1-&gt;NXM_NX_CT_MARK[]))</span><br><span class="line"> cookie=0x9730ef020b7d4f04, duration=64480.407s, table=82, n_packets=0, n_bytes=0, priority=0 actions=drop</span><br></pre></td></tr></table></figure></p><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>需要先了解一下802.1常见字段的定义：</p><ul><li>ovs里面的常见字段<br>| 字段名称 | 说明 |<br>| - | - |<br>| in_port=port | 传递数据包的端口的 OpenFlow 端口编号 |<br>| dl_vlan=vlan | 数据包的 VLAN Tag 值，范围是 0-4095，0xffff 代表不包含 VLAN Tag 的数据包 |<br>| dl_src=<mac> dl_dst=<mac> | 数据包的 VLAN Tag 值，范围是 0-4095，0xffff 代表不包含 VLAN Tag 的数据包 |<br>| dl_type=ethertype | 匹配以太网协议类型，其中：dl_type=0x0800 代表 IPv4 协议; dl_type=0x086dd 代表 IPv6 协议; dl_type=0x0806 代表 ARP 协议 |<br>| nw_src=ip[/netmask] nw_dst=ip[/netmask] | 当 dl_typ=0x0800 时，匹配源或者目标的 IPv4 地址，可以使 IP 地址或者域名 |<br>| nw_proto=proto | 和 dl_type 字段协同使用。当 dl_type=0x0800 时，匹配 IP 协议编号;当 dl_type=0x086dd 代表 IPv6 协议编号|<br>| table=number  | 指定要使用的流表的编号，范围是 0-254。在不指定的情况下，默认值为 0。通过使用流表编号，可以创建或者修改多个 Table 中的 Flow |<br>|reg<idx>=value[/mask] | 交换机中的寄存器的值。当一个数据包进入交换机时，所有的寄存器都被清零，用户可以通过 Action 的指令修改寄存器中的值 |<br><strong>dl: datalink ; nw: network</strong><br>对于 add−flow，add−flows 和 mod−flows 这三个命令，还需要指定要执行的动作：actions=[target][,target…]<br>一个流规则中可能有多个动作，按照指定的先后顺序执行。<br>常见的操作有：<ul><li>output:port: 输出数据包到指定的端口。port 是指端口的 OpenFlow 端口编号</li><li>mod_vlan_vid: 修改数据包中的 VLAN tag</li><li>strip_vlan: 移除数据包中的 VLAN tag</li><li>mod_dl_src/ mod_dl_dest: 修改源或者目标的 MAC 地址信息</li><li>mod_nw_src/mod_nw_dst: 修改源或者目标的 IPv4 地址信息</li><li>resubmit:port: 替换流表的 in_port 字段，并重新进行匹配</li><li>load:value−&gt;dst[start..end]: 写数据到指定的字段<br>|name | age|<br>|—| —|<br>|hello|www|</li></ul></idx></mac></mac></li><li>关于TIC、VNI等字段：<br><img src="https://sirius21c-1256566528.cos.ap-beijing.myqcloud.com/OVS/802.1q%E5%B0%81%E8%A3%85%E6%A0%BC%E5%BC%8F.png" alt="802.1q封装格式">{:height=”50%” width=”50%”}<ol><li>TPID (Tag Protocol Identifier，也就是EtherType)<br>IEEE定义的新的类型，表明这是一个加了802.1Q标签的帧。TPID包含了一个固定的值0x8100。</li><li>TCI (Tag Control Information)<br>包括用户优先级(User Priority)、规范格式指示器(Canonical Format Indicator)和 VLAN ID。<ul><li>User Priority：该字段为3-bit，用于定义用户优先级，总共有8个(2的3次方)优先级别。IEEE 802.1P 为3比特的用户优先级位定义了操作。最高优先级为7，应用于关键性网络流量，如路由选择信息协议（RIP）和开放最短路径优先（OSPF）协议的路由表更新。优先级6和5主要用于延迟敏感（delay-sensitive）应用程序，如交互式视频和语音。优先级4到1主要用于受控负载（controlled-load）应用程序，如流式多媒体（streaming multimedia）和关键性业务流量（business-critical traffic） － 例如，SAP 数据 － 以及“loss eligible”流量。优先级0是缺省值，并在没有设置其它优先级值的情况下自动启用。</li><li>CFI：CFI值为0说明是规范格式，1为非规范格式。它被用在令牌环/源路由FDDI介质访问方法中来指示封装帧中所带地址的比特次序信息。</li><li>VID：该字段为12-bit， VLAN ID 是对 VLAN 的识别字段，在标准 802.1Q 中常被使用。支持4096(2的12次方) VLAN 的识别。在4096可能的VID 中，VID＝0 用于识别帧优先级。 4095(FFF)作为预留值，所以 VLAN 配置的最大可能值为4094。 所以有效的VLAN ID范围一般为1-4094。</li></ul></li></ol></li></ul><p>Tables:</p><ul><li>Table 0<br>  Port-based ACLs</li><li>Table 1<br>  Ingress VLAN processing</li><li>Table 2<br>  VLAN-based ACLs</li><li>Table 3<br>  Ingress L2 processing, MAC learning</li><li>Table 4<br>  L3 forwarding for IPv4</li><li>Table 5<br>  L3 forwarding for IPv6</li><li>Table 6<br>  Virtual IP processing, e.g. for router IP addresses implemented by Faucet</li><li>Table 7<br>  Egress L2 processing</li><li>Table 8<br>  Flooding</li></ul>]]></content>
      
      
      <categories>
          
          <category> technology </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openstack </tag>
            
            <tag> neutron </tag>
            
            <tag> openflow </tag>
            
            <tag> ovs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>openstack中引入firewall镜像——租户网络旁挂引流回注</title>
      <link href="/2018/05/20/openstack%E4%B8%AD%E5%BC%95%E5%85%A5firewall%E9%95%9C%E5%83%8F%E2%80%94%E2%80%94%E7%A7%9F%E6%88%B7%E7%BD%91%E7%BB%9C%E6%97%81%E6%8C%82%E5%BC%95%E6%B5%81%E5%9B%9E%E6%B3%A8/"/>
      <url>/2018/05/20/openstack%E4%B8%AD%E5%BC%95%E5%85%A5firewall%E9%95%9C%E5%83%8F%E2%80%94%E2%80%94%E7%A7%9F%E6%88%B7%E7%BD%91%E7%BB%9C%E6%97%81%E6%8C%82%E5%BC%95%E6%B5%81%E5%9B%9E%E6%B3%A8/</url>
      
        <content type="html"><![CDATA[<h3 id="方案概述"><a href="#方案概述" class="headerlink" title="方案概述"></a>方案概述</h3><p>使用类似于“物理旁挂，逻辑串联”的方式旁挂在 qrouter 旁。<br>根据用户的需求，是否使用PBR将流量引入FW，需要则在qrouter的namespace写入iptables策略，不需要则删掉策略。<br>拓扑如下图所示：</p><p><img src="https://sirius21c-1256566528.cos.ap-beijing.myqcloud.com/openstack/neutron/firewall%E5%AF%B9%E6%8E%A5--%E7%A7%9F%E6%88%B7%E7%BD%91%E7%BB%9C%E9%83%A8%E7%BD%B2%E4%B9%8B%E6%97%81%E6%8C%82%E5%BC%95%E6%B5%81%E5%9B%9E%E6%B3%A8.png" alt="租户网络内部L3部署——旁挂引流回注"></p><p>为了方便在qrouter上做引流策略，将fw启动在一个独立的subnet中。</p><p>该方式简单易行，只将 firewall 作为一个类似于feature 的实现，可以灵活的加载与卸载，当然切换中会有一定时间段的丢包。<br>开发则需要复用 neutron-server 的代码提供出自己的 API ，再写一个 plugin 调用 drive 向 namespace 写入和删除规则即可。</p><h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><p><strong>【策略一】</strong><br><strong>（粗粒度，方便开发，下发策略）</strong><br>根据流量进入口将非fw子网连接的 qr 接口全部使用pbr导入fw，fw根据自己的默认路由回注流量到 qrouter ，qrouter 再根据路由转发。<br>由于该pbr标记流量包含了ha 和 直接访问fw的流量，导致了 qrouter脑裂和fw面板无法访问的问题，但理论上来说不应该出现此问题，待跟进。<br>流量标记命令如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip netns exec qrouter-xxx iptables -A PREROUTING ! -i qr-fw -j MARK --set-mark 100</span><br></pre></td></tr></table></figure></p><p><strong>【策略二】</strong><br><strong>（细粒度，测试主要以此种方式进行）</strong></p><ol><li><p>新建一个独立的路由表为PBR服务，下一跳指向fw</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip netns exec qrouter-xxx ip route add default via add-fw dev qr-fw table 100</span><br></pre></td></tr></table></figure></li><li><p>PBR策略（使用mangle表的mark进行着色）</p><ul><li>egress流量<br>以连接vm子网的 qr 口的进入流量为目标<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip netns exec qrouter-xxx iptables -A PREROUTING -t mangle -i qr-vm -j MARK --set-mark 100</span><br></pre></td></tr></table></figure></li></ul><p><strong><em>注意：</em></strong><br><em>neutron会将流量默认 mark 为 0x4000000/0xffff0000，将其余标记流量 drop 。所以需要删除非默认标记流量的drop规则，使流量可以流向fw：</em><br><img src="https://sirius21c-1256566528.cos.ap-beijing.myqcloud.com/openstack/neutron/neutron%E8%BF%87%E6%BB%A4%E6%8E%89%E9%9D%9E%E9%BB%98%E8%AE%A4%E6%A0%87%E8%AE%B0%E6%B5%81%E9%87%8F.png" alt="neutron过滤掉非默认标记流量"><br><em>附：问题现象记录</em><br>观察iptables已成功将目标流量着色:<br><img src="https://sirius21c-1256566528.cos.ap-beijing.myqcloud.com/openstack/neutron/PREROUTING%E6%B7%BB%E5%8A%A0%E7%9D%80%E8%89%B2%E8%A7%84%E5%88%99.png" alt="PREROUTOING添加着色规则"><br>引流不成功，在 qr-fw 接口上无法抓到包：<br><img src="https://sirius21c-1256566528.cos.ap-beijing.myqcloud.com/openstack/neutron/%E5%9B%A0neutron%E8%BF%87%E6%BB%A4%E6%8E%89%E9%9D%9E%E9%BB%98%E8%AE%A4%E6%A0%87%E8%AE%B0%E6%B5%81%E9%87%8F%E6%97%A0%E6%B3%95%E5%9C%A8qr-fw%E4%B8%8A%E6%8A%93%E5%88%B0%E6%95%B0%E6%8D%AE%E5%8C%85%E7%9A%84%E8%AE%B0%E5%BD%95.png" alt="因neutron过滤掉非默认标记流量无法在qr-fw上抓到数据包的记录"></p><ul><li><p>ingress流量<br>以 qr 口目标地址为vm子网的cidr的进入流量为目标<br><strong>存在以下问题：</strong></p><ul><li>若使用 PREROUTING 链，此时还没有进行nat，目标地址应为floating ip（加细粒度）或 qg 口的地址，另外 mangle 之后是否会略过 nat 直接将流量引向 fw，还待验证，预估不会略过；</li><li>若使用 FORWARD 或其它链，将会在路由选择之后，无法使用PBR。</li></ul><p>附上一张 iptables 的数据处理流程图：</p><p><img src="https://sirius21c-1256566528.cos.ap-beijing.myqcloud.com/Linux/iptables%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E6%B5%81%E7%A8%8B.png" alt="iptebles数据处理流程"></p><p>有待更正的示例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip netns exec qrouter-xxx iptables -A PREROUTING iptables -A PREROUTING -i qg-xxx -d add-fip -j MARK --set-mark 100</span><br></pre></td></tr></table></figure></li></ul></li><li><p>添加rule，将着色流量引入新建的独立table</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip netns exec qrouter-xxx ip rule add fwmark 100 table 100</span><br></pre></td></tr></table></figure><p><strong><em>注意：</em></strong><br><em>关闭 neutron 的端口安全，使 fw 的 port 可以接受其它IP的流量（fw回注流量）。</em></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">neutron port-update --no-security-groups --port_security_enabled=False port-id-fw</span><br></pre></td></tr></table></figure><p><em>fw 的安全策略也要放开（在 fw 上配置），为方便测试打开了全部。</em><br><img src="https://sirius21c-1256566528.cos.ap-beijing.myqcloud.com/openstack/neutron/360%E7%9A%84firewall%E5%AF%B9%E8%BD%AC%E5%8F%91%E6%B5%81%E9%87%8F%E5%85%A8%E9%83%A8%E6%94%BE%E5%BC%80.png" alt="360的firewall对转发流量全部放开"><br><em>在连接 fw 子网的 qr 接口上可以发现，存在 ttl=62 的包，说明流量顺利通过 br-int 回到了 qrouter 的 namespace ：</em><br><img src="https://sirius21c-1256566528.cos.ap-beijing.myqcloud.com/openstack/neutron/firewall%E5%BC%95%E6%B5%81%E5%9B%9E%E6%B3%A8egress%E6%B5%81%E9%87%8F%E4%BB%8Efw%E8%BF%94%E5%9B%9Enamespace%E8%AF%81%E6%98%8E.png" alt="firewall引流回注egress流量从fw返回namespace证明"></p></li></ol><p><strong>（更新一）</strong><br>为了便于为 egress 流量引流定策略，同时避免着色流量行为及其后续需要采取的措施（如删除 neutron 过滤掉非默认标记流量的规则），现弃用mark标记流量的方式，直接基于流量应用rule。</p><ul><li><p>egress流量</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip rule add dev qr-vm table 100</span><br></pre></td></tr></table></figure></li><li><p>ingress流量</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip rule add dev qg-xxx to dst-address-cidr table 100</span><br></pre></td></tr></table></figure></li></ul><p><strong><em>【目前无法解决的问题】</em></strong></p><p>从外部主动发起的访问经过 firewall 可以顺利完成通信，但从内部主动发起的通信失败。<br>从下图的TTL可以看出，从外部主动访问内部完成了引流：</p><p><img src="https://sirius21c-1256566528.cos.ap-beijing.myqcloud.com/openstack/neutron/firewall%E5%BC%95%E6%B5%81%E5%9B%9E%E6%B3%A8ingress%E6%B5%81%E9%87%8F%E6%8A%B5%E8%BE%BE%E7%9B%AE%E6%A0%87%E5%B9%B6%E5%BE%80%E8%BF%94%E7%BB%8F%E8%BF%87fw%E5%88%B0%E8%BE%BEnamespace%E7%9A%84%E8%AF%81%E6%98%8E.png" alt="firewall引流回注ingress流量抵达目标并往返经过fw到达namespace的证明.png"></p><p>从内部主动访问外部，在 qg 接口上无法抓到相应包，查看iptables发现流量没有顺利进行SNAT，反而匹配了下图中上面标红的规则，由该规则的out口策略确定流量从fw回注后进行路由时出现了错误：</p><p><img src="https://sirius21c-1256566528.cos.ap-beijing.myqcloud.com/openstack/neutron/firewall%E5%BC%95%E6%B5%81%E5%9B%9E%E6%B3%A8%E5%86%85%E9%83%A8%E4%B8%BB%E5%8A%A8%E8%AE%BF%E9%97%AE%E5%A4%B1%E8%B4%A5%E2%80%94%E2%80%94%E6%9F%A5%E7%9C%8Biptables%E7%9A%84nat%E8%A1%A8%E5%8C%B9%E9%85%8D.png" alt="firewall引流回注内部主动访问失败——查看iptables的nat表匹配"></p><p>反复确认路由规则，并无问题，后面为了排除mark有效域等可能影响的因素，也同样使用PBR将流量强行导向 qg 口，然而iptables的匹配情况并无改善。图中匹配上SNAT的一条记录是删除上面那条标红规则匹配上的，但仍无法进行正确路由，未从根本上解决问题。</p><p>从外部发起的连接，匹配DNAT，Linux会有CT模块（connection_tracker）跟踪连接，该数据流就只有第一个包进行匹配，其余跟随装换。同理，回去的数据包并没有匹配SNAT规则，直接进行了转换。<br>但CT模块应该不可能略过路由，这就说明路由并没有问题，<del>这和昨天研究的从内部发起连接的流量由于路由导致匹配规则出现问题的结论相悖。</del></p><p><strong>（更新二）</strong></p><p>从内部主动访问外部 iptables 匹配错误并不是由于路由造成的，那个匹配中的数据包是数据第一次进入 namespace 匹配上的，而由于 iptables 的 connection track 机制导致从 firewall 回流的数据与该数据认为是同一个数据流，不再另行匹配 iptables 规则，导致通信失败。</p><p>为解决该问题使用 raw 表解除该流量的 CT ：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip netns exec qrouter-xxx iptables -t raw -A PREROUTING -i qr-vm -j NOTRACK</span><br></pre></td></tr></table></figure></p><p>验证发现从内部访问外部已经正常，引流也没有出现问题，但从外部访问内部又出现了问题。</p><p>在连接虚机所在子网的 qr 接口上抓包发现数据报文被修改了源地址，由外部IP修改成了 qg 桥用来做端口复用的的IP：<br><img src="https://sirius21c-1256566528.cos.ap-beijing.myqcloud.com/openstack/neutron/neutron%E5%B0%86%E4%BB%8E%E9%9D%9Eqg%E6%A1%A5%E8%BF%9B%E6%9D%A5%E7%9A%84dnat%E6%B5%81%E9%87%8F%E8%BF%9B%E8%A1%8C%E4%BA%86snat%E7%8E%B0%E8%B1%A1.png" alt="neutron将从非qg桥进来的dnat流量进行了snat现象"></p><p>查看iptables规则，发现在 nat 表存在这样一条规则：<br><img src="https://sirius21c-1256566528.cos.ap-beijing.myqcloud.com/openstack/neutron/neutron%E5%B0%86%E4%BB%8E%E9%9D%9Eqg%E6%A1%A5%E8%BF%9B%E6%9D%A5%E7%9A%84dnat%E6%B5%81%E9%87%8F%E8%BF%9B%E8%A1%8C%E4%BA%86snat.png" alt="neutron将从非qg桥进来的dnat流量进行了snat"></p><p>暂不考虑次生问题，先把这条规则干掉，再次在连接虚机所在子网的 qr 接口上抓包，与预期一致，但还是通信失败。<br>接着排查发现回复的数据包进了firewall，却没有吐回来:<br><img src="https://sirius21c-1256566528.cos.ap-beijing.myqcloud.com/openstack/neutron/firewall%E6%B2%A1%E6%9C%89%E5%9B%9E%E5%90%90%E6%B5%81%E9%87%8F%E8%AF%81%E6%98%8E.png" alt="firewall没有回吐流量证明"></p><p>以icmp流量进行分析，是因为返回报文的 identifier 字段不一致导致 firewall 无法建立session：<br><img src="https://sirius21c-1256566528.cos.ap-beijing.myqcloud.com/openstack/neutron/icmp%E9%AA%8C%E8%AF%81%E5%AD%97%E6%AE%B5%E4%B8%8D%E4%B8%80%E8%87%B41.png" alt="icmp验证字段不一致1"><br><img src="https://sirius21c-1256566528.cos.ap-beijing.myqcloud.com/openstack/neutron/icmp%E9%AA%8C%E8%AF%81%E5%AD%97%E6%AE%B5%E4%B8%8D%E4%B8%80%E8%87%B42.png" alt="icmp验证字段不一致2"></p><p>根据环境推测，造成 identifier 字段不一样的原因是报文经过路由后为了保持该字段与下一跳一致会进行改变，取消 connection track 后这样的修改就没有进行。<br>预估就算 firewall 把流量吐回来，由于回复流量也被取消了ct，可能会出现其他问题，比如不能基于 ct 直接进行 snat 出去，需要自行匹配 snat 规则，tcp 会话是否能成功建立也有待验证。</p><p>该问题暂时无解，尝试取消从连接 firewall 子网的 qr 接口进来的流量的 ct，发现从双向发起的通信都无法完成，分析如下：</p><ul><li>会话由外部发起<br>由于从 firewall 回注入 namespace ct记录的缺失，从vm 返回 namespace 的流量直接根据 ct 进行了snat，在连接firewall子网的qr 接口上抓包可见现象如下：<br><img src="https://sirius21c-1256566528.cos.ap-beijing.myqcloud.com/openstack/neutron/%E7%94%B1%E4%BA%8Ect%E7%BC%BA%E5%A4%B1%E5%AF%BC%E8%87%B4%E9%94%99%E8%AF%AF%E8%BF%9B%E8%A1%8C%E4%BA%86snat.png" alt="由于ct缺失导致错误进行了snat"></li><li>会话由内部发起<br>egress方向上从qg接口上出去时，由于使用raw表取消的ct，同时导致略过了snat：<br><img src="https://sirius21c-1256566528.cos.ap-beijing.myqcloud.com/openstack/neutron/raw%E8%A1%A8%E5%8F%96%E6%B6%88ct%E5%AF%BC%E8%87%B4%E7%95%A5%E8%BF%87%E4%BA%86snat.png" alt="raw表取消ct导致略过了snat"></li></ul><p><strong>（更新三）</strong><br>在 namespace 连接 firewall 所在子网的接口上，取消目的 IP 为 client 所在子网的 CIDR 的流量的 CT<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip netns exec qrouter-xxx iptables -t raw -A PREROUTING -i qr-fw -d cidr-vm -j NOTRACK</span><br></pre></td></tr></table></figure></p><p>顺利完成测试。</p><p>另外进行补充两点：</p><ul><li>只进行单向引流，回注回 namespace 的流量会被直接 drop ，这是由于未做返回流量的引流前，关于流量的路由结果逃出接口前后不相符，从而导致直接丢包。</li><li>新加的这条取消 CT 的操作，将使流量直接略过更新二中所提到的有影响的 snat 规则，则现在不需要特别对其进行删除了。</li></ul><h3 id="总结-·-环境快速搭建指北"><a href="#总结-·-环境快速搭建指北" class="headerlink" title="总结 · 环境快速搭建指北"></a>总结 · 环境快速搭建指北</h3><h4 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h4><ul><li>client 虚机<br>启动一台虚机，用于测试引流后，和外部的通信情况。（之后可以在启动第二台，用于验证租户内部通信情况）</li><li><p>360_fw 镜像实例<br>在不改变流量报文的情况下将流量引过来，提供安全服务。</p><ul><li><p>关闭该实例的 neutron 端口的端口安全和安全组，使 fw 的 port 可以接受其它IP的流量（fw回注流量）。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">neutron port-update --no-security-groups --port_security_enabled=False port-id-fw</span><br></pre></td></tr></table></figure></li><li><p>firewall 镜像实例的各种相关安全策略也要放开（在 fw 上配置），为方便测试打开了全部。<br><img src="https://sirius21c-1256566528.cos.ap-beijing.myqcloud.com/openstack/neutron/360%E7%9A%84firewall%E5%AF%B9%E8%BD%AC%E5%8F%91%E6%B5%81%E9%87%8F%E5%85%A8%E9%83%A8%E6%94%BE%E5%BC%80.png" alt="360的firewall对转发流量全部放开"></p></li></ul></li></ul><h4 id="引流策略"><a href="#引流策略" class="headerlink" title="引流策略"></a>引流策略</h4><ul><li><p>在 qrouter 的 namespace 中新建一个独立的路由表为PBR服务，下一跳指向fw</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip netns exec qrouter-xxx ip route add default via add-fw dev qr-fw table 100</span><br></pre></td></tr></table></figure></li><li><p>egress引流</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip netns exec qrouter-xxx ip rule add dev qr-vm table 100</span><br></pre></td></tr></table></figure></li><li><p>ingrees引流</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip netns exec qrouter-xxx ip rule add dev qg-xxx to dst-address-cidr table 100</span><br></pre></td></tr></table></figure></li><li><p>在 namespace 连接 client 所在子网的接口上取消 CT 记录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip netns exec qrouter-xxx iptables -t raw -A PREROUTING -i qr-vm -j NOTRACK</span><br></pre></td></tr></table></figure></li><li><p>在 namespace 连接 firewall 所在子网的接口上，取消目的 IP 为 client 所在子网的 CIDR 的流量的 CT</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip netns exec qrouter-xxx iptables -t raw -A PREROUTING -i qr-fw -d cidr-vm -j NOTRACK</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> technology </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openstack </tag>
            
            <tag> neutron </tag>
            
            <tag> firewall对接 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>openstack中引入firewall镜像方案概述</title>
      <link href="/2018/05/20/openstack%E4%B8%AD%E5%BC%95%E5%85%A5firewall%E9%95%9C%E5%83%8F%E6%96%B9%E6%A1%88%E6%A6%82%E8%BF%B0/"/>
      <url>/2018/05/20/openstack%E4%B8%AD%E5%BC%95%E5%85%A5firewall%E9%95%9C%E5%83%8F%E6%96%B9%E6%A1%88%E6%A6%82%E8%BF%B0/</url>
      
        <content type="html"><![CDATA[<h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>随着云计算的发展，安全方面得到越来越多的重视，但云安全这块领域应该才算刚起步，目前各个传统安全厂商将各自的安全产品云化也只是将镜像抠出来部署进云环境，然后使用传统的处理方式将流量引入安全设备进行处理。<br>本文主要讲述如何将 firewall 镜像引入 openstack 平台进行使用，firewall 以 360 镜像为例。</p><h3 id="方案概述"><a href="#方案概述" class="headerlink" title="方案概述"></a>方案概述</h3><h4 id="透明部署"><a href="#透明部署" class="headerlink" title="透明部署"></a>透明部署</h4><p>透明模式，顾名思义，采用无IP方式运行，用户将不必重新设定和修改路由，防火墙就可以直接安装和放置到网络中使用，如交换机一样不需要设置IP地址。<br>透明模式的防火墙就好像是一台网桥(非透明的防火墙好像一台路由器)，网络设备(包括主机、路由器、工作站等)和所有计算机的设置(包括IP地址和网关)无须改变。但是，防火墙透明模式与网桥存在不同，防火墙接收到的IP报文还需要（解析所有通过它的数据包）送到上层进行相关过滤等处理，通过检查会话表或ACL规则以确定是否允许该报文通过；此外，还要完成其它防攻击检查。透明模式的防火墙支持ACL规则检查、ASPF状态过滤、防攻击检查、流量监控等功能。因此既增加了网络的安全性，又降低了用户管理的复杂程度。<br>当防火墙工作在透明模式（也可以称为桥接模式）下时，所有接口都不能配置IP地址，接口所在的安全区域是二层区域，和二层区域相关接口连接的外部用户同属一个子网。当报文在二层区域的接口间进行转发时，需要根据报文的MAC地址来寻找出接口，此时防火墙表现为一个透明网桥。<br>工作在透明模式下的防火墙在数据链路层连接局域网（LAN），网络终端用户无需为连接网络而对设备进行特别配置，就像使用以太网交换机一样进行网络连接，避免了改变拓扑结构造成的麻烦。<br>那在openstack环境中，该模式下的 firewall 该如何引入呢？可以将 firewall 镜像实例直接起在租户网络上，通过 networking-sfc 来强制将流量导入导出虚拟机，示例图如下：</p><p><img src="https://sirius21c-1256566528.cos.ap-beijing.myqcloud.com/openstack/neutron/firewal%E5%AF%B9%E6%8E%A5-%E9%80%8F%E6%98%8E%E9%83%A8%E7%BD%B2.png" alt="firewall对接-透明模式"></p><p>如图所示，在 networking-sfc 中，流量的转发不经过传统 neutron 的转发规则限制，而是强制定向从某个虚拟机端口到达另一个虚拟机端口，这样的好处在于将所有的流量强制定向到防火墙进行安全审计，缺点如下：</p><ul><li>不适宜扩展，因为对于每一个虚机会单独生成一个 neutron port 绑定。</li><li>对于每一个用户虚机的创建，租户必须手动（或者集成 networking-sfc 以及 firewall 操作）创建 firewall 规则。</li></ul><p>因此不建议使用这种透明部署方案。</p><h4 id="L3部署"><a href="#L3部署" class="headerlink" title="L3部署"></a>L3部署</h4><p>对租户而言，看到的有两种网络，project 网络（即租户网络）和 provide 网络。<br>project 网络是用户按需提供（self-provisioned and on-demand），provide 网络一般来说是管理员预定义的网络来提供外部连通性。因此租户一般不单独操作外部网络提供的借口（加入/离开）以外的资源。以下提供三种方案：</p><h5 id="租户网络内部L3部署——旁挂引流回注（目前采用的方案）"><a href="#租户网络内部L3部署——旁挂引流回注（目前采用的方案）" class="headerlink" title="租户网络内部L3部署——旁挂引流回注（目前采用的方案）"></a>租户网络内部L3部署——旁挂引流回注（目前采用的方案）</h5><p>使用类似于“物理旁挂，逻辑串联”的方式旁挂在 qrouter 旁。<br>根据用户的需求，是否使用PBR将流量引入FW，需要则在qrouter的namespace写入iptables策略，不需要则删掉策略。<br>拓扑如下图所示：</p><p><img src="https://sirius21c-1256566528.cos.ap-beijing.myqcloud.com/openstack/neutron/firewall%E5%AF%B9%E6%8E%A5--%E7%A7%9F%E6%88%B7%E7%BD%91%E7%BB%9C%E9%83%A8%E7%BD%B2%E4%B9%8B%E6%97%81%E6%8C%82%E5%BC%95%E6%B5%81%E5%9B%9E%E6%B3%A8.png" alt="租户网络内部L3部署——旁挂引流回注"></p><p>该方式简单易行，只将 firewall 作为一个类似于feature 的实现，可以灵活的加载与卸载，当然切换中会有一定时间段的丢包。<br>开发则需要复用 neutron-server 的代码提供出自己的 API ，再写一个 plugin 调用 drive 向 namespace 写入和删除规则即可。</p><h5 id="租户网络内部L3部署——替代qrouter"><a href="#租户网络内部L3部署——替代qrouter" class="headerlink" title="租户网络内部L3部署——替代qrouter"></a>租户网络内部L3部署——替代qrouter</h5><p>这是一种租户自己利用 firewall 功能实现 neutron l3 转发的功能，部署示例如下所示：</p><p><img src="https://sirius21c-1256566528.cos.ap-beijing.myqcloud.com/openstack/neutron/%E7%A7%9F%E6%88%B7%E7%BD%91%E7%BB%9C%E5%86%85%E9%83%A8L3%E9%83%A8%E7%BD%B2%E2%80%94%E6%9B%BF%E4%BB%A3qrouter.png" alt="租户网络内部L3部署——替代qrouter"></p><p>如上图所示，假设给定的租户网络 192.168.1.0/24 ，其中网关为 192.168.1.1 ，在创建网络的时候不再创建 l3 neutron router 。将创建一个 192.168.1.1 的 neutron port ，和从 provider 网络中创建一个 neutron port 作为外部接口。接下来将两个端口附加到 firewall 实例上，至此完成 l3 部署的网络拓扑，然后租户对 firewall 进行配置完后 l3 功能。</p><p>这样做存在以下限制：</p><ul><li>tripleo部署的环境不允许在 public 网络里建立虚机，且需要手动使用建立 neutron port，再使用 nova attach 上去。</li><li>完全摒弃了neutron L3 的部署，以及诸如 L3 HA 等很多 features 。</li><li>防火墙必须对租户授权。</li></ul><h5 id="provider-网络-L3-部署"><a href="#provider-网络-L3-部署" class="headerlink" title="provider 网络 L3 部署"></a>provider 网络 L3 部署</h5><p>这种部署方案下，我们认为 firewall 服务属于管理员资源，部署拓扑参考如下：</p><p><img src="https://sirius21c-1256566528.cos.ap-beijing.myqcloud.com/openstack/neutron/provider%20%E7%BD%91%E7%BB%9C%20L3%20%E9%83%A8%E7%BD%B2.png" alt="provider 网络 L3 部署"></p><p>如上图所示，在租户网络外建立一个建的（fake）provider 来对租户网络提供带有 firewall 网络的 provider network ，对租户网络而言，所看到的 provider 网络就是这个假的 provider 网络。Firewall 实例由管理员部署，这样，租户网络保留原来的网络功能，防火墙所看到的是虚拟机 nat 地址和 floating-ip 地址，因此，防火墙需要正确的将这些地址映射到外部网络。<br>这种部署方案的最大好处在于保留租户网络原有的 L3 功能，provider 网络来提供防火墙的功能。<br>PS：这个假的 provider 网络同样也可以使用真实的 provider，流量同样要到 firewall 走一遍，但这种情形下的优点是 nat 可以解决 1:1 nat  和 1:n nat 功能的部署复杂性，防火墙能直接将 floating-ip 和 vm fixed-ip 来进行映射，使用 fake provider 则不可行，只能使用 1:n 的snat 。</p>]]></content>
      
      
      <categories>
          
          <category> technology </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openstack </tag>
            
            <tag> neutron </tag>
            
            <tag> firewall对接 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>uos和csmp对接方案概述</title>
      <link href="/2018/05/09/uos%E5%92%8Ccsmp%E5%AF%B9%E6%8E%A5%E6%96%B9%E6%A1%88%E6%A6%82%E8%BF%B0/"/>
      <url>/2018/05/09/uos%E5%92%8Ccsmp%E5%AF%B9%E6%8E%A5%E6%96%B9%E6%A1%88%E6%A6%82%E8%BF%B0/</url>
      
        <content type="html"><![CDATA[<h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>为了弥补openstack当前环境中较为匮乏的安全解决方案，引入 360 的 csmp（也是一个openstack环境，内附各种安全设备镜像），通过在 underlay 进行引流回注完成对接，方案架构如下图所示：</p><p><img src="https://sirius21c-1256566528.cos.ap-beijing.myqcloud.com/openstack/neutron/uos%26csmp%E5%AF%B9%E6%8E%A5%E6%96%B9%E6%A1%88%E6%80%BB%E8%A7%88%E5%9B%BE.png" alt="uos&amp;csmp对接总览图"></p><h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><p>uos 的用户分为 vxlan 租户和 vlan 租户, csmp 据目前了解全部为 vlan 租户。<br>csmp的安全产品分为网关类和非网关类产品。</p><p>首先，对于租户的东西流量，vxlan 无解，vlan 流量在存在下层接入交换机的情况下，无法完全截获，且二层不好控流。对于租户的南北流量，在有对网关类安全产品需求的情况下，采用策略路由和静态路由的方式将双向流量引入安全资源池。原理如下（鉴于waf不同的部署方式，以此分类阐述）：</p><ul><li>waf透明模式<ul><li>out方向：用户端（vlanX）访问服务端（vlanY）流量通过交换机做PBR（以vlanX设备源IP做策略路由）将流量引入虚拟安全资源池（vlanZ）中的防火墙设备，防火墙处理完毕后通过策略路由（以vlanX设备源IP做策略路由）将流量引入WAF设备，WAF设备处理完毕后，将流量通过默认路由返回至交换机，交换机将流量转发至服务端（vlanY）。</li><li>in方向：服务端（vlanY）返回数据流量到客户端（vlanX）通过交换机做PBR（以vlanX设备目的IP做策略路由）将流量引入安全资源池（vlanZ）中的防火墙设备中，防火墙处理完毕后通过静态路由（以vlanX设备目的IP做静态路由或者策略路由）将流量引入WAF设备，WAF设备处理完毕后，将流量通过默认路由返回至交换机，交换机将流量转发至客户端（vlanX）。</li></ul></li><li>waf反向代理模式<ul><li>out方向：用户端（vlanX）访问服务端（vlanY）流量通过交换机做PBR（以WAF的目的IP做vlanX策略路由）将流量引入虚拟安全资源池（vlanZ）中的防火墙设备，防火墙处理完毕后会直接访问WAF设备IP，WAF设备处理完毕后源IP变为WAF的IP，同时将发往服务器的数据包先发至防火墙（由于防火墙是有状态的，需要通过数据首包创建Session），再由防火墙通过交换机发送至服务端（vlanY）。</li><li>in方向：服务端（vlanY）返回数据流量到客户端（vlanX）通过交换机做PBR（以WAF的目的IP做vlanY策略路由）将流量引入安全资源池（vlanZ）中的防火墙设备中，防火墙处理完毕后会直接访问WAF设备，WAF设备处理完毕后，WAF会通过交换机直接访问至客户端（vlanX）。</li></ul></li></ul><h3 id="可行性分析"><a href="#可行性分析" class="headerlink" title="可行性分析"></a>可行性分析</h3><ol><li>首先这种分离的架构决定了网关类安全产品只能使用旁挂部署，且东西流量无法控制，引流回注影响网络性能，需要设计 underlay 网络的策略。</li><li>对于vxlan租户南北流量，由于隐藏在 nat 之下，网关类产品控制力度很粗，非网关类产品流量源无法确定，比如堡垒机的基于IP的鉴权和审计，数据库审计源的主动获取等。网关类产品采取fip的方式解决，但是这里为了解决租户数量问题的意义将不存在；非网关类产品出了引入fip，可以采取360给出的轻代理方案，但是需要确定金融、政府等行业对此代理的侵入是否允许。</li><li>不需要更改各自的产品架构，无需另外开发，松耦合。</li></ol>]]></content>
      
      
      <categories>
          
          <category> technology </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openstack </tag>
            
            <tag> neutron </tag>
            
            <tag> security </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>INIT</title>
      <link href="/2018/05/07/INIT/"/>
      <url>/2018/05/07/INIT/</url>
      
        <content type="html"><![CDATA[<h3 id="Hello-World"><a href="#Hello-World" class="headerlink" title="Hello World"></a>Hello World</h3><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=31273654&auto=0&height=66"></iframe><p>之前一直没有写文档的习惯，顶多一些易忘的，比如操作记录会零散地记录在OneNote、有道云等，关于曽分析过的各种逻辑还真没系统地记录过。</p><p>曾信誓旦旦地以为绝不会忘记的东西都渐渐地败在了时间的脚下，特别是随着现在接触的技术栈越来越多、越来越深，偶尔突然切到某个曽深刻探讨过的问题，嗯，又要再来一遍的感觉，0.0，我需要一股唤醒深处记忆的力量，哈哈哈。</p><p>另外，也希望可以将自己遇到的问题、解决的方法、思考逻辑等分享出来，与君共成长，毕竟也终是踏上了开源这条伟大的道路。</p><p>再另外，也偶尔记录记录自己的生活或心情吧。慢慢地感觉这个时代的各种社交我貌似有点疲倦了，偶尔回到这个算是有点年代的世界看看吧。0.0，这该不是上年龄了吧（怎么可能？！）……</p><p>哈哈，有位挚友曾在我22岁生日送给我一句话，“愿再十年还少年！”，现在也送给有缘看到我博客的你。</p><p>自此，一位不爱写文档的码农，开始踏上一条自我救赎的道路。</p><p><code>print(&quot;Hello world!&quot;)</code></p>]]></content>
      
      
      <categories>
          
          <category> emotion </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
